1->[('CACM-1657', ['implementation of the sharer2 time sharing system a simple mechanism', 'is described for the execution of part of a program', 'with its own memory protection this allows such a program', 'to act as a suboperating system an improved version of', 'the sharer time sharing system using this feature is described', 'cacm december 1968 harrison m c operating system memory protection', 'time sharing multiprogramming monitor submonitor suboperating system 4.32 4.31 4.32', 'ca681209 jb february 21 1978 1:27 pm']), ('CACM-2319', ['operating system performance an overview of the current and future', 'positions with respect to operating system performance is given while', 'a great deal of information and a large number of', 'models for subsystems have been developed gaps still exist in', 'out knowledge because of the severe interactions between the various', 'subsystems of an operating system an overall model of the', 'total system must be developed to be able to analyze', 'and design the performance aspects of an operating system although', 'such total system designs are exceptional today it is projected', 'that they will become increasingly more common and necessary in', 'the near future such a design philosophy will clearly have', 'a severe impact on the way we go about modularizing', 'operating and computer systems cacm july 1972 lynch w c', 'computer system operating system performance evaluation performance measurement measurement techniques', 'modularity layering structured programming paging virtual memory input output disk', 'storage facility drum storage facility sector queueing 4.30 6.20 ca720709', 'jb january 30 1978 2:33 pm']), ('CACM-2629', ['the unix time sharing system unix is a general purpose', 'multi user interactive operating system for the digital equipment corporation', 'pdp-11 40 and 11 45 computers it offers a number', 'of features seldom found even in larger operating systems including', '1 a hierarchical file system incorporating demountable volumes 2 compatible', 'file device and inter process i o 3 the ability', 'to initiate asynchronous processes 4 system command language selectable on', 'a per user basis and 5 over 100 subsystems including', 'a dozen languageshis paper discusses the nature and implementation of', 'the file system and of the user command interface cacm', 'july 1974 ritchie d m thompson k time sharing operating', 'system file system command language pdp-11 4.30 4.32 ca740702 jb', 'january 17 1978 1:40 pm']), ('CACM-2151', ['user program measurement in a time shared environment a general', 'discussion of the measurement of software systems is followed by', 'a description of a hardware and software scheme for measuring', 'user programs in a time shared environment the tx-2 computer', 'at mit lincoln laboratory was used for the implementation of', 'such a system and the characteristics of this implementation are', 'reported a scenario showing the system in use is presented', 'finally it is shown how other time sharing systems may', 'provide similar measuring facilities cacm october 1971 nemeth a g', 'rovner p d operating systems multiprogramming systems time sharing systems', 'software measurement user program measurement measurement technology tx-2 computer virtual', 'computers performance improvement 4.30 4.32 4.42 4.43 ca711005 jb february', '2 1978 1:05 pm']), ('CACM-1410', ['interarrival statistics for time sharing systems the optimization of time', 'shared system performance requires the description of the stochastic processes', 'governing the user inputs and the program activity this paper', 'provides a statistical description of the user input process in', 'the sdc arpa general purpose time sharing system tss the', 'input process is assumed to be stationary and to be', 'defined by the interarrival time distribution the data obtained appear', 'to justify satisfactorily the common assumption that the interarrival times', 'are serially independent the data do not appear to justify', 'except as a very rough approximation the usual assumption off', 'an exponential distribution for interarrival time a much more satisfactory', 'approximation to the data can be obtained with a biphase', 'or triphase hyperexponential distribution cacm july 1966 coffman e g', 'wood r c ca660704 jb march 2 1978 9:45 pm'])]
2->[('CACM-2434', ['using page residency to select the working set parameter denning', 's method for selecting the working set parameter which uses', 'interreference intervals is examined several omissions in his model are', 'noted and new assumptions are introduced to overcome these omissions', 'using this modified model dening s results on page residency', 'are rederived and reconsidered for selecting the working set parameter', 'cacm october 1973 prieve b g working set model paging', 'program behavior program modeling 4.3 ca731006 jb january 20 1978', '11:34 am']), ('CACM-3078', ['analysis of the availability of computer systems using computer aided', 'algebra analytical results related to the availability of a computer', 'system constructed of unreliable processors are presented in this paper', 'these results are obtained by using various computer aided algebraic', 'manipulation techniques a major purpose of this paper is to', 'demonstrate that the difficulties of obtaining analytical solutions to markov', 'processes can be considerably reduced by the application of symbol', 'manipulation programs since many physical systems can be modeled by', 'markov and semi markov processes the potential range of application', 'of these techniques is much wider than the problem of', 'availability analyzed here cacm july 1978 chattergy r pooch u', 'computer aided algebra symbol manipulation markov process reliability redundant structures', 'on line computer system 3.82 5.5 5.7 8.1 8.3 ca780710', 'dh february 7 1979 3:37 pm']), ('CACM-2863', ['vmin an optimal variable space page replacement algorithm a criterion', 'for comparing variable space page replacement algorithms is presented an', 'optimum page replacement algorithm called vmin is described and shown', 'to be optimum with respect to this criterion the results', 'of simulating vmin denning s working set and the page', 'partitioning replacement algorithms on five virtual memory programs are presented', 'to demonstrate the improvement possible over the known realizable variable', 'space algorithms cacm may 1976 prieve b g fabry r', 's demand paging performance measurement multilevel memory systems virtual memory', 'working set page replacement algorithms optimal page replacement 4.30 4.32', 'ca760508 jb january 4 1978 3:06 pm']), ('CACM-1046', ['a compiler building system developed by brooker and morris in', 'a number of articles published during the past two years', 'r a brooker and d morris joined by j rohl', 'in their most recent paper have presented a very interesting', 'programming system that they have developed for the ferranti atlas', 'computer the present paper describes some of the major features', 'of their system it expands on some points that the', 'original authors cover briefly and treats only very lightly some', 'topics to which they devote considerable space the purpose of', 'this paper is purely expository except in some very small', 'details and in some comments it does not intentionally depart', 'from or add to the material published in the listed', 'references cacm july 1964 rosen s ca640701 jb march 9', '1978 8:47 pm']), ('CACM-1014', ['machine controls for analysis of variance a major problem in', 'using the analysis of variance as the number of factors', 'increases is the exponential rise in the number of interactions', 'even though the experimenter may not be interested in these', 'interactions it is impossible to ignore them in most experimental', 'designs because of the problem of getting error terms it', 'is natural therefore to look to the computer to handle', 'the bulk of work involved in computing the interactions a', 'program device to get the computer to do this is', 'described cacm august 1964 weldon r j ca640816 jb march', '9 1978 6:37 pm'])]
3->[('CACM-2061', ['an algorithm for the construction of bounded context parsers an', 'algorithm is described which accepts an arbitrary context free grammar', 'and constructs a bounded context parser for it whenever such', 'a parser exists in the first part of the paper', 'the definition of a context free grammar and the working', 'of a bounded context parser are recalled the notion of', 'reduction class for a context free grammar is then introduced', 'and its connection with the structure of a bounded context', 'parser is indicated next pushdown automata which generate the different', 'reduction classes of a context free grammar are defined finally', 'the algorithm is described it essentially carries out an exhaustive', 'study of all possible runs of the pushdown automata generating', 'the reduction classes in the second part the utility of', 'the algorithm is discuss ed in the light of the', 'experience gained from its use in compiler design the algorithm', 'is claimed to be particularly useful in the simultaneous design', 'of a language and a compiler for it cacm may', '1970 loeckx j bounded context parsing bounded context syntactic analysis', 'parser construction syntactical analyzer construction generators compiler compilers compiler writing', 'systems translator writing systems metacompilers context free grammars formal languages', 'pushdown automata 4.12 5.22 5.23 ca700505 jb february 13 1978', '1:58 pm']), ('CACM-1988', ['a formalism for translator interactions a formalism is presented for', 'describing the actions of processors for programming languages compilers interpreters', 'assemblers and their interactions in complex systems such as compiler', 'compilers or extendible languages the formalism here might be used', 'to define and answer such a question as can one', 'do bootstrapping using a meta compiler whose metaphase is interpretive', 'in addition an algorithm is presented for deciding whether or', 'not a given system can be produced from a given', 'set of component processors cacm october 1970 earley j translator', 'compiler interpreter bootstrapping language processor compiler compiler 4.1 5.29 ca701002', 'jb february 10 1978 9:36 am']), ('CACM-1154', ['multi tape and infinite state automata a survey a survey', 'of machines which are more powerful than finite automata and', 'less powerful than general turing machines is presented it is', 'felt that the machines in this category are as closely', 'related to digital computers as either the finite automata or', 'the unrestricted turing machines intermediate machines can be created by', 'adjoining on infinite state memory to a finite state machine', 'and then performing any or all of the following 1', 'restrict the manner in which the unbounded portion of the', 'memory can be accessed 2 bound the number of steps', 'allowed for a computation by some increasing recursive function of', 'the length of the input 3 restrict the total amount', 'of memory available in the same manner examples from all', 'three classes and their properties are discussed cacm december 1965', 'fischer p c ca651215 jb march 6 1978 3:24 pm']), ('CACM-0799', ['design of a separable transition diagram compiler a cobol compiler', 'design is presented which is compact enough to permit rapid', 'one pass compilation of a large subset of cobol on', 'a moderately large computer versions of the same compiler for', 'smaller machines require only two working tapes plus a compiler', 'tape the methods given are largely applicable to the construction', 'of algol compilers cacm july 1963 conway m e ca630725', 'jb march 14 1978 8:11 am']), ('CACM-0265', ['low level language subroutines for use within fortran this paper', 'describes some subroutines coded in symbolic languages and for use', 'within fortran coded programs to deal with special arithmetic e', 'g multi precision arithmetic symbol manipulation bit manipulation and expanded', 'character set input output and visual display cacm november 1961', 'barnett m p ca611103 jb march 15 1978 10:59 pm'])]
4->[('CACM-2377', ['a hardware architecture for implementing protection rings protection of computations', 'and information is an important aspect of a computer utility', 'in a system which uses segmentation as a memory addressing', 'scheme protection can be achieved in part by associating concentric', 'rings of decreasing access privilege with a computation this paper', 'describes hardware processor mechanisms for implementing these rings of protection', 'the mechanisms for implementing these rings of protection the mechanisms', 'allow cross ring calls and subsequent returns to occur without', 'trapping to the supervisor automatic hardware validation of references across', 'ring boundaries is also performed thus a call by a', 'user procedure to a protected subsystem including the supervisor is', 'identical to a call to a companion user procedure the', 'mechanisms of passing and referencing arguments are the same in', 'both cases as well cacm march 1972 schroeder m d', 'saltzer j h protection protection rings protection hardware access control', 'hardware access control computer utility time sharing shared information segmentation', 'virtual memory multics 4.32 6.21 ca720304 jb january 31 1978', '2:58 pm']), ('CACM-3128', ['synchronization with eventcounts and sequencers synchronization of concurrent processes requires', 'controlling the relative ordering of events in the processes a', 'new synchronization mechanism is proposed using abstract objects called eventcounts', 'and sequencers that allows processes to control the ordering of', 'events directly rather than using mutual exclusion to protect manipulations', 'of shared variables that control ordering of events direct control', 'of ordering seems to simplify correctness arguments and also simplifies', 'implementation in distributed systems the mechanism is defined formally and', 'then several examples of its use are given the relationship', 'of the mechanism to protection mechanisms in the system is', 'explained in particular eventcounts are shown to be applicable to', 'situations where confinement of information matters an implementation of eventcount', 's and sequencers in a system with shared memory is', 'described cacm february 1979 reed d kanodia r process synchronization', 'interprocess communication distributed systems security models mutual exclusion semaphores 4.30', '4.32 ca790207 dh april 12 1979 10:03 am']), ('CACM-3043', ['distributed processes a concurrent programming concept a language concept for', 'concurrent processes without common variables is introduced these processes communicate', 'and synchronize by means of procedure calls and guarded regions', 'this concept is proposed for real time applications controlled by', 'microcomputer networks with distributed storage the paper gives several examples', 'of distributed processes and shows that they include procedures coroutines', 'classes monitors processes semaphores buffers path expressions and input output', 'as special cases cacm november 1978 hansen p concurrent programming', 'distributed processes microprocessor networks nondeterminism guarded regions programming languages process', 'communication and scheduling sorting arrays coroutines classes monitors processes semaphores', 'buffers path expressions input output 3.8 4.2 4.22 4.32 5.24', 'ca781108 dh january 26 1979 10:40 am']), ('CACM-2939', ['abstraction mechanisms in clu clu is a new programming language', 'designed to support the use of abstractions in program construction', 'work in programming methodology has led to the realization that', 'three kinds of abstractions procedural control and especially data abstractions', 'are useful in the programming process of these only the', 'procedural abstraction is supported well by conventional languages through the', 'procedure or subroutine clu provides in addition to procedures novel', 'linguistic mechanisms that support the use of data and control', 'abstractions this paper provides an in troduction to the abstraction', 'mechanisms in clu by means of programming examples the utility', 'of the three kinds of abstractions in program construction is', 'illustrated and it is shown how clu programs may be', 'written to use and implement abstractions the clu library which', 'permits incremental program development with complete type checking performed at', 'compile time is also discussed cacm august 1977 liskov b', 'snyder a atkinson r schaffert c programming languages data types', 'data abstractions control abstractions programming methodology separate compilation 4.0 4.12', '4.20 4.22 ca770804 jb december 28 1977 7:49 am']), ('CACM-2376', ['synchronization of communicating processes formalization of a well defined synchronization', 'mechanism can be used to prove that concurrently running processes', 'of a system communicate correctly this is demonstrated for a', 'system consisting of many sending processes which deposit messages in', 'a buffer and many receiving processes which remove messages from', 'that buffer the formal description of the synchronization mechanism makes', 'it very easy to prove that the buffer will neither', 'overflow nor underflow that senders and receivers will never operate', 'on the same message frame in the buffer nor will', 'they run into a deadlock cacm march 1972 habermann a', 'n parallel programming multiprogramming program correctness process communication process scheduling', '4.30 4.32 4.39 4.9 ca720305 jb january 31 1978 2:44', 'pm'])]
5->[('CACM-1829', ['an interactive graphical display monitor in a batch processing environment', 'with remote entry a graphic monitor program is described it', 'was developed at carnegie mellon university for the cdc g21', 'computer which is a general purpose batch processing system with', 'remote entry the existing g21 system and the graphics hardware', 'are described the graphic monitor is a resident auxiliary monitor', 'which provides comprehensive managerial capability over the graphical system in', 'response to commands from the human user it also will', 'respond to commands from a user program through a similar', 'interface where routine calls take the place of manual actions', 'thus the human and program can interact on a symmetrical', 'and equal basis through the medium of the graphic monitor', 'the choice made in designing the graphic monitor given the', 'constraints of the existing hardware and computer system are discussed', 'the structure of the monitor program and the human and', 'program interfaces are described there is also a transient swapping', 'version with a small resident part and provision for swapped', 'used submonitors cacm november 1969 bond a h rightnour j', 'graphic monitor man machine interaction graphic interface graphic in batch', 'environment design of graphical system 4.30 4.31 4.39 4.41 ca691101', 'jb february 15 1978 1:22 pm']), ('CACM-2321', ['on the interface between computers and data communications systems future', 'systems that combine computers digital terminals and communications equipment present', 'design optimization problems that require reconsideration of the traditional functional', 'responsibilities of the respective subsystems several standard interfaces by means', 'of which computers and digital terminals connect to the communications', 'systems will be required when specifying these interfaces consideration must', 'be given to problems of coordination synchronization error control signaling', 'stream multiplexing and switch control in addition to minimizing the', 'technological interdependence of specific subsystem designs a focus on some', 'of the problems is obtained in a discussion of a', 'detailed specification for a particular computer communications system interface cacm', 'july 1972 fraser a g communications standard interface communications protocol', 'virtual channel multiplexed input output coordination of input output 3.81', '6.0 6.35 ca720707 jb january 30 1978 2:46 pm']), ('CACM-2035', ['conversational access to a 2048 word machine lap6 is an', 'on line system running on a 2048 word linc which', 'provides full facilities for text editing automatic filing and file', 'maintenance and program preparation and assembly it focuses on the', 'preparation and editing of continuously displayed 23,040 character text strings', 'manuscripts which can be positioned anywhere by the user and', 'edited by simply adding and deleting lines as though working', 'directly on an elastic scroll other features are available through', 'a uniform command set which itself can be augmented by', 'the user the machine although small aids program design by', 'providing display scope and premarked randomly addressable linc tapes as', 'standard items in an environment similar to that of a', 'sophisticated terminal the tapes are logically similar to a disk', 'priority was given to the design of efficient tape algorithms', 'to minimize the limitations of the small memory techniques developed', 'for handling scroll editing filing and the layered system structure', 'are outlined lap6 is used by about 2000 people in', '11 countries its design was strongly influenced by performance criteria', 'established in interviews held with linc users themselves during the', 'specification period cacm july 1970 wilkes m a conversational computer', 'access display editing display oriented system filing algorithms lap6 layering', 'linc man machine communication on line editing on line efficiency', 'on line environment scroll editing small machine system tape filing', 'tape oriented system text editing 3.73 4.10 4.11 4.19 4.22', '4.30 4.40 4.41 ca700702 jb february 13 1978 9:35 am']), ('CACM-2299', ['an extensible editor for a small machine with disk storage', 'a design philosophy for developing a sophisticated utility program is', 'illustrated by the actual design and implementation of a text', 'editor a versatile data structure is employed so that only', 'a small number of programmed subroutines are necessary for all', 'types of data manipulation such a data structure is described', 'and its merits are illustrated by the ease with which', 'powerful extensions can be implemented in terms of a few', 'basic editing function cacm august 1972 benjamin a j command', 'processing context searching executive program garbage collection interpreter list processing', 'macro language paging parameter substitution recursion state table storage allocation', 'string manipulation text editing virtual memory 3.73 3.74 3.75 4.13', '4.22 4.43 4.49 ca720803 jb january 30 1978 10:00 am']), ('CACM-2629', ['the unix time sharing system unix is a general purpose', 'multi user interactive operating system for the digital equipment corporation', 'pdp-11 40 and 11 45 computers it offers a number', 'of features seldom found even in larger operating systems including', '1 a hierarchical file system incorporating demountable volumes 2 compatible', 'file device and inter process i o 3 the ability', 'to initiate asynchronous processes 4 system command language selectable on', 'a per user basis and 5 over 100 subsystems including', 'a dozen languageshis paper discusses the nature and implementation of', 'the file system and of the user command interface cacm', 'july 1974 ritchie d m thompson k time sharing operating', 'system file system command language pdp-11 4.30 4.32 ca740702 jb', 'january 17 1978 1:40 pm'])]
6->[('CACM-2826', ['interactive skeleton techniques for enhancing motion dynamics in key frame', 'animation a significant increase in the capability for controlling motion', 'dynamics in key frame animation is achieved through skeleton control', 'this technique allows an animator to develop a complex motion', 'sequence by animating a stick figure representation of an image', 'this control sequence is then used to drive an image', 'sequence through the same movement the simplicity of the stick', 'figure image encourages a high level of interaction during the', 'design stage its compatibility with the basic key frame animation', 'technique permits skeleton control to be applied selectively to only', 'those components of a composite image sequence that require enhancement', 'cacm october 1976 burtnyk n wein m interactive graphics computer', 'generated animation key frame animation interactive skeleton control stick figure', 'animation 3.41 3.49 4.9 8.2 ca761005 jb january 3 1978', '4:24 pm']), ('CACM-2828', ['hierarchical geometric models for visible surface algorithms the geometric structure', 'inherent in the definition of the shapes of three dimensional', 'objects and environments is used not just to define their', 'relative motion and placement but also to assist in solving', 'many other problems of systems for producing pictures by computer', 'by using an extension of traditional structure information or a', 'geometric hierarchy five significant improvements to current techniques are possible', 'first the range of complexity of an environment is greatly', 'increased while the visible complexity of any given scene is', 'kept within a fixed upper limit second a meaningful way', 'is provided to vary the amount of detail presented in', 'a scene third clipping becomes a very fast logarithmic search', 'for the resolvable parts of the environment within the field', 'of view fourth frame to frame coherence and clipping define', 'a graphical working set or fraction of the total structure', 'that should be present in primary store for immediate access', 'by the visible surface algorithm finally the geometric structure suggests', 'a recursive descent visible surface algorithm in which the computation', 'time potentially grows linearly with the visible complexity of the', 'scene cacm october 1976 clark j h visible surface algorithms', 'hidden surface algorithms hierarchical data structures geometric models 5.31 8.2', 'ca761003 jb january 3 1978 4:42 pm']), ('CACM-0438', ['mechanical pragmatics a time motion study of a miniature mechanical', 'linguistic system cacm december 1962 gorn s ca621201 jb march', '17 1978 5:19 pm']), ('CACM-1543', ['computer formulation of the equations of motion using tensor notation', 'a means is described for extending the area of application', 'of digital computers beyond the numerical data processing stage and', 'reducing the need for human participation in the formulation of', 'certain types of computer problems by the use of tensor', 'calculus and a computer language designed to facilitate symbolic mathematical', 'computation a method has been devised whereby a digital computer', 'can be used to do non numeric work that is', 'symbolic algebraic manipulation and differentiation to illustrate the techniques involved', 'a digital computer has been used to derive the equations', 'of motion of a point mass in a general orthogonal', 'curvilinear coordinate system since this operation involves a formulation in', 'terms of first and second order differential coefficients it provides', 'a good demonstration of a computer s capability to do', 'non numeric work and to assist in the formulation process', 'which normally precedes the numerical data processing stage moreover this', 'particular problem serves to illustrate the advantages of the mathematical', 'techniques employed with the program prepared for this purpose the', 'computer will derive the equations of motion in any coordinate', 'system requested by the user results are presented for the', 'following coordinate systems cylindrical polar spherical polar and prolate spheroidal', 'cacm september 1967 howard j c ca670903 jb february 27', '1978 3:58 pm']), ('CACM-2230', ['a language for treating geometric patterns in a two dimensional', 'space in this paper cadep a problem oriented language for', 'positioning geometric patterns in a two dimensional space is presented', 'although the language has been specifically designed for the automatic', 'generation of integrated circuit masks it turns out to be', 'well suited also for such other placement problems as architecture', 'design urban planning logical and block diagram representation the design', 'criteria the structure and the specific features of cadep are', 'illustrated cacm january 1971 bracchi g ferrari d graphic language', 'problem oriented language two dimensional patterns graphic display fortran extension', 'layout problems integrated circuit architecture design urban planning 3.23 3.24', '3.25 4.22 ca710104 jb february 8 1978 11:17 am'])]
7->[('CACM-3043', ['distributed processes a concurrent programming concept a language concept for', 'concurrent processes without common variables is introduced these processes communicate', 'and synchronize by means of procedure calls and guarded regions', 'this concept is proposed for real time applications controlled by', 'microcomputer networks with distributed storage the paper gives several examples', 'of distributed processes and shows that they include procedures coroutines', 'classes monitors processes semaphores buffers path expressions and input output', 'as special cases cacm november 1978 hansen p concurrent programming', 'distributed processes microprocessor networks nondeterminism guarded regions programming languages process', 'communication and scheduling sorting arrays coroutines classes monitors processes semaphores', 'buffers path expressions input output 3.8 4.2 4.22 4.32 5.24', 'ca781108 dh january 26 1979 10:40 am']), ('CACM-2376', ['synchronization of communicating processes formalization of a well defined synchronization', 'mechanism can be used to prove that concurrently running processes', 'of a system communicate correctly this is demonstrated for a', 'system consisting of many sending processes which deposit messages in', 'a buffer and many receiving processes which remove messages from', 'that buffer the formal description of the synchronization mechanism makes', 'it very easy to prove that the buffer will neither', 'overflow nor underflow that senders and receivers will never operate', 'on the same message frame in the buffer nor will', 'they run into a deadlock cacm march 1972 habermann a', 'n parallel programming multiprogramming program correctness process communication process scheduling', '4.30 4.32 4.39 4.9 ca720305 jb january 31 1978 2:44', 'pm']), ('CACM-2912', ['concurrent reading and writing the problem of sharing data among', 'asynchronous process is considered it is assumed that only one', 'process at a time can modify the data but concurrent', 'reading and writing is permitted two general theorems are proved', 'and some algorithms are presented to illustrate their use these', 'include a solution to the general problem in which a', 'read is repeated if it might have obtained an incorrect', 'result and two techniques for transmitting messages between processes these', 'solutions do not assume any synchronizing mechanism other than data', 'which can be written by one process and read by', 'other processes cacm november 1977 lamport l asynchronous multiprocessing multiprocess', 'synchronization readers writers problem shared data 4.32 5.24 ca771104 jb', 'december 27 1977 7:47 am']), ('CACM-2949', ['a correctness proof of a topology information main tenance protocol', 'for a distributed computer network in order for the nodes', 'of a distributed computer network to communicate each node must', 'have information about the network s topology since nodes and', 'links sometimes crash a scheme is needed to update this', 'information one of the major constrain ts on such a', 'topology information scheme is that it may not involve a', 'central controller the topology information protocol that was implemented on', 'the merit computer network is presented and explained this protocol', 'is quite general and could be implemented on any computer', 'network it is based on baran s hot potato heuristic', 'routing doctrine a correctness proof of this topology information protocol', 'is also presented cacm july 1977 tajibnapis w d distributed', 'computer network correctness proofs computer networks distributed control network topology', 'routing problem in networks distributed operating system store and forward', 'packet switching store and forward message switching traffic control 3.81', '4.32 ca770703 jb december 28 1977 11:59 am']), ('CACM-3141', ['an improved algorithm for decentralized extrema finding in circular configurations', 'of processes this note presents an improvement to lelann s', 'algorithm for finding the largest or smallest of a set', 'of uniquely numbered processes arranged in a circle in which', 'no central controller exists and the number of processes is', 'not known a priori this decentralized algorithm uses a technique', 'of selective message extinction in order to achieve an average', 'number of message passes of order n log n rather', 'than o n2 cacm may 1979 chang e roberts r', 'decentralized algorithms distributed systems operating systems 4.32 4.35 5.25 5.32', 'ca790502 dh june 5 1979 2:35 pm'])]
8->[('CACM-2625', ['capability based addressing various addressing schemes making use of segment', 'tables are examined the inadequacies of these schemes when dealing', 'with shared addresses are explained these inadequacies are traced to', 'the lack of an efficient absolute address for objects in', 'these systems the direct use of a capability as an', 'address is shown to overcome these difficulties because it provides', 'the needed absolute address implementation of capability based addressing is', 'discussed it is predicted that the use of tags to', 'identify capabilities will dominate a hardware address translation scheme which', 'never requires the modification of the representation of capabilities is', 'suggested the scheme uses a main memory hash table for', 'obtaining a segment s location in main memory given its', 'unique code the hash table is avoided for recently accessed', 'segments by means of a set of associative registers a', 'computer using capability based addressing may be substantially superior to', 'present systems on the basis of protection simplicity of programming', 'conventions and efficient implementation cacm july 1974 fabry r s', 'addressing capabilities addressing hardware protection protection hardware shared addresses information', 'sharing operating systems computer utility segmentation tagged architecture 4.30 4.32', '4.34 6.21 ca740706 jb january 17 1978 12:39 pm']), ('CACM-2951', ['dynamic response time prediction for computer networks if the ultimate', 'aim of a computing network is resource sharing then the', 'human component as well as the technical component of networking', 'must be fully investigated to achieve this goal this research', 'is a first step toward assisting the user in participating', 'in the vast store of resources available on a network', 'analytical simulation and statistical performance evaluation tools are employed to', 'investigate the feasibility of a dynamic response time monitor that', 'is capable of providing comparative response time information for users', 'wishing to process various computing applications at some network computing', 'node the research clearly reveals that sufficient system data are', 'currently obtainable at least for the five diverse arpa network', 'systems studied in detail to describe and predict the response', 'time for network time sharing systems as it depends on', 'some measure of system activity or load level cacm july', '1977 mamrak s a response time monitor computer networks time', 'sharing systems comparative response time arpa network anlytic modeling simulation', 'benchmark jobs system measurement 4.6 6.20 8.1 ca770701 jb december', '28 1977 12:42 pm']), ('CACM-2541', ['an overview of the ispl computer system design this paper', 'explores the advantages of the concurrent design of the language', 'operating system and machine via microcode to create an interactive', 'programming laboratory it describes the synergistic effect that the freedom', 'to move and alter features from one of these domains', 'to another has had on the design of this system', 'which has not been implemented this freedom simplified both incremental', 'compilation and the system s addressing structure and centralized the', 'communication mechanisms enabling the construction of hierarchical subsystems it also', 'suggested an important new concept for operating systems separation of', 'the scheduling from the maintenance functions in resource allocation this', 'separation enables incorporation of new scheduling algorithms decision of what', 'to do without endangering the system integration correctly performing the', 'scheduling decisions cacm february 1973 balzer r m concurrent design', 'operating system scheduling interprogram communication incremental compilation virtual addressing debugging', 'hierarchical subsystems 4.0 4.13 4.22 4.30 4.32 4.41 4.42 6.20', 'ca730207 jb january 24 1978 1:59 pm']), ('CACM-2500', ['a practical approach to managing resources and avoiding deadlocks resource', 'scheduling and allocation can be expensive with regard to time', 'and space in multiprogramming or time sharing environments involving large', 'numbers of tasks and resources with conflicting requirements detection and', 'or prevention of deadlocks can require massive amounts of additional', 'overhead if efficient usage of resources is to be maintained', 'a resource management program is described which uses linked lists', 'along with other techniques to overcome a large portion of', 'this overhead the program which is currently running as part', 'of a large scale general purpose operating system keeps resources', 'relatively active but does not detect or prevent all deadlocks', 'in its implemented state certain changes which would permit more', 'comprehensive levels of deadlock prevention detection at additional cost have', 'not been incorporated in the running system due to the', 'infrequency of deadlock situations cacm may 1973 frailey d j', 'deadlock resource allocation scheduling resource management multiprogramming time sharing multiprocessing', 'deadly embrace 4.30 4.32 ca730520 jb january 23 1978 4:03', 'pm']), ('CACM-2776', ['computer networks in higher education socio economic political factors this', 'study presents the results of a nationwide survey of computer', 'networks in higher education conducted during 1971-73 five major and', '18 minor networks were identified the five major networks included', 'the arpa net the california state college network the university', 'of iowa iowa state university network the michigan educational research', 'information triad inc and the triangle universities computation center network', 'in north carolina in depth studies were conducted of the', 'latter two nets based on the experiences of these operating', 'networks a number of factors are identified for consideration in', 'developing networks finally recommendations are advanced regarding the development of', 'networks in higher education in the future cacm april 1975', 'chambers j a poore r v networks higher education 1.3', '2.45 ca750401 jb january 9 1978 4:17 pm'])]
9->[('CACM-2849', ['ethernet distributed packet switching for local computer networks ethernet is', 'a branching broadcast communication system for carrying digital data packets', 'among locally distributed computing stations the packet transport mechanism provided', 'by ethernet has been used to build systems which can', 'be viewed as either local computer networks or loosely coupled', 'multiprocessors an ethernet s shared communication facility its ether is', 'a passive broadcast medium with no central control coordination of', 'access to the ether for packet broadcasts is distributed among', 'the contending transmitting stations using controlled statistical arbitration switching of', 'packets to their destinations on the ether is distributed among', 'the receiving stations using packet address recognition design principles and', 'implementation are described based on experience with an operating ethernet', 'of 100 nodes along a kilometer of coaxial cable a', 'model for estimating performance under heavy loads and a packet', 'protocol for error controlled communication are included for completeness cacm', 'july 1976 metcalfe r m boggs d r computer networks', 'packet switching multiprocessing distributed control distributed computing broadcast communication statistical', 'arbitration 3.81 4.32 6.35 ca760704 jb january 4 1978 12:49', 'pm']), ('CACM-2949', ['a correctness proof of a topology information main tenance protocol', 'for a distributed computer network in order for the nodes', 'of a distributed computer network to communicate each node must', 'have information about the network s topology since nodes and', 'links sometimes crash a scheme is needed to update this', 'information one of the major constrain ts on such a', 'topology information scheme is that it may not involve a', 'central controller the topology information protocol that was implemented on', 'the merit computer network is presented and explained this protocol', 'is quite general and could be implemented on any computer', 'network it is based on baran s hot potato heuristic', 'routing doctrine a correctness proof of this topology information protocol', 'is also presented cacm july 1977 tajibnapis w d distributed', 'computer network correctness proofs computer networks distributed control network topology', 'routing problem in networks distributed operating system store and forward', 'packet switching store and forward message switching traffic control 3.81', '4.32 ca770703 jb december 28 1977 11:59 am']), ('CACM-3068', ['a model for verification of data security in operating systems', 'program verification applied to kernel architectures forms a promising method', 'for providing uncircumventably secure shared computer systems a precise definition', 'of data security is developed here in terms of a', 'general model for operating systems this model is suitable as', 'a basis for verifying many of those properties of an', 'operating system which are necessary to assure reliable enforcement of', 'security the application of this approach to the ucla secure', 'operating system is also discussed cacm september 1978 popek g', 'farber d operating systems security protection program verification 4.35 5.24', 'ca780904 dh february 5 1979 2:40 pm']), ('CACM-2372', ['on the implementation of security measures in information systems the', 'security of an information system may be represented by a', 'model matrix whose elements are decision rules and whose row', 'and column indices are users and data items respectively a', 'set of four functions is used to access this matrix', 'at translation and execution time distinguishing between data dependent and', 'data independent decision rules enables one to perform much of', 'the checking of security only once at translation time rather', 'than repeatedly at execution time the model is used to', 'explain security features of several existing systems and serves as', 'a framework for a proposal for general security system implementation', 'within today s languages and operating systems cacm april 1972', 'conway r w maxwell w l morgan h l security', 'privacy access control confidentiality operating systems access management data banks', 'management information systems 3.50 3.73 4.12 4.22 4.39 ca720401 jb', 'january 31 1978 1:59 pm']), ('CACM-2776', ['computer networks in higher education socio economic political factors this', 'study presents the results of a nationwide survey of computer', 'networks in higher education conducted during 1971-73 five major and', '18 minor networks were identified the five major networks included', 'the arpa net the california state college network the university', 'of iowa iowa state university network the michigan educational research', 'information triad inc and the triangle universities computation center network', 'in north carolina in depth studies were conducted of the', 'latter two nets based on the experiences of these operating', 'networks a number of factors are identified for consideration in', 'developing networks finally recommendations are advanced regarding the development of', 'networks in higher education in the future cacm april 1975', 'chambers j a poore r v networks higher education 1.3', '2.45 ca750401 jb january 9 1978 4:17 pm'])]
10->[('CACM-2785', ['glypnir a programming language for illiac iv glypnir is one', 'of the earliest existing languages designed for programming the illiac', 'iv computer the syntax of the language is based on', 'algol 60 but has been extended to allow the programmer', 'explicitly to specify the parallelism of his algorithm in terms', 'of 64 word vectors this paper describes the characteristics goals', 'and philosophy of the language and discusses some of the', 'problems associated with parallel computer architectures cacm march 1975 lawrie', 'd h layman t baer d randal j m glypnir', 'illiac iv programming language parallel computation parallel architecture 4.2 4.21', '4.22 ca750303jb january 9 1978 4:57 pm']), ('CACM-2700', ['reduction a method of proving properties of parallel programs when', 'proving that a parallel program has a given property it', 'is often convenient to assume that a statement is indivisible', 'i e that the statement cannot be interleaved with the', 'rest of the program here sufficient conditions are obtained to', 'show that the assumption that a statement is indivisible can', 'be relaxed and still preserve properties such as halting thus', 'correctness proofs of a parallel system can often be greatly', 'simplified cacm december 1975 lipton r j deadlock free reduction', 'interruptible indivisible parallel program semaphore verification method process computation sequence', '4.32 4.35 5.24 ca751207 jb january 5 1978 3:59 pm']), ('CACM-2266', ['a highly parallel algorithm for approximating all zeros of a', 'polynomial with only real zeros an algorithm is described based', 'on newton s method which simultaneously approximates all zeros of', 'a polynomial with only real zeros the algorithm which is', 'conceptually suitable for parallel computation determines its own starting values', 'so that convergence to the zeros is guaranteed multiple zeros', 'and their multiplicity are readily determined at no point in', 'the method is polynomial deflation used cacm november 1972 patrick', 'm l parallel numerical algorithms real polynomials real zeros newton', 's method starting values guaranteed convergence 5.15 ca721103 jb january', '27 1978 2:35 pm']), ('CACM-3075', ['fast parallel sorting algorithms a parallel bucket sort algorithm is', 'presented that requires time o log n and the use', 'of n processors the algorithm makes use of a technique', 'that requires more space than the product of processors and', 'time a realistic model is used model is used in', 'which no memory contention is permitted a procedure is also', 'presented to sort n numbers in time o k log', 'n using n 1 1 k processors for k an', 'arbitrary integer the model of computation for this procedure permits', 'simultaneous fetches from the same memory location cacm august 1978', 'hirschberg d parallel processing sorting algorithms bucket sort 3.74 4.34', '5.25 5.31 ca780803 dh february 7 1979 10:25 am']), ('CACM-1795', ['optimal code for serial and parallel computation cacm december 1969', 'fateman r j code optimization sequencing of operations detection of', 'common subexpressions 4.12 ca691217 jb february 15 1978 1:59 pm'])]
11->[('CACM-2699', ['automatic data structure choice in a language of very high', 'level setl is a set theoretically oriented language of very', 'high level whose repertoire of semantic objects includes finite sets', 'ordered n tuples and sets of ordered n tuples usable', 'as mappings this paper describes the structure of an optimizer', 'for this language among other methods of interest the optimizer', 'uses techniques which allow relations of inclusion and membership to', 'be established the domains and ranges of tabulated mappings to', 'be estimated from above and below and the single valuedness', 'of tabulated mappings to be proved once facts of this', 'kind have been established automatic choice of data structures becomes', 'possible the methods employed are based upon and extend known', 'techniques of data flow analysis cacm december 1975 schwartz j', 't program optimization automatic programming high level languages set theoretic', 'languages data structure choice 4.12 4.20 4.22 ca751208 jb january', '5 1978 3:53 pm']), ('CACM-1923', ['pseudofiles an approach to system interfaces for high level languages', 'using basic input output support facilities is described it is', 'shown that this technique can provide potentially inexpensive methods for', 'programs to communicate with deeply embedded facilities such as command', 'language processors cacm march 1969 rosin r f operating systems', 'interfaces input output high level languages command language 4.22 4.30', '4.31 4.41 ca690304 jb february 20 1978 9:12 am']), ('CACM-2782', ['a reply to gentleman and marovich cacm march 1975 karp', 'r a high level languages philosophy of language design 4.22', '5.19 ca750306 jb january 9 1978 4:38 pm']), ('CACM-2906', ['a very high level programming language for data processing applications', 'application development today is too labor in tensive in recent', 'years very high level languages have been increasingly explored as', 'a solution to this problem the business definition language bdl', 'is such a language one aimed at business data processing', 'problems the concepts in bdl mimic those which have evolved', 'through the years in businesses using manual methods this results', 'in three different sublanguages or components one for defining the', 'business forms one for describing the business organization and one', 'for writing calculations cacm november 1977 hammer m owe w', 'g kruskal v j wladawsky i very high level language', 'nonprocedural language data flow language business application business data processing', 'structured programming modular programming format specification and design methodology 3.50', '4.22 4.32 ca771110 jb december 27 1977 7:06 am']), ('CACM-2717', ['convert a high level translation definition language for data conversion', 'this paper describes a high level and nonprocedural translation definition', 'language convert which provides very powerful and highly flexible data', 'restructuring capabilities its design is based on the simple underlying', 'concept of a form which enables the users to visualize', 'the translation processes and thus makes data translation a much', 'simpler task convert has been chosen for conveying the purpose', 'of the language and should not be confused with any', 'other language or program bearing the same name cacm october', '1975 shu n c housel b c lum v y', 'data conversion data restructuring data translation database reorganization translation definition', 'utility program programming languages nonprocedural languages 3.50 3.75 4.29 4.4', '4.9 ca751002 jb january 6 1978 1:45 pm'])]
12->[('CACM-3127', ['thoth a portable real time operating system thoth isa real', 'time operating system which is designed to be portable over', 'a large set of machines it is currently running on', 'two minicomputers with quite different architectures both the system and', 'application programs which use it are written in a high', 'level language because the system is implemented by the same', 'software on different hardware it has the same interface to', 'user programs hence application programs which use thoth are highly', 'portable thoth encourages structuring programs as networks of communicating processes', 'by providing efficient interprocess communication primitives cacm february 1979 cheriton', 'd malcolm m melen l sager g portability real time', 'operating systems minicomputer 3.80 4.30 4.35 ca790206 dh april 12', '1979 9:10 am']), ('CACM-2246', ['levels of language for portable software an increasing amount of', 'software is being implemented in a portable form a popular', 'way of accomplishing this is to encode the software in', 'a specially designed machine independent language and then to map', 'this language often using a macro processor into the assembly', 'language of each desired object machine the design of the', 'machine independent language is the key factor in this operation', 'this paper discusses the relative merits of pitching this language', 'at a high level or a low level and presents', 'some comparative results cacm december 1972 brown p j portable', 'software level of language machine independent macro processor efficiency 4.12', '4.21 4.22 ca721209 jb january 27 1978 11:02 am']), ('CACM-3068', ['a model for verification of data security in operating systems', 'program verification applied to kernel architectures forms a promising method', 'for providing uncircumventably secure shared computer systems a precise definition', 'of data security is developed here in terms of a', 'general model for operating systems this model is suitable as', 'a basis for verifying many of those properties of an', 'operating system which are necessary to assure reliable enforcement of', 'security the application of this approach to the ucla secure', 'operating system is also discussed cacm september 1978 popek g', 'farber d operating systems security protection program verification 4.35 5.24', 'ca780904 dh february 5 1979 2:40 pm']), ('CACM-1930', ['extremely portable random number generator extremely portable subroutines are sometimes', 'needed for which moderate quality and efficiency suffice typically this', 'occurs for library functions like random number generation and in', 'core sorting which are not entirely universal or are not', 'used in a standardized way the literature on random number', 'generators does not seem to contain an algorithm that meets', 'requirements of this sort an extremely portable 8 line fortran', 'program is provided which based on an important paper by', 'coveyou and macpherson 1967 sing their methods fourier analysis is', 'applied to the probability function for the consecutive n tuples', 'provided by our generator with n less than or equal', 'to 4 while the small modulus which must be used', 'to maintain portability prevents the quality of the generator from', 'being high the generator compares well with the bounds established', 'in the above mentioned paper cacm february 1969 kruskal j', 'b random number generators random numbers random number analysis random', 'generators linear sequential generators random number program pseudo random numbers', '4.49 5.19 5.5 ca690208 jb february 20 1978 10:43 am']), ('CACM-2319', ['operating system performance an overview of the current and future', 'positions with respect to operating system performance is given while', 'a great deal of information and a large number of', 'models for subsystems have been developed gaps still exist in', 'out knowledge because of the severe interactions between the various', 'subsystems of an operating system an overall model of the', 'total system must be developed to be able to analyze', 'and design the performance aspects of an operating system although', 'such total system designs are exceptional today it is projected', 'that they will become increasingly more common and necessary in', 'the near future such a design philosophy will clearly have', 'a severe impact on the way we go about modularizing', 'operating and computer systems cacm july 1972 lynch w c', 'computer system operating system performance evaluation performance measurement measurement techniques', 'modularity layering structured programming paging virtual memory input output disk', 'storage facility drum storage facility sector queueing 4.30 6.20 ca720709', 'jb january 30 1978 2:33 pm'])]
13->[('CACM-1947', ['object code optimization methods of analyzing the control flow and', 'data flow of programs during compilation are applied to transforming', 'the program to improve object time efficiency dominance relationships indicating', 'which statements are necessarily executed before others are used to', 'do global common expression elimination and loop identification implementation of', 'these and other optimizations in os 360 fortran h are', 'described cacm january 1969 lowry e s medlock c w', 'compilers data flow analysis dominance efficiency fortran graph theory loop', 'structure machine instructions object code optimization redundancy elimination register assignment', 'system 360 4.12 5.24 5.32 ca690102 jb february 20 1978', '12:15 pm']), ('CACM-2559', ['the reallocation of hash coded tables when the space allocation', 'for a hash coded table is altered the table entries', 'must be rescattered over the new space a technique for', 'accomplishing this rescattering is presented the technique is independent of', 'both the length of the table and the hashing function', 'used and can be utilized in conjunction with a linear', 'reallocation of the table being rescattered moreover it can be', 'used to eliminate previously flagged deletions from any hash coded', 'table or to change from one hashing method to another', 'the efficiency of the technique is discussed and theoretical statistics', 'are given cacm january 1973 bays c reallocation dynamic storage', 'hash code scatter storage deletions 3.7 3.73 3.74 4.9 ca730102', 'jb january 24 1978 4:50 pm']), ('CACM-2897', ['a case study of a new code generation technique for', 'compilers recent developments in optimizing techniques have allowed a new', 'design for compilers to emerge such a compiler translates the', 'parsed source code into lower level code by a sequence', 'of steps each step expands higher level statements into blocks', 'of lower level code and then performs optimizations on the', 'result each statement has only one possible expansion the task', 'of tailoring this code to take advantage of any special', 'cases is done by the optimizations this paper provides evidence', 'that this strategy can indeed result in good object code', 'the traditionally difficult pl i concatenate statement was investigated as', 'a detailed example a set of fairly simple optimizations was', 'identified which allow the compiler to produce good code more', 'elaborate optimizations can further improve the object code for most', 'contexts of the concatenate statement the code produced by a', 'compiler using the expansion optimization strategy described above compares favorably', 'with the code produced by a conventional pl i optimizing', 'compiler cacm december 1977 carter j l compiler structure optimizing', 'compiler code generation pl i compiler concatenation program optimization optimization', 'techniques data flow analysis 4.12 4.13 4.22 ca771203 jb february', '1 1980 3:54 am']), ('CACM-1795', ['optimal code for serial and parallel computation cacm december 1969', 'fateman r j code optimization sequencing of operations detection of', 'common subexpressions 4.12 ca691217 jb february 15 1978 1:59 pm']), ('CACM-3080', ['proving the correctness of heuristically optimized code a system for', 'proving that programs written in a high level language are', 'correctly translated to a low level language is described a', 'primary use of the system is as a post optimization', 'step in code generation the low level language programs need', 'not be generated by a compiler and in fact could', 'be hand coded examples of the usefulness of such a', 'system are given some interesting results are the ability to', 'handle programs that implement recursion by bypassing the start of', 'the program and the detection and pinpointing of a wide', 'class of errors in the low level language programs the', 'examples demonstrate that optimization of the genre of this paper', 'can result in substantially faster operation and the saving of', 'memory in terms of program and stack sizes cacm july', '1978 samet h compilers correctness code optimization debugging program verification', 'lisp 4.12 4.21 4.22 5.24 ca780708 dh february 7 1979', '3:53 pm'])]
14->[('CACM-2679', ['some performance tests of quicksort and descendants detailed performance evaluations', 'are presented for six acm algorithms quicksort no 64 shellsort', 'no 201 stringsort no 207 treesort3 no 245 quickersort no', '271 and qsort no 402 algorithms 271 and 402 are', 'refinements of algorithm 64 and all three are discussed in', 'some detail the evidence given here demonstrates that qsort no', '402 requires many more comparisons than its author claims of', 'all these algorithms quickersort requires the fewest comparisons to sort', 'random arrays cacm march 1974 loeser r sorting in place', 'sorting sorting efficiency sorting performance tests quicksort quickersort qsort shellsort', 'stringsort treesort3 utility sort algorithm general purpose sort algorithm sorting', 'algorithm documentation 4.49 5.31 ca740304 jb january 18 1978 11:26', 'am']), ('CACM-2964', ['an approach to optimal design of storage parameters in databases', 'cacm may 1977 milman y database organization storage parameter optimization', 'resident overflow storage 3.73 3.74 ca770508 jb december 29 1977', '1:48 am']), ('CACM-3164', ['progressive acyclic digraphs a tool for database integrity a progressive', 'acyclic digraph pad algorithm accepts are requests and maintains a', 'graph in an acyclic state when a request creates a', 'cycle nodes are detached until the new are can be', 'entered acyclically this process is important in certain areas of', 'database implementation in which there are constraints on the permissible', 'sequences of actions two pad algorithms are presented one uses', 'a simple path matrix representation and the other uses a', 'list with an artificial gradient experiments suggest that for large', 'n the second is considerably faster though both are asymptotically', 'o nr where n is the number of nodes and', 'r is the expected number of nodes reachable along paths', 'from any given node cacm september 1979 hansen w list', 'processing data structures topological sort acyclic digraph database integrity network', 'deadlock 4.34 5.32 4.33 ca790905 db january 14 1980 11:56', 'am']), ('CACM-3131', ['focus microcomputer number system focus is a number system and', 'supporting computational algorithms especially useful for microcomputer control and other', 'signal processing applications focus has the wide ranging character of', 'floating point numbers with a uniformity of state distributions that', 'give focus better than a twofold accuracy advantage over an', 'equal word length floating point system focus computations are typically', 'five times faster than single precision fixed point or integer', 'arithmetic for a mixture of operations comparable in speed with', 'hardware arithmetic for many applications algorithms for 8 bit and', '16 bit implementations of focus are included cacm march 1979', 'edgar a lee s number representation logarithmic arithmetic computational speed', 'computational accuracy microcomputer applications 3.24 3.80 4.0 4.22 5.11 ca790302', 'dh april 12 1979 11:12 am']), ('CACM-2146', ['optimizing the polyphase sort various dispersion algorithms for the polyphase', 'sorting procedure are examinedhe optimum algorithm based on minimizing the', 'total number of unit strings read is displayed the logic', 'of this algorithm is rather complicated hence several other new', 'dispersion algorithms with more straightforward logic are presented of the', 'simple dispersion algorithms discussed the horizontal is best it does', 'approximately one fourth to one and one half percent less', 'reading and writing than most algorithms in use today an', 'additional two and one fourth to three percent improvement can', 'be achieved by utilizing the modified optimum algorithm this algorithm', 'is relatively straightforward but it requires a fairly close estimate', 'of the total number of unit strings before the dispersion', 'begins cacm november 1971 shell d l sorting polyphase sorting', 'dispersion algorithms optimum dispersion algorithm repetition operator 5.31 ca711103 jb', 'february 2 1978 11:39 am'])]
15->[('CACM-2944', ['shifting garbage collection overhead to compile time this paper discusses', 'techniques which enable automatic storage reclamation overhead to be partially', 'shifted to compile time the paper assumes a transaction oriented', 'collection scheme as proposed by deutsch and bobrow the necessary', 'features of which are summarized implementing the described optimizations requires', 'global flow analysis to be performed on the source program', 'it is shown that at compile time certain program actions', 'that affect the reference counts of cells can be deduced', 'this information is used to find actions that cancel when', 'the code is executed and those that can be grouped', 'to achieve improved efficiency cacm july 1977 barth j m', 'garbage collection global flow analysis list processing optimization reference counts', 'storage management 3.80 4.12 4.20 4.34 ca770708 jb december 28', '1977 8:38 am']), ('CACM-1947', ['object code optimization methods of analyzing the control flow and', 'data flow of programs during compilation are applied to transforming', 'the program to improve object time efficiency dominance relationships indicating', 'which statements are necessarily executed before others are used to', 'do global common expression elimination and loop identification implementation of', 'these and other optimizations in os 360 fortran h are', 'described cacm january 1969 lowry e s medlock c w', 'compilers data flow analysis dominance efficiency fortran graph theory loop', 'structure machine instructions object code optimization redundancy elimination register assignment', 'system 360 4.12 5.24 5.32 ca690102 jb february 20 1978', '12:15 pm']), ('CACM-2897', ['a case study of a new code generation technique for', 'compilers recent developments in optimizing techniques have allowed a new', 'design for compilers to emerge such a compiler translates the', 'parsed source code into lower level code by a sequence', 'of steps each step expands higher level statements into blocks', 'of lower level code and then performs optimizations on the', 'result each statement has only one possible expansion the task', 'of tailoring this code to take advantage of any special', 'cases is done by the optimizations this paper provides evidence', 'that this strategy can indeed result in good object code', 'the traditionally difficult pl i concatenate statement was investigated as', 'a detailed example a set of fairly simple optimizations was', 'identified which allow the compiler to produce good code more', 'elaborate optimizations can further improve the object code for most', 'contexts of the concatenate statement the code produced by a', 'compiler using the expansion optimization strategy described above compares favorably', 'with the code produced by a conventional pl i optimizing', 'compiler cacm december 1977 carter j l compiler structure optimizing', 'compiler code generation pl i compiler concatenation program optimization optimization', 'techniques data flow analysis 4.12 4.13 4.22 ca771203 jb february', '1 1980 3:54 am']), ('CACM-3125', ['global optimization by suppression of partial redundancies the elimination of', 'redundant computations and the moving of invariant computations out of', 'loops are often done separately with invariants moved outward loop', 'by loop we propose to do both at once and', 'to move each expression directly to the entrance of the', 'outermost loop in which it is invariant this is done', 'by solving a more general problem i e the elimination', 'of computations performed twice on a given execution path such', 'computations are termed partially redundant moreover the algorithm does not', 'require any graphical information or restrictions on the shape of', 'the program graph testing this algorithm has shown that its', 'execution cost is nearly linear with the size of the', 'program and that it leads to a smaller optimizer that', 'requires less execution time cacm february 1979 morel e renvoise', 'c optimizer optimization compiler compilation redundancy elimination invariant computation elimination', 'partial redundancy data flow analysis boolean systems 4.12 5.21 5.24', 'ca790204 dh april 10 1979 4:19 pm']), ('CACM-2464', ['the complex method for constrained optimization e4 algorithm a454 cacm', 'august 1973 richardson j a kuester j l optimization constrained', 'optimization box s algorithm 5.41 ca730810 jb january 23 1978', '10:34 am'])]
16->[('CACM-3141', ['an improved algorithm for decentralized extrema finding in circular configurations', 'of processes this note presents an improvement to lelann s', 'algorithm for finding the largest or smallest of a set', 'of uniquely numbered processes arranged in a circle in which', 'no central controller exists and the number of processes is', 'not known a priori this decentralized algorithm uses a technique', 'of selective message extinction in order to achieve an average', 'number of message passes of order n log n rather', 'than o n2 cacm may 1979 chang e roberts r', 'decentralized algorithms distributed systems operating systems 4.32 4.35 5.25 5.32', 'ca790502 dh june 5 1979 2:35 pm']), ('CACM-2080', ['the nucleus of a multiprogramming system this paper describes the', 'philosophy and structure of a multiprogramming system that can be', 'extended with a hierarchy of operating systems to suit diverse', 'requirements of program scheduling and resource allocation the system nucleus', 'simulates an environment in which program execution and input output', 'are handled uniformly as parallel cooperating process es a fundamental', 'set of primitives allows the dynamic creation and control of', 'a hierarchy of processes as well as the communication among', 'them cacm april 1970 hansen p b multiprogramming operating systems', 'parallel processes process concept process communication message buffering process hierarchy', 'process creation process removal 4.30 4.31 4.32 4.41 ca700404 jb', 'february 13 1978 3:10 pm']), ('CACM-0243', ['n dimensional codes for detecting and correcting multiple errors the', 'paper introduces a new family of codes for detecting and', 'correcting multiple errors in a binary coded message the message', 'itself is arranged conceptually into a multidimensional rectangular array the', 'processes of encoding and error detection are based upon parity', 'evaluations along prescribed dimensions of the array effectiveness of the', 'codes is increased by introducing a system check bit which', 'is essentially a parity check on the other parity bits', 'only three dimensional codes are discussed in this paper with', 'parity evaluations along the horizontal the vertical and one main', 'diagonal however the family of codes is not restricted to', 'three dimensions as evidenced by the discussion by minnick and', 'ashenhurst on a similar multidimensional single bit selection plan used', 'for another purpose 6 a four dimensional code correcting three', 'and detecting four errors has been developed the extension to', 'higher dimensional codes with greater correction power is straightforward cacm', 'december 1961 rubinoff m ca611207 jb march 15 1978 10:23', 'pm']), ('CACM-2740', ['a large semaphore based operating system the paper describes the', 'internal structure of a large operating system as a set', 'of cooperating sequential processes the processes synchronize by means of', 'semaphores and extended semaphores queue semaphores the number of parallel', 'processes is carefully justified and the various semaphore constructions are', 'explained the system is proved to be free of deadly', 'embrace deadlock the design principle is an alternative to dijkstra', 's hierarchical structuring of operating systems the project management and', 'the performance are discussed too the operating system is the', 'first large one using the rc 4000 multiprogramming system cacm', 'july 1975 lauesen s cooperating processes operating system semaphores semaphore', 'applications queue semaphores deadlock deadly embrace hierarchical structuring multiprogramming operating', 'system structure asynchronous structuring buffering parallel processes synchronizing primitives reentrant', 'code rc 4000 project management time schedule debugging project planning', 'project scheduling reliability program proving coroutines correctness program maintenance software', 'paging 4.30 4.31 4.32 4.42 4.43 5.24 ca750702 jb january', '9 1978 10:32 am']), ('CACM-2376', ['synchronization of communicating processes formalization of a well defined synchronization', 'mechanism can be used to prove that concurrently running processes', 'of a system communicate correctly this is demonstrated for a', 'system consisting of many sending processes which deposit messages in', 'a buffer and many receiving processes which remove messages from', 'that buffer the formal description of the synchronization mechanism makes', 'it very easy to prove that the buffer will neither', 'overflow nor underflow that senders and receivers will never operate', 'on the same message frame in the buffer nor will', 'they run into a deadlock cacm march 1972 habermann a', 'n parallel programming multiprogramming program correctness process communication process scheduling', '4.30 4.32 4.39 4.9 ca720305 jb january 31 1978 2:44', 'pm'])]
17->[('CACM-1223', ['high speed compilation of efficient object code a three pass', 'compiler with the following properties is briefly described the last', 'two passes scan an intermediate language produced by the preceding', 'pass in essentially the reverse of the order in which', 'it was generated so that the first pass is the', 'only one which hasto read the bulky problem oriented input', 'the double scan one in either direction performed by the', 'first two passes allows the compiler to remove locally constant', 'expressions and recursively calculable expressions from loops and to do', 'the important part of common subexpression recognition optimization such as', 'the effective use of index registers although as important is', 'not discussed since the object code which would be most', 'efficient is highly machine dependent the discussion is in terms', 'of a fortran like language although the technique is applicable', 'to most algebraic languages cacm august 1965 gear c w', 'ca650801 jb march 6 1978 8:45 pm']), ('CACM-2897', ['a case study of a new code generation technique for', 'compilers recent developments in optimizing techniques have allowed a new', 'design for compilers to emerge such a compiler translates the', 'parsed source code into lower level code by a sequence', 'of steps each step expands higher level statements into blocks', 'of lower level code and then performs optimizations on the', 'result each statement has only one possible expansion the task', 'of tailoring this code to take advantage of any special', 'cases is done by the optimizations this paper provides evidence', 'that this strategy can indeed result in good object code', 'the traditionally difficult pl i concatenate statement was investigated as', 'a detailed example a set of fairly simple optimizations was', 'identified which allow the compiler to produce good code more', 'elaborate optimizations can further improve the object code for most', 'contexts of the concatenate statement the code produced by a', 'compiler using the expansion optimization strategy described above compares favorably', 'with the code produced by a conventional pl i optimizing', 'compiler cacm december 1977 carter j l compiler structure optimizing', 'compiler code generation pl i compiler concatenation program optimization optimization', 'techniques data flow analysis 4.12 4.13 4.22 ca771203 jb february', '1 1980 3:54 am']), ('CACM-1947', ['object code optimization methods of analyzing the control flow and', 'data flow of programs during compilation are applied to transforming', 'the program to improve object time efficiency dominance relationships indicating', 'which statements are necessarily executed before others are used to', 'do global common expression elimination and loop identification implementation of', 'these and other optimizations in os 360 fortran h are', 'described cacm january 1969 lowry e s medlock c w', 'compilers data flow analysis dominance efficiency fortran graph theory loop', 'structure machine instructions object code optimization redundancy elimination register assignment', 'system 360 4.12 5.24 5.32 ca690102 jb february 20 1978', '12:15 pm']), ('CACM-1658', ['analysis of algorithms for the zero one programming problem this', 'paper is concerned with a review and examination of several', 'existing algorithms for the zero one programming problem computational experience', 'is summarized the machine time and storage requirements of several', 'of the algorithms are compared over several test problems of', 'small and intermediate size computer experiments still provide little hope', 'of solving problems with over 100 variables with a reasonable', 'amount of machine time cacm december 1968 gue r l', 'liggett j c cain k c operations research optimization theory', 'integer programming zero one variables algorithms 5.39 5.41 ca681208 jb', 'february 21 1978 1:31 pm']), ('CACM-2491', ['threaded code the concept of threaded code is presented as', 'an alternative to machine language code hardware and software realizations', 'of it are given in software it is realized as', 'interpretive code not needing an interpreter extensions and optimizations are', 'mentioned cacm june 1973 bell j r interpreter machine code', 'time tradeoff space tradeoff compiled code subroutine calls threaded code', '4.12 4.13 6.33 ca730609 jb january 23 1978 2:05 pm'])]
18->[('CACM-2138', ['bliss a language for systems programming a language bliss is', 'described this language is designed so as to be especially', 'suitable for use in writing production software systems for a', 'specific machine the pdp-10 compilers operating systems etc prime design', 'goals of the design are the ability to produce highly', 'efficient object code to allow access to all relevant hardware', 'features of the host machine and to provide a rational', 'means by which to cope with the evolutionary nature of', 'systems programs a major feature which contributes to the realization', 'of these goals is a mechanism permitting the definition of', 'the representation of all data structures in terms of the', 'access algorithm for elements of the structure cacm december 1971', 'wulf w a russell d b programming languages implementation language', 'systems programming data structures 4.12 4.21 4.22 ca711205 jb february', '2 1978 10:09 am']), ('CACM-1988', ['a formalism for translator interactions a formalism is presented for', 'describing the actions of processors for programming languages compilers interpreters', 'assemblers and their interactions in complex systems such as compiler', 'compilers or extendible languages the formalism here might be used', 'to define and answer such a question as can one', 'do bootstrapping using a meta compiler whose metaphase is interpretive', 'in addition an algorithm is presented for deciding whether or', 'not a given system can be produced from a given', 'set of component processors cacm october 1970 earley j translator', 'compiler interpreter bootstrapping language processor compiler compiler 4.1 5.29 ca701002', 'jb february 10 1978 9:36 am']), ('CACM-1811', ['a case study in programming for parallel processors an affirmative', 'partial answer is provided to the question of whether it', 'is possible to program parallel processor computing systems to efficiently', 'decrease execution time for useful problems parallel processor systems are', 'multiprocessor systems in which several of the processors can simultaneously', 'execute separate tasks of a single job thus cooperating to', 'decrease the solution time of a computational problem the processors', 'have independent instruction counters meaning that each processor executes its', 'own task program relatively independently of the other processors communication', 'between cooperating processors is by means of data in storage', 'shared by all processors a program for the determination of', 'the distribution of current in an electrical network was written', 'for a parallel processor computing system and execution of this', 'program was simulated the data gathered from simulation runs demonstrate', 'the efficient solution of this problem typical of a large', 'class of important problems it is shown that with proper', 'programming solution time when n processors are applied approaches 1', 'n times the solution time for a single processor while', 'improper programming can actually lead to an increase of solution', 'time with the number of processors stability of the method', 'of solution was also investigated cacm december 1969 rosenfeld j', 'l parallel processor parallelism parallel programming multiprocessor multiprogramming tasking storage', 'interference electrical network simulation relaxation jacobi gauss seidel convergence 3.24', '4.9 5.14 5.17 6.21 ca691201 jb february 15 1978 4:45', 'pm']), ('CACM-1852', ['a base for a mobile programming system an algorithm for', 'a macro processor which has been used as the base', 'of an implementation by bootstrapping of processors for programming languages', 'is described this algorithm can be easily implemented on contemporary', 'computing machines experience with programming languages whose implementation is based', 'on this algorithm indicates that such a language can be', 'transferred to a new machine in less than one man', 'week without using the old machine cacm september 1969 orgass', 'r j waite w m bootstrapping macro processing machine independence', 'programming languages implementation techniques 4.12 4.22 ca690903 jb february 15', '1978 4:54 pm']), ('CACM-2714', ['merging with parallel processors consider two linearly ordered sets a', 'b a m b n m n and p p', 'm parallel processors working synchronously the paper presents an algorithm', 'for merging a and b with the p parallel processors', 'which requires at most 2 log2 2m 1 3m p', 'm p log2 n m steps if n 2 b', 'm b an integer the algorithm requires at most 2', 'log2 m 1 m p 2 b steps in the', 'case where m and n are of the same order', 'of magnitude i e n km with k being a', 'constant the algorithm requires 2 log2 m 1 m p', '3 k steps these performances compare very favorably with the', 'previous best parallel merging algorithm batcher s algorithm which requires', 'n p m n 2p log2 m steps in the', 'general case and km p k 1 2 m p', 'log2 m in the special case where n km cacm', 'october 1975 gavril f parallel processing parallel merging parallel binary', 'insertion 5.31 ca751005 jb january 6 1978 10:50 am'])]
19->[('CACM-2973', ['sorting on a mesh connected parallel computer two algorithms are', 'presented for sorting n 2 elements on an n x', 'n mesh connected processor array that require o n routing', 'and comparison steps the best previous algorithm takes time o', 'n log n the algorithms of this paper are shown', 'to be optimal in time within small constant factors extensions', 'to higher dimensional arrays are also given cacm april 1977', 'thompson c d kung h t parallel computer parallel sorting', 'parallel merge routing and comparison steps perfect shuffle processor in', 'terconnection pattern 4.32 5.25 5.31 ca770409 jb december 29 1977', '4:58 am']), ('CACM-3075', ['fast parallel sorting algorithms a parallel bucket sort algorithm is', 'presented that requires time o log n and the use', 'of n processors the algorithm makes use of a technique', 'that requires more space than the product of processors and', 'time a realistic model is used model is used in', 'which no memory contention is permitted a procedure is also', 'presented to sort n numbers in time o k log', 'n using n 1 1 k processors for k an', 'arbitrary integer the model of computation for this procedure permits', 'simultaneous fetches from the same memory location cacm august 1978', 'hirschberg d parallel processing sorting algorithms bucket sort 3.74 4.34', '5.25 5.31 ca780803 dh february 7 1979 10:25 am']), ('CACM-0950', ['parallel methods for integrating ordinary differential equations this paper is', 'dedicated to the proposition that in order to take full', 'advantage for real time computations of highly parallel computers as', 'can be expected to be available in the near future', 'much of numerical analysis will have to be recast in', 'a more parallel form by this is meant that serial', 'algorithms ought to be replaced by algorithm which consist of', 'several subtasks which can be computed without knowledge of the', 'results of the other subtasks as an example a method', 'is proposed for parallelizing the numerical integration of an ordinary', 'differential equation which process by all standard methods is entirely', 'serial cacm december 1964 nievergelt j ca641221 jb march 9', '1978 3:09 pm']), ('CACM-2289', ['cellular arrays for the solution of graph problems a cellular', 'array is a two dimensional checkerboard type interconnection of identical', 'modules or cells where each cell contains a few bits', 'of memory and a small amount of combinational logic and', 'communicates mainly with its immediate neighbors in the array the', 'chief computational advantage offered by cellular arrays is the improvement', 'in speed achieved by virtue of the possibilities for parallel', 'processing in this paper it is shown that cellular arrays', 'are inherently well suited for the solution of many graph', 'problems for example the adjacency matrix of a graph is', 'easily mapped onto an array each matrix element is stored', 'in one cell of the array and typical row and', 'column operations are readily implemented by simple cell logic a', 'major challenge in the effective use of cellular arrays for', 'the solution of graph problems is the determination of algorithms', 'that exploit the possibilities for parallelism especially for problems whose', 'solutions appear to be inherently serial in particular several parallelized', 'algorithms are presented for the solution of certain spanning tree', 'distance and path problems with direct applications to wire routing', 'pert chart analysis and the analysis of many types of', 'networks these algorithms exhibit a computation time that in many', 'cases grows at a rate not exceeding log2 n where', 'n is the number of nodes in the graph straightforward', 'cellular implementations of the well known serial algorithms for these', 'problems require about n steps and noncellular implementations require from', 'n 2 to n 3 steps cacm september 1972 levitt', 'k n kautz w h graph theory cellular logic in', 'memory arrays parallel processing special purpose computers algorithms for distance', 'and spanning tree problems 5.32 6.22 6.5 ca720901 jb january', '30 1978 9:16 am']), ('CACM-1601', ['parallel numerical methods for the solution of equations classical iterative', 'procedures for the numerical solution of equations provide at each', 'stage a single new approximation to the root in question', 'a technique is given for the development of numerical procedures', 'which provide at each stage several approximations to a solution', 'of an equation the s8everal approximations obtained in any iteration', 'are computationally independent making the methods of interest in a', 'parallel processing environment convergence is insured by extracting the best', 'information at each iteration several families of numerical procedures which', 'use the technique of the procedures in a parallel processing', 'environment are developed and measurements of these statistics are reported', 'these measurements are interpreted in a parallel processing environment in', 'such an environment the procedures obtained are superior to standard', 'algorithms cacm may 1967 shedler g s ca670505 jb february', '28 1978 10:44 am'])]
20->[('CACM-2695', ['tridiagonalization by permutations tridiagonalizing a matrix by similarity transformations is', 'an important computational tool in numerical linear algebra consider the', 'class of sparse matrices which can be tridiagonalized using only', 'row and corresponding column permutations the advantages of using such', 'a transformation include the absence of round off errors and', 'improved computation time when compared with standard transformations a graph', 'theoretic algorithm which examines an arbitrary n x n matrix', 'and determines whether or not it can be permuted into', 'tridiagonal form is given the algorithm requires no arithmetic while', 'the number of comparisons the number of assignments and the', 'number of increments are linear in n this compares very', 'favorably with standard transformation methods if the matrix is permutable', 'into tridiagonal form the algorithm gives the explicit tridiagonal form', 'otherwise early rejection will occur cacm january 1974 gibbs n', 'e poole w g jr tridiagonal matrix permutation algorithm eigenvalues', 'graph bandwidth sparse matrix 5.14 5.32 ca740104 jb january 18', '1978 2:31 pm']), ('CACM-2986', ['operations on sparse relations various computations on relations boolean matrices', 'or directed graphs such as the computation of precedence relations', 'for a context free grammar can be done by a', 'practical algorithm that is asymptotically faster than those in common', 'use for example how to compute operator precedence or wirth', 'weber precedence relations in o n 2 steps is shown', 'as well as how to compute linear precedence functions in', 'o n 2 steps is shown as well as how', 'to compute linear precedence functions in o n steps where', 'n is the size of a grammer the heart of', 'the algorithms is a general theorem giving sufficient conditions under', 'which an expression whose operands are sparse relations and whose', 'operators are composition transitive closure union and inverse can be', 'computed efficiently cacm march 1977 hunt h b iii szymanski', 't g ullman j d computational complexity sparse relation boolean', 'matrix directed graph wirth weber precedence relation linear precedence function', 'slr grammar t canonical precedence relation 4.12 5.23 5.25 ca770306', 'jb december 29 1977 8:05 am']), ('CACM-2769', ['a modification of warshall s algorithm for the transitive closure', 'of binary relations an algorithm is given for computing the', 'transitive closure of a binary relation that is represented by', 'a boolean matrix the algorithm is similar to warshall s', 'although it executes faster for sparse matrices on most computers', 'particularly in a paging environment cacm april 1975 warren h', 's jr warshall s algorithm transitive closure reachability matrix directed', 'graph digraph boolean matrix binary relation 5.30 5.32 ca750408 jb', 'january 9 1978 3:49 pm']), ('CACM-1563', ['a method for finding hamilton paths and knight s tours', 'the use of warnsdorff s rule for finding a knight', 's tour is generalized and applied to the problem of', 'finding a hamilton path in a graph a graph theoretic', 'justification for the method is given cacm july 1967 pohl', 'i ca670710 jb february 28 1978 8:28 am']), ('CACM-2780', ['on computing certain elements of the inverse of a sparse', 'matrix a recursive algorithm for computing the inverse of a', 'matrix from the lu factors based on relationships in takahashi', 'et al is examined the formulas for the algorithm are', 'given the dependency relationships are derived the computational costs are', 'developed and some general comments on application and stability are', 'made cacm march 1975 erisman e m tinney w f', 'sparse matrices triangular factorization elements of inverse tridiagonal matrix sensitivities', '3.24 5.14 ca750308 jb january 9 1978 4:34 pm'])]
21->[('CACM-2337', ['a sorting problem and its complexity a technique for proving', 'min max norms of sorting algorithms is given one new', 'algorithm for finding the minimum and maximum elements of a', 'set with fewest comparisons is proved optimal with this technique', 'cacm june 1972 pohl i sorting computational complexity computational combinatorics', '5.29 5.31 ca720608 jb january 30 1978 4:15 pm']), ('CACM-3018', ['covering edges by cliques with regard to keyword conflicts and', 'intersection graphs kellerman has presented a method for determining keyword', 'conflicts and described a heuristic algorithm which solves a certain', 'combinatorial optimization problem in connection with this method this optimization', 'problem is here shown to be equivalent to the problem', 'of covering the edges of a graph by complete subgraphs', 'with the objective of minimizing the number of complete subgraphs', 'a relationship between this edge clique cover problem and the', 'graph coloring problem is established which allows algorithms for either', 'one of these problems to be constructed from algorithm for', 'the other as consequences of this relationship the keyword conflict', 'problem and the edge clique cover problem are shown to', 'be np complete and if p np then they do', 'not admit polynomial time approximation algorithms which always produce solutions', 'within a factor less than 2 from the optimum cacm', 'february 1978 kou l stockmeyer l wong c watson t', 'keyword conflicts intersection graphs node clique cover edge clique cover', 'computational complexity np complete problems polynomial time heuristics 4.12 5.25', '5.32 ca780205 jb march 28 1978 4:18 pm']), ('CACM-3086', ['on the complexity of computing the measure of u ai', 'bi the decision tree complexity of computing the measure of', 'the union of n possibly overlapping intervals is shown to', 'be n log n even if comparisons between linear functions', 'of the interval endpoints are allowed the existence of an', 'n log n lower bound to determine whether any two', 'of n real numbers are within of each other is', 'also demonstrated these problems provide an excellent opportunity for discussing', 'the effects of the computational model on the ease of', 'analysis and on the results produced cacm july 1978 fredman', 'm weide b analysis of algorithms combinatorial problems computational complexity', 'computational models decision tree programs lower bounds 5.25 5.26 5.30', '5.39 ca780702 dh february 8 1979 3:46 pm']), ('CACM-2702', ['on the complexity of lr k testing the problem of', 'determining whether an arbitrary context free grammar is a member', 'of some easily parsed subclass of grammars such as the', 'lr k grammars is considered the time complexity of this', 'problem is analyzed both when k is considered to be', 'a fixed integer and when k is considered to be', 'a parameter of the test in the first case it', 'is shown that for every k there exists an o', 'n k 2 algorithm for testing the lr k property', 'where n is the size of the grammar in question', 'on the other hand if both k and the subject', 'grammar are problem parameters then the complexity of the problem', 'depends very strongly on the representation chosen for k more', 'specifically it is shown that this problem is np complete', 'when k is expressed in unary when k is expressed', 'in binary the problem is complete for nondeterministic exponential time', 'these results carry over to many other parameterized classes of', 'grammars such as the ll k strong ll k slr', 'k lc k and strong lc k grammars cacm december', '1975 hunt h b iii szymanski t g ullman j', 'd computational complexity context free grammars parsing lr k grammars', 'np complete problems 4.12 5.23 5.25 ca751205 jb january 5', '1978 4:28 pm']), ('CACM-2325', ['numerical mathematics and computer science numerical mathematics is viewed as', 'the analysis of continuous algorithms four of the components of', 'numerical mathematics are discussed these are foundations finite precision number', 'systems computational complexity synthesis and analysis of algorithms analysis of', 'error programs and program libraries cacm july 1972 traub j', 'f numerical mathematics computer science mathematics of computation algorithms continuous', 'algorithms 1.3 5.0 5.1 5.25 ca720703 jb january 30 1978', '3:17 pm'])]
22->[('CACM-2678', ['visible surface plotting program j6 algorithm a475 cacm march 1974', 'wright t hidden line problem computer graphics contour surface 3.65', '4.41 8.2 ca740305 jb january 18 1978 11:18 am']), ('CACM-2751', ['illumination for computer generated pictures the quality of computer generated', 'images of three dimensional scenes depends on the shading technique', 'used to paint the objects on the cathode ray tube', 'screen the shading algorithm itself depends in part on the', 'method for modeling the object which also determines the hidden', 'surface algorithm the various methods of object modeling shading and', 'hidden surface removal are thus strongly interconnected several shading techniques', 'corresponding to different methods of object modeling and the related', 'hidden surface algorithms are presented here human visual perception and', 'the fundamental laws of optics are considered in the development', 'of a shading rule that provides better quality and increased', 'realism in generated images cacm june 1975 phong b t', 'computer graphics graphic display hidden surface removal 3.26 3.41 8.2', 'ca750602 jb january 9 1978 1:46 pm']), ('CACM-2384', ['hidden line plotting program j6 algorithm a420 cacm february 1972', 'williamson h hidden line plot surface plot 4.9 ca720207 jb', 'january 31 1978 4:12 pm']), ('CACM-2473', ['hidden line plotting program algorithm r420 cacm july 1973 macleod', 'i d g collins a m hidden line plot surface', 'plot 4.9 ca730713 jb january 23 1978 11:14 am']), ('CACM-2369', ['hidden lines elimination for a rotating object a method is', 'presented of determining which parts of three dimensional objects are', 'visible and which are invisible when the objects are rotated', 'about some axis this paper describes a polygon comparison scheme', 'in which the relationships of two polygons can be classified', 'into tree types and also discusses how the relationship is', 'changed for each pair of polygons under rotation about some', 'axis a rotation table is defined for each pair of', 'polygons which remains fixed as long as rotation is about', 'one axis and provides a means of rapidly determining the', 'visible and hidden line relationship between two polygons additional work', 'must be done to extend this approach to simultaneous rotation', 'about several axes cacm april 1972 matsushita y hidden line', 'problem display programming computer graphics displays graphics computer drawn picture', '4.40 4.41 4.49 ca720404 jb january 31 1978 1:40 pm'])]
23->[('CACM-3148', ['high level programming for distributed computing programming for distributed and', 'other loosely coupled systems is a problem of growing interest', 'this paper describes an approach to distributed computing at the', 'level of general purpose programming languages based on primitive notions', 'of module message and transaction key the methodology is shown', 'to be independent of particular languages and machines it appears', 'to be useful for programming a wide range of tasks', 'this is part of an ambitious program of development in', 'advanced programming languages and relations with other aspects of the', 'project are also discussed cacm june 1979 feldman j distributed', 'computing modules messages assertions 4.22 4.32 ca790604 dh august 21', '1979 4:31 pm']), ('CACM-2849', ['ethernet distributed packet switching for local computer networks ethernet is', 'a branching broadcast communication system for carrying digital data packets', 'among locally distributed computing stations the packet transport mechanism provided', 'by ethernet has been used to build systems which can', 'be viewed as either local computer networks or loosely coupled', 'multiprocessors an ethernet s shared communication facility its ether is', 'a passive broadcast medium with no central control coordination of', 'access to the ether for packet broadcasts is distributed among', 'the contending transmitting stations using controlled statistical arbitration switching of', 'packets to their destinations on the ether is distributed among', 'the receiving stations using packet address recognition design principles and', 'implementation are described based on experience with an operating ethernet', 'of 100 nodes along a kilometer of coaxial cable a', 'model for estimating performance under heavy loads and a packet', 'protocol for error controlled communication are included for completeness cacm', 'july 1976 metcalfe r m boggs d r computer networks', 'packet switching multiprocessing distributed control distributed computing broadcast communication statistical', 'arbitration 3.81 4.32 6.35 ca760704 jb january 4 1978 12:49', 'pm']), ('CACM-3137', ['a methodology for the design of distributed information systems a', 'macro model of a distributed information system in presented the', 'model describes the major costs of using an information system', 'from the perspective of the end user the making evident', 'the effect of various design and operating parameters on overall', 'cost per transaction the technique is illustrated by application to', 'the design of an interactive transaction processing system cacm april', '1979 bucci g streeter d distributed processing system design cost', 'minimization distributed database interactive computing economic modeling transaction processing 4.32', '4.33 6.2 8.1 ca790403 dh may 21 1979 1:25 pm']), ('CACM-2276', ['computer methods for sampling from the exponential and normal distributions', 'various methods are known for transforming uniformly distributed random numbers', 'into exponentially and normally distributed quantities the most efficient ones', 'are compared in terms of memory requirements and speed with', 'some new algorithms a number of procedures convert taylor series', 'expansions directly into sampling steps an approach which may be', 'used for sampling from any continuous distribution for the exponential', 'distribution a definite recommendation can be made whereas in the', 'case of the normal distribution there remains a choice between', 'slower and shorter algorithms and faster but space consuming methods', 'cacm october 1972 ahrens j h dieter u random numbers', 'pseudorandom normal distribution exponential distribution exponential distribution simulation numerical analysis', '3.29 3.57 5.11 5.5 ca721002 jb january 27 1978 3:55', 'pm']), ('CACM-1745', ['a position paper on computing and communications the effective operation', 'of free enterprise in creating the envisioned information service industry', 'is dependent upon three accomplishments 1 the restructuring of our', 'information processing industry so that a clear division of costs', 'is made among computing communications and the development of information', 'services 2 the wide use of multiaccess system concepts so', 'that information services may share in the use of computer', 'installations and so that the cost of their construction is', 'reasonable and 3 the development of public message switched communications', 'services so that adequate provisions are made for information security', 'cacm may 1968 dennis j b information networks information systems', 'computing and free enterprise computing economics computer installation management government', 'regulation communications services distributed data base program leasing 2.3 2.40', '3.80 4.30 ca680511 jb february 23 1978 8:49 am'])]
24->[('CACM-1696', ['an algorithm for identifying the ergodic subchains and transient states', 'of a stochastic matrix an algorithm for identifying the ergodic', 'subchains and transient states of a stochastic matrix is presented', 'applications in markov renewal programming and in the construction of', 'variable length codes are reviewed and an updating procedure for', 'dealing with certain sequences of stochastic matrices is discussed computation', 'times are investigated experimentally and compared with those of another', 'recently propose method cacm september 1968 fox b l landi', 'd m stochastic matrix ergodic chain identification 5.39 5.5 ca680905', 'jb february 22 1978 9:04 am']), ('CACM-0020', ['accelerating convergence of iterative processes a technique is discussed which', 'when applied to an iterative procedure for the solution of', 'an equation accelerates the rate of convergence if the iteration', 'converges and induces convergence if the iteration diverges an illustrative', 'example is given cacm june 1958 wegstein j h ca580602', 'jb march 22 1978 9:09 pm']), ('CACM-0268', ['stochastic evaluation of a static storage allocation cacm october 1961', 'cohen l j ca611013 jb march 16 1978 12:48 pm']), ('CACM-1410', ['interarrival statistics for time sharing systems the optimization of time', 'shared system performance requires the description of the stochastic processes', 'governing the user inputs and the program activity this paper', 'provides a statistical description of the user input process in', 'the sdc arpa general purpose time sharing system tss the', 'input process is assumed to be stationary and to be', 'defined by the interarrival time distribution the data obtained appear', 'to justify satisfactorily the common assumption that the interarrival times', 'are serially independent the data do not appear to justify', 'except as a very rough approximation the usual assumption off', 'an exponential distribution for interarrival time a much more satisfactory', 'approximation to the data can be obtained with a biphase', 'or triphase hyperexponential distribution cacm july 1966 coffman e g', 'wood r c ca660704 jb march 2 1978 9:45 pm']), ('CACM-3043', ['distributed processes a concurrent programming concept a language concept for', 'concurrent processes without common variables is introduced these processes communicate', 'and synchronize by means of procedure calls and guarded regions', 'this concept is proposed for real time applications controlled by', 'microcomputer networks with distributed storage the paper gives several examples', 'of distributed processes and shows that they include procedures coroutines', 'classes monitors processes semaphores buffers path expressions and input output', 'as special cases cacm november 1978 hansen p concurrent programming', 'distributed processes microprocessor networks nondeterminism guarded regions programming languages process', 'communication and scheduling sorting arrays coroutines classes monitors processes semaphores', 'buffers path expressions input output 3.8 4.2 4.22 4.32 5.24', 'ca781108 dh january 26 1979 10:40 am'])]
25->[('CACM-2318', ['the role of computer system models in performance evaluation models', 'constitute a useful means of investigating computer system performance this', 'paper examines the interrelationships between models and other methods for', 'evaluating the performance of computer systems and establishes circumstances under', 'which the use of a model is appropriate cacm july,1972', 'kimbleton s r modeling evaluation performance analytic models simulation models', 'system models 2.43 2.44 6.2 8.3 ca720710 jb january 30', '1978 2:03 pm']), ('CACM-1938', ['some criteria for time sharing system performance time sharing systems', 'as defined in this article are those multiaccess systems which', 'permit a terminal user to utilize essentially the full resources', 'of the system while sharing its time with other terminal', 'users it is each terminal user s ability to utilize', 'the full resources of the system that makes quantitative evaluation', 'of time sharing systems particularly difficult six criteria are described', 'which have been successfully used to perform first level quantitative', 'time sharing system performance evaluation cacm january 1969 stimler s', 'time sharing performance criteria time sharing system operation time sharing', 'performance analysis 2.40 4.30 4.32 6.20 ca690111 jb february 20', '1978 11:37 am']), ('CACM-2319', ['operating system performance an overview of the current and future', 'positions with respect to operating system performance is given while', 'a great deal of information and a large number of', 'models for subsystems have been developed gaps still exist in', 'out knowledge because of the severe interactions between the various', 'subsystems of an operating system an overall model of the', 'total system must be developed to be able to analyze', 'and design the performance aspects of an operating system although', 'such total system designs are exceptional today it is projected', 'that they will become increasingly more common and necessary in', 'the near future such a design philosophy will clearly have', 'a severe impact on the way we go about modularizing', 'operating and computer systems cacm july 1972 lynch w c', 'computer system operating system performance evaluation performance measurement measurement techniques', 'modularity layering structured programming paging virtual memory input output disk', 'storage facility drum storage facility sector queueing 4.30 6.20 ca720709', 'jb january 30 1978 2:33 pm']), ('CACM-1653', ['system performance evaluation survey and appraisal the state of the', 'art of system performance evaluation is reviewed and evaluation goals', 'and problems are examined throughput turnaround and availability are defined', 'as fundamental measures of performance overhead and cpu speed are', 'placed in perspective the appropriateness of instruction mixes kernels simulators', 'and other tools is discussed as well as pitfalls which', 'may be encountered when using them analysis simulation and synthesis', 'are presented as three levels of approach to evaluation requiring', 'successively greater amounts of information the central role of measurement', 'in performance evaluation and in the development of evaluation methods', 'is explored cacm january 1967 calingaert p ca670102 jb march', '1 1978 9:10 am']), ('CACM-2984', ['cost utilization a measure of system performance a method is', 'presented for evaluating computer system performance in terms of a', 'cost utilization factor and a measure of imbalance these coefficients', 'indicate the extent to which the total system cost is', 'effectively utilized the method includes a technique for the visual', 'representation of system performance cacm march 1977 borovits i ein', 'dor p computer system performance evaluation cost utilization system balance', '2.44 ca770308 jb december 29 1977 6:41 am'])]
26->[('CACM-2626', ['protection and the control of information sharing in multics the', 'design of mechanisms to control the sharing of information in', 'the multics system is described five design principles help provide', 'insight into the tradeoffs among different possible designs the key', 'mechanisms described include access control lists hierarchical control of access', 'specifications identification and authentication of users and primary memory protection', 'the paper ends with a discussion of several known weaknesses', 'in the current protection mechanism design cacm july 1974 saltzer', 'j h multics protection security privacy access control authentication computer', 'utilities time sharing systems proprietary programs protected subsystems virtual memory', 'descriptors 3.70 4.30 6.2 ca740705 jb january 17 1978 12:49', 'pm']), ('CACM-3105', ['a language extension for expressing constraints on data access controlled', 'sharing of information is needed and desirable for many applications', 'and is supported in operating systems by access control mechanisms', 'this paper shows how to extend programming languages to provide', 'controlled sharing the extension permits expression of access constraints on', 'shared data access constraints can apply both to simple objects', 'and to objects that are components of larger objects such', 'as bank account records in a bank s data base', 'the constraints are stated declaratively and can be enforced by', 'static checking similar to type checking the approach can be', 'used to extend any strongly typed language but is particularly', 'suitable for extending languages that support the notion of abstract', 'data types cacm may 1978 jones a liskov b programming', 'languages access control data types abstract data types type checking', 'capabilities 4.20 4.35 ca780502 dh february 26 1979 3:19 pm']), ('CACM-2632', ['hydra the kernel of a multiprocessor operating system this paper', 'describes the design philosophy of hydra the kernel of an', 'operating system for c mmp the carnegie mellon multi mini', 'processor this philosophy is realized through the introduction of a', 'generalized notion of resource both physical and virtual called an', 'object mechanisms are presented for dealing with objects including the', 'creation of new types specification of new operations applicable to', 'a given type sharing and protection of any reference to', 'a given object against improper application of any of the', 'operations defined with respect to that type of object the', 'mechanisms provide a coherent basis for extension of the system', 'in two directions the introduction of new facilities and the', 'creation of highly secure systems cacm june 1974 wulf w', 'cohen e corwin w jones a levin r pierson c', 'pollack f operating system kernel nucleus protection security 4.3 6.2', 'ca740614 jb january 17 1978 2:40 pm']), ('CACM-2840', ['protection in operating systems a model of protection mechanisms in', 'computing systems is presented and its appropriateness is argued the', 'safety problem for protection systems under this model is to', 'determine in a given situation whether a subject can acquire', 'a particular right to an object in restricted cases it', 'can be shown that this problem is decidable i e', 'there is an algorithm to determine whether a system in', 'a particular configuration is safe in general and under surprisingly', 'weak assumptions it cannot be decided if a situation is', 'safe various implications of this fact are discussed cacm august', '1976 harrison m a ruzzo w l ullman j d', 'protection protection system operating system decidability turing machine 4.30 4.31', '5.24 ca760804 jb january 4 1978 10:12 am']), ('CACM-3128', ['synchronization with eventcounts and sequencers synchronization of concurrent processes requires', 'controlling the relative ordering of events in the processes a', 'new synchronization mechanism is proposed using abstract objects called eventcounts', 'and sequencers that allows processes to control the ordering of', 'events directly rather than using mutual exclusion to protect manipulations', 'of shared variables that control ordering of events direct control', 'of ordering seems to simplify correctness arguments and also simplifies', 'implementation in distributed systems the mechanism is defined formally and', 'then several examples of its use are given the relationship', 'of the mechanism to protection mechanisms in the system is', 'explained in particular eventcounts are shown to be applicable to', 'situations where confinement of information matters an implementation of eventcount', 's and sequencers in a system with shared memory is', 'described cacm february 1979 reed d kanodia r process synchronization', 'interprocess communication distributed systems security models mutual exclusion semaphores 4.30', '4.32 ca790207 dh april 12 1979 10:03 am'])]
27->[('CACM-2297', ['a model of memory contention in a paging machine this', 'paper is concerned with certain aspects of contention for main', 'memory resources in a multiprogrammed computer system operating under demand', 'paging in the model presented the number of page frames', 'of main memory allocated to a problem program varies in', 'time these changes in memory configuration are represented explicitly in', 'the model cpu requirements and page exception characteristics of program', 'material being described statistically expressions for the distribution of the', 'number of page frames allocated to an executing program the', 'long run expected fraction of a program s execution time', 'in a given number of page frames and the average', 'execution interval of the multiprogrammed load are obtained it is', 'pointed out heuristically and demonstrated numerically that an increase is', 'obtain able in the average execution interval of the multiprogrammed', 'load over that resulting from equal fixed partitioning of main', 'memory cacm august 1972 oden p h shedler g s', 'paging machines demand paging operating systems studies queuing analysis memory', 'contention memory management 4.32 ca720805 jb january 30 1978 9:50', 'am']), ('CACM-1752', ['resource management for a medium scale time sharing operating system', 'task scheduling and resource balancing for a medium size virtual', 'memory paging machine are discussed in relation to a combined', 'batch processing and time sharing environment a synopsis is given', 'of the task scheduling and paging algorithms that were implemented', 'and the results of comparative simulation are given by tracing', 'the development of the algorithms through six predecessor versions throughout', 'the discussion particular emphasis is placed on balancing the system', 'performance relative to the characteristics of all the system resources', 'simulation results relative to alternate hardware characteristics and the effects', 'of program mix and loading variations are also presented cacm', 'may 1968 oppenheimer g weizer n time sharing operating systems', 'resource management task scheduling paging system simulation memory management virtual', 'memories 4.30 4.31 4.32 ca680504 jb february 23 1978 9:39', 'am']), ('CACM-2319', ['operating system performance an overview of the current and future', 'positions with respect to operating system performance is given while', 'a great deal of information and a large number of', 'models for subsystems have been developed gaps still exist in', 'out knowledge because of the severe interactions between the various', 'subsystems of an operating system an overall model of the', 'total system must be developed to be able to analyze', 'and design the performance aspects of an operating system although', 'such total system designs are exceptional today it is projected', 'that they will become increasingly more common and necessary in', 'the near future such a design philosophy will clearly have', 'a severe impact on the way we go about modularizing', 'operating and computer systems cacm july 1972 lynch w c', 'computer system operating system performance evaluation performance measurement measurement techniques', 'modularity layering structured programming paging virtual memory input output disk', 'storage facility drum storage facility sector queueing 4.30 6.20 ca720709', 'jb january 30 1978 2:33 pm']), ('CACM-2069', ['comments on a paper by wallace and mason cacm april', '1970 heess jr w f page on demand demand paging', 'time sharing multiprogramming markovian computer models scheduling strategies operating systems', 'memory management 2.44 4.32 4.39 6.20 6.21 ca700415 jb february', '13 1978 2:36 pm']), ('CACM-2358', ['the multics virtual memory concepts and design as experience with', 'use of on line operating systems has grown the need', 'to share information among system users has become increasingly apparent', 'many contemporary systems permit some degree of sharing usually sharing', 'is accomplished by allowing several users to share data via', 'input and output of information stored in files kept in', 'secondary storage through the use of segmentation however multics provides', 'direct hardware addressing by user and system programs of all', 'information independent of its physical storage location information is stored', 'in segments each of which is potentially sharable and carries', 'its own independent attributes of size and access privilege here', 'the design and implementation considerations of segmentation and sharing in', 'multics are first discussed under the assumption that all information', 'resides in large segmented main memory since the size of', 'main memory on contemporary systems is rather limited it is', 'then shown how the multics software achieves the effect of', 'a large segmented main memory through the use of the', 'honeywell 645 segmentation and paging hardware cacm may 1972 bensoussan', 'a clingen c t daley r c operating system multics', 'virtual memory segmentation information sharing paging memory management memory hierarchy', '4.30 4.31 4.32 ca720502 jb january 31 1978 11:24 am'])]
28->[('CACM-3032', ['reverse path forwarding of broadcast packets a broadcast packet is', 'for delivery to all nodes of a network algorithms for', 'accomplishing this delivery through a store and forward packet switching', 'computer network include 1 transmission of separately addressed packets 2', 'multidestination addressing 3 hot potato forwarding 4 spanning tree forwarding', 'and 5 source based forwarding to this list of algorithms', 'we add 6 reverse path forwarding a broadcast routing method', 'which exploits routing procedures and data structures already available for', 'packet switching reverse path forwarding is a practical algorithm for', 'broadcast routing in store and forward packet switching computer networks', 'the algorithm is described as being practical because it is', 'not optimal according to metrics developed for its analysis in', 'this paper and also because it can be implemented in', 'existing networks with less complexity than that required for the', 'known alternatives cacm december 1978 dalal y metcalfe r reverse', 'path forwarding broadcast packets routing computer networks store and forward', 'packet switching broadcast protocols 3.81 4.32 5.32 ca781207 dh january', '18 1979 3:10 pm']), ('CACM-2949', ['a correctness proof of a topology information main tenance protocol', 'for a distributed computer network in order for the nodes', 'of a distributed computer network to communicate each node must', 'have information about the network s topology since nodes and', 'links sometimes crash a scheme is needed to update this', 'information one of the major constrain ts on such a', 'topology information scheme is that it may not involve a', 'central controller the topology information protocol that was implemented on', 'the merit computer network is presented and explained this protocol', 'is quite general and could be implemented on any computer', 'network it is based on baran s hot potato heuristic', 'routing doctrine a correctness proof of this topology information protocol', 'is also presented cacm july 1977 tajibnapis w d distributed', 'computer network correctness proofs computer networks distributed control network topology', 'routing problem in networks distributed operating system store and forward', 'packet switching store and forward message switching traffic control 3.81', '4.32 ca770703 jb december 28 1977 11:59 am']), ('CACM-2849', ['ethernet distributed packet switching for local computer networks ethernet is', 'a branching broadcast communication system for carrying digital data packets', 'among locally distributed computing stations the packet transport mechanism provided', 'by ethernet has been used to build systems which can', 'be viewed as either local computer networks or loosely coupled', 'multiprocessors an ethernet s shared communication facility its ether is', 'a passive broadcast medium with no central control coordination of', 'access to the ether for packet broadcasts is distributed among', 'the contending transmitting stations using controlled statistical arbitration switching of', 'packets to their destinations on the ether is distributed among', 'the receiving stations using packet address recognition design principles and', 'implementation are described based on experience with an operating ethernet', 'of 100 nodes along a kilometer of coaxial cable a', 'model for estimating performance under heavy loads and a packet', 'protocol for error controlled communication are included for completeness cacm', 'july 1976 metcalfe r m boggs d r computer networks', 'packet switching multiprocessing distributed control distributed computing broadcast communication statistical', 'arbitration 3.81 4.32 6.35 ca760704 jb january 4 1978 12:49', 'pm']), ('CACM-2890', ['on quadratic adaptive routing algorithms two analytic models of a', 'store and forward communications network are constructed one to find', 'the optimal message routing and the other to illustrate the', 'equilibrium stationary state maintained by an adaptive routing algorithm these', 'models show that adaptive routing does not satisfy the necessary', 'conditions for an optimal routing adaptive routing tends to overuse', 'the direct path and underuse alternate routes because it does', 'not consider the impact of its current routing decision on', 'the future state of the network the form of the', 'optimality conditions suggests that a modification of the adaptive algorithm', 'will result in optimality the modification requires the substitution of', 'a quadratic bias term instead of a linear one in', 'the routing table maintained at each network node simulation results', 'are presented which confirm the theoretical analysis for a simple', 'network cacm january 1976 agnew c e routing algorithms adaptive', 'routing quadratic routing alternate routing store and forward network distributed', 'network computer network message switching 3.81 8.0 8.1 8.3 ca760103', 'jb january 5 1978 10:37 am']), ('CACM-2892', ['a study of line overhead in the arpanet the form', 'extent and effect of the communication line overhead in the', 'arpanet are considered the source of this over head is', 'separated into various levels of protocol hierarchy and the characteristics', 'of each level are summarized then the line efficiency for', 'various models of system use is studied some measurements of', 'line efficiency for the arpanet are presented and by extrapolation', 'these measurements are used to anticipate overhead in a heavily', 'loaded network similar results are derived for a recently proposed', 'network protocol and compared with those for the current system', 'cacm january 1976 kleinrock l naylor w e opderbeck h', 'arpanet computer communication networks interprocess communication measurement packet switching performance', 'evaluation and efficiency resource sharing 3.81 4.39 4.6 4.9 ca760101', 'jb january 5 1978 10:49 am'])]
29->[('CACM-2644', ['a theorem proving language for experimentation because of the large', 'number of strategies and inference rules presently under consideration in', 'automated theorem proving there is a need for developing a', 'language especially oriented toward automated theorem proving this paper discusses', 'some of the features and instructions of this language the', 'use of this language permits easy extension of automated theorem', 'proving programs to include new strategies and or new inference', 'rules such extend ability will permit general experimentation with the', 'various alternative systems cacm june 1974 henschen l overbeek r', 'wos l theorem proving resolution factoring paramodulation programming languages 3.60', '4.22 5.21 ca740602 jb january 17 1978 3:37 pm']), ('CACM-2927', ['some new upper bounds on the generation of prime numbers', 'given an integer n what is the computational complexity of', 'finding all the primes less than n a modified sieve', 'of eratosthenes using doubly linked lists yields an algorithm of', 'o n arithmetic complexity this upper bound is shown to', 'be equivalent to the theoretical lower bound for sieve methods', 'without preprocessing use of preprocessing techniques involving space time and', 'additive multiplicative tradeoffs reduces this upper bound to o n', 'log logn and the bit complexity to o n logn', 'log log logn a storage requirement is described using o', 'n logn log logn bits as well cacm september 1977', 'mairson h g computational complexity sieve prime number generation number', 'theory linked list preprocessing balancing 5.25 5.39 ca770907 jb december', '27 1977 12:55 pm']), ('CACM-1840', ['an efficient prime number generator algorithm 357 a1 cacm october', '1969 singleton r c prime numbers factoring number theory 3.15', '5.30 ca691006 jb february 15 1978 3:23 pm']), ('CACM-1967', ['an improved algorithm to produce complex primes algorithm 401 a1', 'cacm november 1970 bratley p number theory prime numbers complex', 'numbers 5.39 ca701112 jb february 9 1978 4:28 pm']), ('CACM-1841', ['a prime number generator using the treesort principle algorithm 356', 'a1 cacm october 1969 singleton r c prime numbers number', 'theory sorting 3.15 5.30 5.31 ca691005 jb february 15 1978', '3:25 pm'])]
30->[('CACM-1926', ['description of format a text processing program format is a', 'production program which facilitates the editing and printing of finished', 'documents directly on the printer of a relatively small 64k', 'computer system it features good performance totally free form input', 'very flexible formatting capabilities including up to eight columns per', 'page automatic capitalization aids for index construction and a minimum', 'of nontext items it is written entirely in fortran iv', 'cacm march 1969 berns g m text processing indexing printing', 'documentation text editing formatting frequency dictionary right justification vocabulary 3.74', '3.75 3.9 ca690301 jb february 20 1978 9:45 am']), ('CACM-1457', ['data manipulation and programming problems in automatic information retrieval automatic', 'information retrieval programs require the manipulation of a variety of', 'different data structures including linear text sparse matrices and tree', 'or list structures the main data manipulations to be performed', 'in automatic information systems are first briefly reviewed a variety', 'of data representations which have been used to describe structured', 'information are then examined and the characteristics of various processing', 'languages are outlined in the light of the procedures requiring', 'implementation advantages of these programming languages for the retrieval application', 'are examined and suggestions are made for the design of', 'programming facilities to aid in information retrieval cacm march 1966', 'salton g ca660315 jb march 3 1978 11:35 am']), ('CACM-2786', ['a system for typesetting mathematics this paper describes the design', 'and implementation of a system for typesetting mathematics the language', 'has been designed to be easy to learn and to', 'use by people for example secretaries and mathematical typists who', 'know neither mathematics nor typesetting experience indicates that the language', 'can be learned in an hour or so for it', 'has few rules and fewer exceptions for typical expressions the', 'size and font changes positioning line drawing and the like', 'necessary to print according to mathematical conventions are all done', 'automatically for example the input sum from i o to', 'infinity x sub i pi over 2 produces formula the', 'syntax of the language is specified by a small context', 'free grammar a compiler compiler is used to make a', 'compiler that translates this language into typesetting commands output maybe', 'produced on either a phototypesetter or on a terminal with', 'forward and reverse half line motions the system interfaces directly', 'with text formatting programs so mixtures of text and mathematics', 'may be handled simply this paper was typeset by the', 'authors using the system described cacm march 1975 kernighan b', 'w cherry l l typesetting photocomposition compiler compiler graphics printing', 'text processing 4.12 4.22 8.2 ca750302 jb january 10 1978', '8:56 am']), ('CACM-1256', ['dynamic variable formatting cacm may 1965 king d r ca650515', 'jb march 7 1978 12:53 pm']), ('CACM-2738', ['use of the concept of transparency in the design of', 'hierarchically structured systems this paper deals with the design of', 'hierarchically structured programming systems it develops a method for evaluating', 'the cost of requiring programmers to work with an abstraction', 'of a real machine a number of examples from hardware', 'and software are given as illustrations of the method cacm', 'july 1975 parnas d l siewiorek d p hierarchical systems', 'bottom up design levels of abstraction synchronization primitives 4.20 4.30', '6.1 6.20 ca750704 dmm january 31 1978 3:46 pm'])]
31->[('CACM-3047', ['using synthetic images to register real images with surface models', 'a number of image analysis tasks can benefit from registration', 'of the image with a model of the surface being', 'imaged automatic navigation using visible light or radar images requires', 'exact alignment of such images with digital terrain models in', 'addition automatic classification of terrain using satellite imagery requires such', 'alignment to deal correctly with the effects of varying sun', 'angle and surface slope even inspection techniques for certain industrial', 'parts may be improved by this means we achieve the', 'required alignment by matching the real image with a synthetic', 'image obtained from a surface model and known positions of', 'the light sources the synthetic image intensity is calculated using', 'the reflectance map a convenient way of describing surface reflection', 'as a function of surface gradient we illustrate the technique', 'using landsat images and digital terrain models cacm november 1978', 'horn b bachman b image registration synthetic images surface models', 'automatic hill shading digital terrain models image transformation image matching', 'shaded images 3.63 3.11 3.14 8.2 3.83 ca781104 dh january', '26 1979 11:16 am']), ('CACM-1686', ['computer synthesis of holograms for 3 d display optical and', 'digital holography are reviewed the mathematical model and computational techniques', 'of the authors digital holographic process are discussed and applications', 'of computer holography are suggested computer holograms have been made', 'of three dimensional objects which give faithful reconstructions even in', 'white light a new approach based on point apertures for', 'the image is discussed photographs of the images reconstructed from', 'digital holograms are presented cacm october 1968 lesem l b', 'hirsch p m holography optics fourier transforms computer applications display', 'device photography physics mathematics image processing 3.17 3.19 5.19 ca681001', 'jb february 21 1978 4:27 pm']), ('CACM-2065', ['a programming system for the on line analysis of biomedical', 'images a preliminary description of the software for a computer', 'display system is given with special emphasis on the man', 'machine interaction this system is intended for a wide variety', 'of biomedical applications as an example the methods are applied', 'to the karyotyping of chromosomes the system is separated into', 'four programming tasks picture transformations file maintenance picture structuring and', 'display management picture structuring is considered as the vehicle for', 'man machine communication a prototype data format for pictures called', 'a picture form is developed structure operators are defined which', 'manipulate picture forms to produce new pictures forms many of', 'the ideas are taken from the symbolic mathematical laboratory at', 'mit conceived by marvin minsky cacm may 1970 hodes l', 'image processing biomedical image processing on line image processing semiautomatic', 'image processing data structure structure operators picture processing biomedical picture', 'processing on line picture processing semiautomatic picture processing semiautomatic karyotyping', 'karyotyping list processing picture processing 3.12 3.34 3.63 4.39 6.29', 'ca700501 jb february 13 1978 2:27 pm']), ('CACM-2142', ['reconstruction of pictures from their projections there are situations in', 'the natural sciences and medicine e g in electron microscopy', 'and x ray photography in which it is desirable to', 'estimate the gray levels of a digital picture at the', 'individual points from the sums of the gray levels along', 'straight lines projections at a few angles usually in such', 'situations the picture is far from determined and the problem', 'is to find the most representative picture three algorithms are', 'described all using monte carlo methods which were designed to', 'solve this problem the algorithms are applicable in a large', 'and varied number of fields the most important uses may', 'be the reconstruction of possibly asymmetric particles from electron micrographs', 'and three dimensional x ray analysis cacm december 1971 gordon', 'r herman g t approximation biomedical image processing efficient encoding', 'image processing linear programming mathematical programming monte carlo techniques optimization', 'picture compression picture description picture processing stereology x ray analysis', '3.12 3.13 3.15 3.17 3.63 5.41 5.6 ca711201 jb february', '2 1978 10:32 am']), ('CACM-2370', ['an experimental laboratory for pattern recognition and signal processing an', 'interactive computer controlled scanning and display system has been in', 'operation at the ibm thomas j watson research center for', 'three years the system includes two flying spot scanners and', 'a tv camera specially interfaced to a process control digital', 'computer dot mode and vector displays analog input and output', 'facilities and a variety of other experimental equipment the system', 'design and programming support are described and typical applications in', 'scanner control optical character recognition and image processing are presented', 'cacm april 1972 herbst n m will p m scanners', 'pseudorandom displays interactive terminal image processing pattern recognition 4.41 6.35', 'ca720403 jb january 31 1978 1:47 pm'])]
32->[('CACM-3139', ['new methods to color the vertices of a graph this', 'paper describes efficient new heuristic methods to color the vertices', 'of a graph which rely upon the comparison of the', 'degrees and structure of a graph a method is developed', 'which is exact for bipartite graphs and is an important', 'part of heuristic procedures to find maximal cliques in general', 'graphs finally an exact method is given which performs better', 'than the randall brown algorithm and is able to color', 'larger graphs and the new heuristic methods the classical methods', 'and the exact method are compared cacm april 1979 brelaz', 'd np complete graph structure balancing graph coloring scheduling comparison', 'of the methods 5.25 5.32 ca790405 dh june 5 1979', '2:05 pm']), ('CACM-3018', ['covering edges by cliques with regard to keyword conflicts and', 'intersection graphs kellerman has presented a method for determining keyword', 'conflicts and described a heuristic algorithm which solves a certain', 'combinatorial optimization problem in connection with this method this optimization', 'problem is here shown to be equivalent to the problem', 'of covering the edges of a graph by complete subgraphs', 'with the objective of minimizing the number of complete subgraphs', 'a relationship between this edge clique cover problem and the', 'graph coloring problem is established which allows algorithms for either', 'one of these problems to be constructed from algorithm for', 'the other as consequences of this relationship the keyword conflict', 'problem and the edge clique cover problem are shown to', 'be np complete and if p np then they do', 'not admit polynomial time approximation algorithms which always produce solutions', 'within a factor less than 2 from the optimum cacm', 'february 1978 kou l stockmeyer l wong c watson t', 'keyword conflicts intersection graphs node clique cover edge clique cover', 'computational complexity np complete problems polynomial time heuristics 4.12 5.25', '5.32 ca780205 jb march 28 1978 4:18 pm']), ('CACM-1145', ['git a heuristic program for testing pairs of directed line', 'graphs for isomorphism given a pair of directed line graphs', 'the problem of ascertaining whether or not they are isomorphic', 'is one for which no efficient algorithmic solution is known', 'since a straightforward enumerative algorithm might require 40 years of', 'running time on a very high speed computer in order', 'to compare two 15 node graphs a more sophisticated approach', 'seems called for the situation is similar to that prevailing', 'in areas such as game playing and theorem proving where', 'practical algorithms are unknown for the interesting cases but where', 'various practical though only partially successful techniques are available git', 'graph isomorphism tester incorporates a variety of processes that attempt', 'to narrow down the search for an isomorphism or to', 'demonstrate that none exists no one scheme is relied upon', 'exclusively for a solution and the program is designed to', 'avoid excessive computation along fruitless lines git has been written', 'in the comit language and successfully tested on the ibm', '7090 cacm january 1964 unger s h ca640110 jb march', '10 1978 5:24 am']), ('CACM-2177', ['an algorithm for the blocks and cutnodes of a graph', 'an efficient method is presented for finding blocks and cutnodes', 'of an arbitrary undirected graph the graph may be represented', 'either i as an ordered list of edges or ii', 'as a packed adjacency matrix if w denotes the word', 'length of the machine employed the storage in machine words', 'required for a graph with n nodes and m edges', 'increases essentially as 2 m n in case i or', 'n 2 win case ii a spanning tree with labeled', 'edges is grown two edges finally bearing different labels if', 'and only if they belong to different blocks for both', 'representations the time required to analyze a graph on n', 'nodes increases as n g where g depends on the', 'type of graph 1 g 2 and both bounds are', 'attained values of g are derived for each of several', 'suitable families of test graphs generated by an extension of', 'the web grammar approach the algorithm is compared in detail', 'with that proposed by read for which 1 g 3', 'cacm july 1971 paton k algorithm block block cutpoint tree', 'cutnode fundamental cycle set graph lobe lobe decomposition graph separable', 'spanning tree web grammar 5.32 ca710705 jb february 3 1978', '8:58 am']), ('CACM-2289', ['cellular arrays for the solution of graph problems a cellular', 'array is a two dimensional checkerboard type interconnection of identical', 'modules or cells where each cell contains a few bits', 'of memory and a small amount of combinational logic and', 'communicates mainly with its immediate neighbors in the array the', 'chief computational advantage offered by cellular arrays is the improvement', 'in speed achieved by virtue of the possibilities for parallel', 'processing in this paper it is shown that cellular arrays', 'are inherently well suited for the solution of many graph', 'problems for example the adjacency matrix of a graph is', 'easily mapped onto an array each matrix element is stored', 'in one cell of the array and typical row and', 'column operations are readily implemented by simple cell logic a', 'major challenge in the effective use of cellular arrays for', 'the solution of graph problems is the determination of algorithms', 'that exploit the possibilities for parallelism especially for problems whose', 'solutions appear to be inherently serial in particular several parallelized', 'algorithms are presented for the solution of certain spanning tree', 'distance and path problems with direct applications to wire routing', 'pert chart analysis and the analysis of many types of', 'networks these algorithms exhibit a computation time that in many', 'cases grows at a rate not exceeding log2 n where', 'n is the number of nodes in the graph straightforward', 'cellular implementations of the well known serial algorithms for these', 'problems require about n steps and noncellular implementations require from', 'n 2 to n 3 steps cacm september 1972 levitt', 'k n kautz w h graph theory cellular logic in', 'memory arrays parallel processing special purpose computers algorithms for distance', 'and spanning tree problems 5.32 6.22 6.5 ca720901 jb january', '30 1978 9:16 am'])]
33->[('CACM-2043', ['eigenvalues and eigenvectors of a real symmetric matrix f2 algorithm', '384 cacm june 1970 stewart g w real symmetric matrix', 'eigenvalues eigenvectors qr algorithm 5.14 ca700612 jb february 13 1978', '10:34 am']), ('CACM-1954', ['eigenvalues and eigenvectors of a real symmetric matrix algorithm 384', 'f2 cacm december 1970 stewart g w real symmetric matrix', 'eigenvalues eigenvectors qr algorithm 5.14 ca701209 jb february 9 1978', '3:08 pm']), ('CACM-2697', ['a fast method for solving a class of tridiagonal linear', 'systems the solution of linear systems having real symmetric diagonally', 'dominant tridiagonal coefficient matrices with constant diagonals is considered it', 'is proved that the diagonals of the lu decomposition converges', 'when floating point precision it is also proved that the', 'computed lu decomposition converges when floating point arithmetic is used', 'and that the limits of the lu diagonals using floating', 'point are roughly within machine precision of the limits using', 'real arithmetic this fact is exploited to reduce the number', 'of floating point operations required to solve a linear system', 'from 8n-7 to 5n 2k-3 where k is much less', 'than n the order of the matrix if the elements', 'of the subdiagonals and superdiagonals are 1 then only 4n', '2k-3 operations are needed the entire lu decomposition takes k', 'words of storage and considerable savings in array subscripting are', 'achieved upper and lower bounds on k are obtained in', 'terms of the ratio of the coefficient matrix diagonal constants', 'and parameters of the floating point number system various generalizations', 'of these results are discussed cacm january 1974 malcolm m', 'a palmer j numerical linear algebra linear systems toeplitz matrices', 'tridiagonal matrices 5 5.1 5.11 5.14 5.17 ca740102 jb january', '18 1978 2:50 pm']), ('CACM-2335', ['eigenvalues and eigenvectors of a real general matrix algorithm r343', 'cacm june 1972 niessner h eigenvalues eigenvectors qr algorithm nonsymmetric', 'matrices general matrices 5.14 ca720610 jb january 30 1978 4:11', 'pm']), ('CACM-2047', ['incorporating origin shifts into the qr algorithm for symmetric tridiagonal', 'matrices the qr iteration for the eigenvalues of a symmetric', 'tridiagonal matrix can be accelerated by incorporating a sequence of', 'origin shifts the origin shift may be either subtracted directly', 'from the diagonal elements of the matrix or incorporated by', 'means of an implicit algorithm both methods have drawbacks the', 'direct method can unnecessarily degrade small eigenvalues while the implicit', 'method can effectively loose the shift and thereby retard the', 'convergence this paper presents a new method which has neither', 'drawback cacm june 1970 stewart g w eigenvalues eigenvectors qr', 'method origin shifts symmetric tridiagonal matrix 5.14 ca700608 jb february', '13 1978 11:02 am'])]
34->[('CACM-1763', ['roots of low order polynomial equations algorithm 326 c2 cacm', 'april 1968 nonweiler t f root finders polynomial equation roots', 'quadratic equation roots cubic equation roots biquadratic equation roots polynomial', 'zeros 5.15 ca680407 jb february 23 1978 10:27 am']), ('CACM-1893', ['roots of polynomials by a root squaring and resultant routine', 'algorithm 340 c2 cacm may 1969 noltemeier a root finders', 'roots of polynomial equations polynomial zeros root squaring operations graeffe', 'method resultant procedure subresultant procedure testing of roots acceptance criteria', '5.15 ca690517 jb february 17 1978 2:29 pm']), ('CACM-1667', ['roots of polynomials by a root squaring and resultant routine', 'algorithm 340 c2 cacm november 1968 noltemeier a root finders', 'roots of polynomial equations polynomial zeros root squaring operations graeffe', 'method resultant procedure subresultant procedure testing of roots acceptance criteria', '5.15 ca681112 jb february 21 1978 2:24 pm']), ('CACM-1524', ['a stopping criterion for polynomial root finding when searching for', 'the root of a polynomial it is generally difficult to', 'know just when to accept a number as an adequate', 'approximation to the root in this paper an algorithm is', 'presented which allows one to terminate the iteration process on', 'the basis of calculated bounds for the roundoff error which', 'occurs in evaluating the polynomial this stopping criterion has been', 'tested on numerous examples and has been found to serve', 'as a satisfactory means for accepting a complex number as', 'a zero of a real polynomial cacm october 1967 adams', 'd a ca671009 jb february 27 1978 1:56 pm']), ('CACM-1567', ['on the representation of symmetric polynomials relations are given between', 'certain symmetric polynomials in the light of the theory of', 'the symmetric group such an approach unifies earlier work and', 'lends insight to previously published work by aaron booker a', 'generalization of graeffe s root squaring technique for the determination', 'of the roots of a polynomial is suggested cacm july', '1967 mckay j k s ca670706 jb february 28 1978', '8:56 am'])]
35->[('CACM-2932', ['complexity of computations the framework for research in the theory', 'of complexity of computations is described emphasizing the in terrelation', 'between seemingly diverse problems and methods illustrative examples of practical', 'and theoretical significance are given directions for new research are', 'discussed cacm september 1977 rabin m o complexity of computations', 'algebraic complexity in tractable problems probabilistic algorithms 5.25 ca770901 jb', 'december 28 1977 6:54 am']), ('CACM-1474', ['tests of probabilistic models for propagation of roundoff errors in', 'any prolonged computation it is generally assumed that the accumulated', 'effect of roundoff errors is in some sense statistical the', 'purpose of this paper is to give precise descriptions of', 'certain probabilistic models for roundoff error and then to describe', 'a series of experiments for testing the validity of these', 'models it is concluded that the models are in general', 'very good discrepancies are both rare and mild the test', 'techniques can also be used to experiment with various types', 'of special arithmetic cacm february 1966 hull t e swenson', 'j r ca660210 jb march 3 1978 2:37 pm']), ('CACM-3175', ['breaking substitution ciphers using a relaxation algorithm substitution ciphers are', 'codes in which each letter of the alphabet has one', 'fixed substitute and the word divisions do not change in', 'this paper the problem of breaking substitution ciphers is represented', 'as a probabilistic labeling problem every code letter is assigned', 'probabilities of representing plain text letters these probabilities are updated', 'in parallel for all code letters using joint letter probabilities', 'iterating the updating scheme results in improved estimates that finally', 'lead to breaking the cipher the method is applies successfully', 'to two examples cacm november 1979 peleg s rosenfeld a', 'cryptography substitution ciphers probabilistic classification relaxation 3.42 3.63 ca791103 db', 'january 23 1980 11:15 am']), ('CACM-2836', ['weighted derivation trees the nodes of a weighted derivation tree', 'are associated with weighting functions over the vocabulary of a', 'context free grammar an algorithm is presented for constructing the', 'optimal derivation tree having the same structure as a given', 'weighted derivation tree in addition the correctness of the algorithm', 'is established the method may be applied to problems involving', 'probabilistic parsing or combinatorial optimization cacm september 1976 loui m', 'c derivation tree parse tree probabilistic grammar structural ambiguity combinatorial', 'optimization 5.23 5.49 ca760903 jb january 4 1978 9:41 am']), ('CACM-2165', ['general relativity and the application of algebraic manipulative systems the', 'paper describes some applications of symbolic algebra systems to problems', 'of general relativity including the derivation of the field equations', 'the petrov classification of a metric and the solution of', 'the field equations in the presence of matter in a', 'simple case attention is drawn to the strictly algebraic difficulties', 'encountered in this work cacm august 1971 barton d fitch', 'j p symbolic mathematics nonnumerical mathematics general relativity algebraic manipulation', 'equation manipulation 1.3 3.11 5.10 ca710807 jb february 2 1978', '2:53 pm'])]
36->[('CACM-1265', ['on the relative efficiencies of context free grammar recognizers a', 'number of diverse recognition procedures that have been proposed for', 'parsing sentences with respect to a context free grammar are', 'described in this paper by means of a common device', 'each procedure is defined by giving an algorithm for obtaining', 'a nondeterministic turing machine recognizer that is equivalent to a', 'given context free grammar the formalization of the turing machine', 'has been chosen to make possible particularly simple description of', 'the parsing procedures considered an attempt has been made to', 'compare recognition efficiencies for the procedures defined for a few', 'simple grammars and sentences a formal comparison has been made', 'empirical comparison of the recognition of more realistic programming languages', 'such as lisp and algol has been made by means', 'of a program which simulates the turing machine on the', 'univac m-460 computer several algorithms for producing grammars equivalent to', 'a given context free grammar have been considered and the', 'increase in recognition efficiency they afford has been empirically investigated', 'cacm may 1965 griffiths t v petrick s r ca650506', 'jb march 7 1978 2:38 pm']), ('CACM-2110', ['an efficient context free parsing algorithm a parsing algorithm which', 'seems to be the most efficient general context free algorithm', 'known is described it is similar to both knuth s', 'lr k algorithm and the familiar top down algorithm it', 'has a time bound proportional to n 3 where n', 'is the length of the string being parsed in general', 'it has a n 2 bound for unambiguous grammars and', 'it runs in linear time on a large class of', 'grammars which seems to include most practical context free programming', 'language grammars in an empirical comparison it appears to be', 'superior to the top down and bottom up algorithms studied', 'by griffiths and petrick cacm february 1970 earley j syntax', 'analysis parsing context free grammar compilers computational complexity 4.12 5.22', '5.23 ca700205 jb february 14 1978 10:35 am']), ('CACM-2030', ['context sensitive parsing this paper presents a canonical form for', 'context sensitive derivations and a parsing algorithm which finds each', 'context sensitive analysis once and only once the amount of', 'memory required by the algorithm is essentially no more than', 'the required to store a single complete derivation in addition', 'a modified version of the basic algorithm is presented which', 'blocks infinite analyses for grammars which contain loops the algorithm', 'is also compared with several previous parsers for context sensitive', 'grammars and general rewriting systems and the difference between the', 'two types of analyses is discussed the algorithm appears to', 'be complementary to an algorithm by s kuno in several', 'respects including the space time trade off and the degree', 'of context dependence involved cacm july 1970 woods w a', 'context sensitive grammars context sensitive parsing formal grammars formal language', 'theory parsing parsing algorithms recognition algorithms 3.42 5.22 5.23 ca700707', 'jb february 10 1978 4:43 pm']), ('CACM-2061', ['an algorithm for the construction of bounded context parsers an', 'algorithm is described which accepts an arbitrary context free grammar', 'and constructs a bounded context parser for it whenever such', 'a parser exists in the first part of the paper', 'the definition of a context free grammar and the working', 'of a bounded context parser are recalled the notion of', 'reduction class for a context free grammar is then introduced', 'and its connection with the structure of a bounded context', 'parser is indicated next pushdown automata which generate the different', 'reduction classes of a context free grammar are defined finally', 'the algorithm is described it essentially carries out an exhaustive', 'study of all possible runs of the pushdown automata generating', 'the reduction classes in the second part the utility of', 'the algorithm is discuss ed in the light of the', 'experience gained from its use in compiler design the algorithm', 'is claimed to be particularly useful in the simultaneous design', 'of a language and a compiler for it cacm may', '1970 loeckx j bounded context parsing bounded context syntactic analysis', 'parser construction syntactical analyzer construction generators compiler compilers compiler writing', 'systems translator writing systems metacompilers context free grammars formal languages', 'pushdown automata 4.12 5.22 5.23 ca700505 jb february 13 1978', '1:58 pm']), ('CACM-2112', ['translation equations input limited transduction expressions or translation equations are', 'used to describe the syntax and left context sensitive semantics', 'for context free languages a formal procedure is given for', 'deriving from a set of translation equations the specifications for', 'a pushdown translator the translator consists of mealy form finite', 'state automata interacting by means of a pushdown stack within', 'the framework described string recognition and parsing may be treated', 'as special cases of the translation problem cacm february 1970', 'vere s automata turing machines regular expression transduction expression context', 'free languages translation recognizers parsing meta compilers pushdown transducer syntax', 'directed compilers finite state automata 4.10 4.12 4.20 5.22 ca700203', 'jb february 14 1978 10:49 am'])]
37->[('CACM-2376', ['synchronization of communicating processes formalization of a well defined synchronization', 'mechanism can be used to prove that concurrently running processes', 'of a system communicate correctly this is demonstrated for a', 'system consisting of many sending processes which deposit messages in', 'a buffer and many receiving processes which remove messages from', 'that buffer the formal description of the synchronization mechanism makes', 'it very easy to prove that the buffer will neither', 'overflow nor underflow that senders and receivers will never operate', 'on the same message frame in the buffer nor will', 'they run into a deadlock cacm march 1972 habermann a', 'n parallel programming multiprogramming program correctness process communication process scheduling', '4.30 4.32 4.39 4.9 ca720305 jb january 31 1978 2:44', 'pm']), ('CACM-2956', ['some ideas on data types in high level languages a', 'number of issues are explored concerning the notion that a', 'data type is a set of values together with a', 'set of primitive operations on those values among these are', 'the need for a notation for iterating over the elements', 'of any finite set instead of the more narrow for', 'i 1 to n notation the use of the domain', 'of an array as a data type the need for', 'a simple notation for allowing types of parameters to be', 'themselves parameters but in a restrictive fashion and resulting problems', 'with conversion of values from one type to another cacm', 'june 1977 gries d gehani n data types generic procedures', 'programming languages 4.12 4.20 4.22 ca770607 jb december 28 1977', '1:27 pm']), ('CACM-2265', ['a model for type checking most current programming languages treat', 'computation over different classes of objects e g numbers strings', 'labels and functions for correct compilation and execution the following', 'question then arises is a program properly constructed so that', 'its operations and operands are compatible the activity of answering', 'this question is usually called type checking this paper attempts', 'to isolate the notion of type checking and presents a', 'partial solution to the type checking problem based on the', 'notions of abstraction and application of functions in particular a', 'program is mapped into an expression within a decidable subset', 'of the lambda calculus which characterizes the type relations within', 'the program and eliminates all other information the determination of', 'the type wise correctness or incorrectness of the program is', 'resolved by reducing its corresponding lambda calculus expression to one', 'of two normal forms the constant correct for a type', 'wise correct program or the constant error an application to', 'type checking in algol 60 is made and the attendant', 'problems faced for any notion of type checking are discussed', 'cacm november 1972 ledgard h f type checking types lambda', 'calculus models for programming languages syntax semantics compiler writing language', 'implementation formal definition 4.12 4.22 5.2 5.21 5.23 ca721104 jb', 'january 27 1978 2:30 pm']), ('CACM-3103', ['automatic data structure selection an example and overview the use', 'of several levels of abstraction has proved to be very', 'helpful in constructing and maintaining programs when programs are designed', 'with abstract data types such as sets and lists programmer', 'time can be saved by automating the process of filling', 'in low level implementation details in the past programming systems', 'have provided only a single general purpose implementation for an', 'abstract type thus the programs produced using abstract types were', 'then inefficient in space or time in this paper a', 'system for automatically choosing efficient implementations for abstract types from', 'a library of implementations is discussed this process is discussed', 'in detail for an example program general issues in data', 'structure selection are also reviewed cacm may 1978 low j', 'abstract data types automatic programming data structures optimizing compilers sets', 'lists 4.12 4.22 4.6 ca780504 dh february 26 1979 1:51', 'pm']), ('CACM-2651', ['the treatment of data types in el1 in constructing a', 'general purpose programming language a key issue is providing a', 'sufficient set of data types and associated operations in a', 'manner that permits both natural problem oriented notation and efficient', 'implementation the el1 language contains a number of features specifically', 'designed to simultaneously satisfy both requirements the resulting treatment of', 'data types includes provision for programmer defined data types data', 'types and generic routines programmer control over type conversion and', 'very flexible data type behavior in a context that allows', 'efficient compiled code and compact data representation cacm may 1974', 'wegbreit b data types modes mode unions type conversion coercion', 'generic functions extensible languages data type definition data description language', 'compilation 4.12 4.13 4.22 ca740502 jb january 17 1978 4:32', 'pm'])]
38->[('CACM-2941', ['early experience with mesa the experiences of mesa s first', 'users primarily its implementers are discussed and some implications for', 'mesa and similar programming languages are suggested the specific topics', 'addressed are module structure and its use in defining abstractions', 'data structuring facilities in mesa an equivalence algorithm for types', 'and type coercions the benefits of the type system and', 'why it is breached occasionally and the difficulty of making', 'the treatment of variant records safe cacm august 1977 geschke', 'c m morris j h jr satterthwaite e h programming', 'languages types modules data structures systems programming 4.22 ca770802 jb', 'december 28 1977 8:07 am']), ('CACM-2867', ['modularization and hierarchy in a family of operating systems this', 'paper describes the design philosophy used in the construction of', 'a family of operating systems it is shown that the', 'concepts of module and level do not coincide in a', 'hierarchy of functions family members can share much software as', 'a result of the implementation of run time modules at', 'the lowest system level cacm may 1976 habermann a n', 'flon l cooprider l incremental machine design module data type', 'address space virtual memory 4.0 4.30 4.35 ca760504 jb january', '4 1978 3:33 pm']), ('CACM-2958', ['abstract data types and the development of data structures abstract', 'data types can play a significant role in the development', 'of software that is reliable efficient and flexible this paper', 'presents and discusses the application of an algebraic technique for', 'the specification of abstract data types among the examples presented', 'is a top down development of a symbol table for', 'a block structured language a discussion of the proof of', 'its correctness is given the paper also contains a brief', 'discussion of the problems involved in constructing algebraic specifications that', 'are both consistent and complete cacm june 1977 guttag j', 'abstract data type correctness proof data type data structure specification', 'software specification 4.34 5.24 ca770605 jb december 29 1977 1:17', 'am']), ('CACM-3103', ['automatic data structure selection an example and overview the use', 'of several levels of abstraction has proved to be very', 'helpful in constructing and maintaining programs when programs are designed', 'with abstract data types such as sets and lists programmer', 'time can be saved by automating the process of filling', 'in low level implementation details in the past programming systems', 'have provided only a single general purpose implementation for an', 'abstract type thus the programs produced using abstract types were', 'then inefficient in space or time in this paper a', 'system for automatically choosing efficient implementations for abstract types from', 'a library of implementations is discussed this process is discussed', 'in detail for an example program general issues in data', 'structure selection are also reviewed cacm may 1978 low j', 'abstract data types automatic programming data structures optimizing compilers sets', 'lists 4.12 4.22 4.6 ca780504 dh february 26 1979 1:51', 'pm']), ('CACM-2082', ['syntax directed documentation for pl 360 the language pl 360', 'together with its phrase structure grammar is used as a', 'concrete basis for illustrating an idea called syntax directed documentation', 'this idea is 1 to use the phrase structure of', 'a program to define the structure of a formal documentation', 'for that program 2 to use the syntactic types and', 'identifiers in the resulting structure to trigger the automatic formation', 'of questions to the programmer whose answers will become part', 'of that documentation and 3 to provide automatic storage and', 'retrieval facilities so that other programmers who want to understand', 'or modify the program can access the resulting documentation which', 'is cross indexed in various ways by syntactic types and', 'objects a small pl 360 program already found in the', 'literature is worked out as an example cacm april 1970', 'mills h d documentation syntax analysis pl 360 enforced documentation', 'indexed documentation automatic interrogation phase structured grammar syntax directed documentation', 'syntax processing 3.59 3.79 4.19 4.43 ca700402 jb february 13', '1978 3:28 pm'])]
39->[('CACM-2651', ['the treatment of data types in el1 in constructing a', 'general purpose programming language a key issue is providing a', 'sufficient set of data types and associated operations in a', 'manner that permits both natural problem oriented notation and efficient', 'implementation the el1 language contains a number of features specifically', 'designed to simultaneously satisfy both requirements the resulting treatment of', 'data types includes provision for programmer defined data types data', 'types and generic routines programmer control over type conversion and', 'very flexible data type behavior in a context that allows', 'efficient compiled code and compact data representation cacm may 1974', 'wegbreit b data types modes mode unions type conversion coercion', 'generic functions extensible languages data type definition data description language', 'compilation 4.12 4.13 4.22 ca740502 jb january 17 1978 4:32', 'pm']), ('CACM-2940', ['abstraction and verification in alphard defining and specifying iteration and', 'generators the alphard form provides the programmer with a great', 'deal of control over the implementation of abstract data types', 'in this paper the abstraction techniques are extended from simple', 'data representation and function definition to the iteration statement the', 'most important poin t of interaction between data and the', 'control structure of the language itself a means of specializing', 'alphard s loops to operate on abstract entities without explicit', 'dependence on the representation of those entities is in troduced', 'specification and verification techniques that allow the properties of the', 'generators for such iterations to be expressed in the form', 'of proof rules are developed results are obtained that for', 'common special cases of these loops are essentially identical to', 'the corresponding constructs in other languages a means of showing', 'that a generator will terminate is also provided cacm august', '1977 shaw m wulf w a abstraction and representation abstract', 'data types assertions control specialization correctness generators invariants iteration statements', 'modular decomposition program specifications programming languages programming methodology proofs of', 'correctness types verification 4.20 5.24 ca770803 jb december 28 1977', '7:59 am']), ('CACM-1861', ['the mad definition facility one of the first definition facilities', 'for higher level languages is described users of the language', 'can define new operators and or data types into the', 'mad language so that their use appears as if they', 'were predefined information is given on how one writes definitions', 'as well as on much of the motivation behind the', 'form in which definitions are written some conclusions are drawn', 'about future definitional facilities cacm august 1969 arden b w', 'galler b a graham r m mad definitions operators macros', 'higher level language 4.12 4.22 ca690802 jb february 15 1978', '6:07 pm']), ('CACM-3103', ['automatic data structure selection an example and overview the use', 'of several levels of abstraction has proved to be very', 'helpful in constructing and maintaining programs when programs are designed', 'with abstract data types such as sets and lists programmer', 'time can be saved by automating the process of filling', 'in low level implementation details in the past programming systems', 'have provided only a single general purpose implementation for an', 'abstract type thus the programs produced using abstract types were', 'then inefficient in space or time in this paper a', 'system for automatically choosing efficient implementations for abstract types from', 'a library of implementations is discussed this process is discussed', 'in detail for an example program general issues in data', 'structure selection are also reviewed cacm may 1978 low j', 'abstract data types automatic programming data structures optimizing compilers sets', 'lists 4.12 4.22 4.6 ca780504 dh february 26 1979 1:51', 'pm']), ('CACM-3105', ['a language extension for expressing constraints on data access controlled', 'sharing of information is needed and desirable for many applications', 'and is supported in operating systems by access control mechanisms', 'this paper shows how to extend programming languages to provide', 'controlled sharing the extension permits expression of access constraints on', 'shared data access constraints can apply both to simple objects', 'and to objects that are components of larger objects such', 'as bank account records in a bank s data base', 'the constraints are stated declaratively and can be enforced by', 'static checking similar to type checking the approach can be', 'used to extend any strongly typed language but is particularly', 'suitable for extending languages that support the notion of abstract', 'data types cacm may 1978 jones a liskov b programming', 'languages access control data types abstract data types type checking', 'capabilities 4.20 4.35 ca780502 dh february 26 1979 3:19 pm'])]
40->[('CACM-2941', ['early experience with mesa the experiences of mesa s first', 'users primarily its implementers are discussed and some implications for', 'mesa and similar programming languages are suggested the specific topics', 'addressed are module structure and its use in defining abstractions', 'data structuring facilities in mesa an equivalence algorithm for types', 'and type coercions the benefits of the type system and', 'why it is breached occasionally and the difficulty of making', 'the treatment of variant records safe cacm august 1977 geschke', 'c m morris j h jr satterthwaite e h programming', 'languages types modules data structures systems programming 4.22 ca770802 jb', 'december 28 1977 8:07 am']), ('CACM-2956', ['some ideas on data types in high level languages a', 'number of issues are explored concerning the notion that a', 'data type is a set of values together with a', 'set of primitive operations on those values among these are', 'the need for a notation for iterating over the elements', 'of any finite set instead of the more narrow for', 'i 1 to n notation the use of the domain', 'of an array as a data type the need for', 'a simple notation for allowing types of parameters to be', 'themselves parameters but in a restrictive fashion and resulting problems', 'with conversion of values from one type to another cacm', 'june 1977 gries d gehani n data types generic procedures', 'programming languages 4.12 4.20 4.22 ca770607 jb december 28 1977', '1:27 pm']), ('CACM-3105', ['a language extension for expressing constraints on data access controlled', 'sharing of information is needed and desirable for many applications', 'and is supported in operating systems by access control mechanisms', 'this paper shows how to extend programming languages to provide', 'controlled sharing the extension permits expression of access constraints on', 'shared data access constraints can apply both to simple objects', 'and to objects that are components of larger objects such', 'as bank account records in a bank s data base', 'the constraints are stated declaratively and can be enforced by', 'static checking similar to type checking the approach can be', 'used to extend any strongly typed language but is particularly', 'suitable for extending languages that support the notion of abstract', 'data types cacm may 1978 jones a liskov b programming', 'languages access control data types abstract data types type checking', 'capabilities 4.20 4.35 ca780502 dh february 26 1979 3:19 pm']), ('CACM-1098', ['a comparison of list processing computer languages including a detailed', 'comparison of comit ipl v lisp 1.5 and slip a', 'detailed comparison is presented of comit ipl v lisp 1.5', 'and slip four well known computer programming languages which among', 'them exhibit all the principal characteristics of existing list processing', 'languages important common features of list processing languages are reviewed', 'forms of data structures which are manipulated necessity for dynamic', 'allocation of storage use of pushdown stores and use of', 'recursive operations principal differences between the four languages under consideration', 'are detailed representations of data both by the programmer and', 'within the machine methods for storage allocation programming formalisms and', 'special processes available including arithmetic facilities and usability in terms', 'of availability documentation learning aids and debugging facilities a rough', 'comparison shows that all the languages discussed have approximately the', 'same speed finally the authors give some heuristics to aid', 'in the selection of one of these languages for use', 'in particular problem applications concluding that no one of the', 'languages considered is distinctly superior in all possible list processing', 'applications cacm april 1964 bobrow d g raphael b ca640410', 'jb march 10 1978 1:37 am']), ('CACM-2651', ['the treatment of data types in el1 in constructing a', 'general purpose programming language a key issue is providing a', 'sufficient set of data types and associated operations in a', 'manner that permits both natural problem oriented notation and efficient', 'implementation the el1 language contains a number of features specifically', 'designed to simultaneously satisfy both requirements the resulting treatment of', 'data types includes provision for programmer defined data types data', 'types and generic routines programmer control over type conversion and', 'very flexible data type behavior in a context that allows', 'efficient compiled code and compact data representation cacm may 1974', 'wegbreit b data types modes mode unions type conversion coercion', 'generic functions extensible languages data type definition data description language', 'compilation 4.12 4.13 4.22 ca740502 jb january 17 1978 4:32', 'pm'])]
41->[('CACM-3128', ['synchronization with eventcounts and sequencers synchronization of concurrent processes requires', 'controlling the relative ordering of events in the processes a', 'new synchronization mechanism is proposed using abstract objects called eventcounts', 'and sequencers that allows processes to control the ordering of', 'events directly rather than using mutual exclusion to protect manipulations', 'of shared variables that control ordering of events direct control', 'of ordering seems to simplify correctness arguments and also simplifies', 'implementation in distributed systems the mechanism is defined formally and', 'then several examples of its use are given the relationship', 'of the mechanism to protection mechanisms in the system is', 'explained in particular eventcounts are shown to be applicable to', 'situations where confinement of information matters an implementation of eventcount', 's and sequencers in a system with shared memory is', 'described cacm february 1979 reed d kanodia r process synchronization', 'interprocess communication distributed systems security models mutual exclusion semaphores 4.30', '4.32 ca790207 dh april 12 1979 10:03 am']), ('CACM-3082', ['time clocks and the ordering of events in a distributed', 'system the concept of one event happening before another in', 'a distributed system is examined and is shown to define', 'a partial ordering of the events a distributed algorithm is', 'given for synchronizing a system of logical clocks which can', 'be used to totally order the events the use of', 'the total ordering is illustrated with a method for solving', 'synchronization problems the algorithm is then specialized for synchronizing physical', 'clocks and a bound is derived on how far out', 'of synchrony the clocks can become cacm july 1978 lamport', 'l distributed systems computer networks clock synchronization multiprocess systems 4.32', '5.29 ca780706 dh february 7 1979 4:30 pm']), ('CACM-2578', ['self stabilizing systems in spite of distributed control cacm november', '1974 dijkstra e w multiprocessing networks self stabilization synchronization mutual', 'exclusion robustness sharing error recovery distributed control harmonious cooperation self', 'repair 4.32 ca741106 jb january 16,1978 10:18 am']), ('CACM-3043', ['distributed processes a concurrent programming concept a language concept for', 'concurrent processes without common variables is introduced these processes communicate', 'and synchronize by means of procedure calls and guarded regions', 'this concept is proposed for real time applications controlled by', 'microcomputer networks with distributed storage the paper gives several examples', 'of distributed processes and shows that they include procedures coroutines', 'classes monitors processes semaphores buffers path expressions and input output', 'as special cases cacm november 1978 hansen p concurrent programming', 'distributed processes microprocessor networks nondeterminism guarded regions programming languages process', 'communication and scheduling sorting arrays coroutines classes monitors processes semaphores', 'buffers path expressions input output 3.8 4.2 4.22 4.32 5.24', 'ca781108 dh january 26 1979 10:40 am']), ('CACM-3148', ['high level programming for distributed computing programming for distributed and', 'other loosely coupled systems is a problem of growing interest', 'this paper describes an approach to distributed computing at the', 'level of general purpose programming languages based on primitive notions', 'of module message and transaction key the methodology is shown', 'to be independent of particular languages and machines it appears', 'to be useful for programming a wide range of tasks', 'this is part of an ambitious program of development in', 'advanced programming languages and relations with other aspects of the', 'project are also discussed cacm june 1979 feldman j distributed', 'computing modules messages assertions 4.22 4.32 ca790604 dh august 21', '1979 4:31 pm'])]
42->[('CACM-2641', ['a minimal spanning tree clustering method z algorithm a479 cacm', 'june 1974 page r l clustering pattern recognition feature selection', 'minimal spanning trees 3.63 5.39 5.5 ca740605 jb january 17', '1978 3:06 pm']), ('CACM-0462', ['computer pattern recognition techniques electrocardiographic diagnosis the use of programmed', 'digital computers as general pattern classification and recognition devices is', 'one phase of the current lively interest in artificial intelligence', 'it is important to choose a class of signals which', 'is at present undergoing a good deal of visual inspection', 'by trained people for the purpose of pattern recognition in', 'this way comparisons between machine and human performance may be', 'obtained a practical result also serves as additional motivation clinical', 'electrocardiograms make up such a class of signals the approach', 'to the problem presented here centers upon the use of', 'multiple adaptive matched filters that classify normalized signals the present', 'report fives some of the background for the application of', 'this method cacm october 1962 stark l okajima m whipple', 'g h ca621018 jb march 17 1978 7:04 pm']), ('CACM-2215', ['application of game tree searching techniques to sequential pattern recognition', 'a sequential pattern recognition spr procedure does not test all', 'the features of a pattern at once instead it selects', 'a feature to be tested after receiving the result of', 'that test the procedure either classifies the unknown pattern or', 'selects another feature to be tested etc medical diagnosis is', 'an example of spr in this paper the authors suggest', 'that spr be viewed as a one person game played', 'against nature chance virtually all the powerful techniques developed for', 'searching two person strictly competitive game trees can easily be', 'incorporated either directly or by analogy into spr procedures in', 'particular one can incorporate the mini average backing up procedure', 'and the gamma procedure which are the analogues of the', 'minimax backing up procedure and the alpha beta procedure respectively', 'some computer simulated experiments in character recognition are presented the', 'results indicate that the approach is promising cacm february 1971', 'slagle j r lee r c t sequential pattern recognition', 'game tree searching game against nature gamma procedure mini average', 'backing up procedure dynamic programming branch and bound approach optimal', 'solution 3.60 3.63 5.42 ca710206 jb february 8 1978 8:56', 'am']), ('CACM-2402', ['pictorial pattern recognition and the phase problem of x ray', 'crystallography the availability of interactive three dimensional computer graphics systems', 'coupled to powerful digital computers encourages the development of algorithms', 'adapted to this environment pictorial pattern recognition techniques make possible', 'a number of approaches to x ray structure determination based', 'on molecular model building i e the use of chemical', 'information to frame structural hypotheses which can computationally be tested', 'and refined by reference to the experimental data application of', 'standard pattern recognition algorithms is hindered by the fact that', 'the cross correlation between a model and the correct structure', 'cannot be computed because of a fundamental incompleteness in the', 'measured data however it is possible to compute an upper', 'bound to such a cross correlation a simple example demonstrates', 'that this information can be the basis of a technique', 'for structure determination that can make effective use of an', 'interactive graphics system model building by cross correlations has intrinsic', 'advantages over usual crystallographic techniques based on the autocorrelation or', 'patterson function especially for large structures this is significant for', 'crystallography of biological macromolecules hasbeen and will continue to be', 'a field of intense interest cacm january 1972 lesk a', 'm pictorial pattern recognition phase problem x ray crystallography interactive', 'graphics 3.13 3.17 3.63 ca720101 jb february 1 1978 9:53', 'am']), ('CACM-2019', ['normalization techniques for hand printed numerals family of pattern standardization', 'techniques based on geometrical projection is applied to a file', 'of digitized hand printed numerals obtained from sales clerks the', 'principle involves transforming a quadrilateral specified in terms of the', 'convex hull of each pattern into a square the amount', 'of overlap within each class of characters versus the amount', 'between classes is used to evaluate the degree of normalization', 'achieved with respect to other published methods including size and', 'shear normalization through moments cacm august 1970 nagy g tuong', 'n pattern recognition character recognition normalization projective transformation central projection', 'hand printed characters handwriting linear transformation size normalization mapping pattern', 'preprocessor 3.63 5.14 ca700802 jb february 10 1978 4:03 pm'])]
43->[('CACM-2569', ['computer generation of gamma random variates with non integral shape', 'parameters when the shape parameter a is integral generating gamma', 'random variables with a digital computer is straightforward there is', 'no simple method for generating gamma random variates with non', 'integral shape parameters a common procedure is to approximately generate', 'such random variables by use of the so called probability', 'switch method another procedure which is exact is due to', 'johnk this paper presents a rejection method for exactly generating', 'gamma random variables when a is greater than 1 the', 'efficiency of the rejection method is shown to be better', 'than the efficiency of johnk s method the paper concludes', 'that when a is non integral the following mix of', 'procedures yields the best combination of accuracy and efficiency 1', 'when a is less than 1 use johnk s method', '2 when 1 is less than a and a is', 'less than 5 use the rejection method 3 when a', 'is greater than 5 use the probability switch method cacm', 'december,1974 wallace n d simulation gamma random variables probability distribution', 'random numbers 5.5 8.1 ca741205 jb january 16 1978 9:35', 'am']), ('CACM-3107', ['generating beta variates with nonintegrel shape parameters a new rejection', 'method is described for generating beta variates the method is', 'compared with previously published methods both theoretically and through computer', 'timings it is suggested that the method has advantages in', 'both speed and programming simplicity over previous methods especially for', 'difficult combinations of parameter values cacm april 1978 cheng r', 'beta variates random numbers simulation 5.5 8.1 ca780409 dh february', '26 1979 3:32 pm']), ('CACM-2771', ['the synthesis of solids bounded by many faces a technique', 'is presented which allows a class of solid objects to', 'be synthesized and stored using a computer synthesis begins with', 'primitive solids like a cube wedge or cylinder any solid', 'can be moved scaled or rotated solids may also be', 'added together or subtracted two algorithms to perform addition are', 'described for practical designers the technique has the advantage that', 'operations are concise readily composed and are given in terms', 'of easily imagined solidsuite short sequences of operations suffice to', 'build up complex solids bounded by many faces cacm april', '1975 braid i c computational geometry computer aided design graphics', 'machined components polyhedra shape synthesis three dimensional modeling 3.2 8.2', 'ca750406 jb january 9 1978 3:59 pm']), ('CACM-3052', ['cold start vs warm start miss ratios in a two', 'level computer storage hierarchy miss ratio measurements are often made', 'from a cold start that is made with the first', 'level store initially empty for large capacities the effect on', 'the measured miss ratio of the misses incurred while filling', 'the first level store can be significant even for long', 'reference strings use of warm start rather than cold start', 'miss ratios cast doubt on the widespread belief that the', 'observed s shape of lifetime reciprocal of miss ratio versus', 'capacity curve indicates a property of behavior of programs that', 'maintain a constant number of pages in main storage on', 'the other hand if cold start miss ratios are measured', 'as a function of capacity and measurement length then they', 'are useful in studying systems in which operation of a', 'program is periodically interrupted by task switches it is shown', 'how to obtain under simple assumptions the cache miss ratio', 'for multiprogramming from cold start miss ratio values and how', 'to obtain approximate cold start miss ratios from warm start', 'miss ratios cacm october 1978 easton m fagin r miss', 'ratio cold start warm start storage hierarchy lifetime function multiprogramming', 's shape 3.70 4.32 9.35 ca781009 dh january 29 1979', '5:16 pm']), ('CACM-2847', ['sampling from the gamma distribution on a computer this paper', 'describes a method of generating gamma variates that appears to', 'be less costly than wallace s recently suggested method for', 'large shape parameter a the cost of computation is proportional', 'to a whereas wallace s method is proportional to a', 'experimentation by robinson and lewis indicates that for small a', 'the method suggested here also dominates methods recently suggested by', 'dieter and ahrens albeit those methods dominate for large a', 'the method suggested here uses the rejection technique cacm july', '1976 fishman g s gamma variates reflection method sampling 5.5', '8.1 8.3 ca760706 jb january 4 1978 12:34 pm'])]
44->[('CACM-2523', ['a region coloring technique for scene analysis a method of', 'converting a picture into a cartoon or map whose regions', 'correspond to differently textured regions is described texture edges in', 'the picture are detected and solid regions surrounded by these', 'usually broken edges are colored in using a propagation process', 'the resulting map is cleaned by comparing the region colors', 'with the textures of the corresponding regions in the picture', 'and also by merging some regions with others according to', 'criteria based on topology and size the method has been', 'applied to the construction of cloud cover maps from cloud', 'cover pictures obtained by satellites cacm april 1973 strong iii', 'j p rosenfeld a picture processing scene analysis edge detection', '3.63 8.2 ca730405 jb january 24 1978 9:48 am']), ('CACM-2829', ['texture and reflection in computer generated images in 1974 catmull', 'developed a new algorithm for rendering images of bivariate surface', 'patches this paper describes extensions of this algorithm in the', 'areas of texture simulation and lighting models the parameterization of', 'a patch defines a coordinate system which is used as', 'a key for mapping patterns onto the surface the intensity', 'of the pattern at each picture element is computed as', 'a weighted average of regions of the pattern definition function', 'the shape and size of this weighting function are chosen', 'using digital signal processing theory the patch rendering algorithm allows', 'accurate computation of the surface normal to the patch at', 'each picture element permitting the simulation of the mirror reflections', 'the amount of light coming from a given direction is', 'modeled in a similar manner to the texture mapping and', 'then added to the intensity obtained from the texture mapping', 'several examples of images synthesized using these new techniques are', 'included cacm october 1976 blinn j f newell m e', 'computer graphics graphic display shading hidden surface removal 3.41 5.12', '5.15 8.2 ca761002 jb january 4 1978 8:36 am']), ('CACM-2325', ['numerical mathematics and computer science numerical mathematics is viewed as', 'the analysis of continuous algorithms four of the components of', 'numerical mathematics are discussed these are foundations finite precision number', 'systems computational complexity synthesis and analysis of algorithms analysis of', 'error programs and program libraries cacm july 1972 traub j', 'f numerical mathematics computer science mathematics of computation algorithms continuous', 'algorithms 1.3 5.0 5.1 5.25 ca720703 jb january 30 1978', '3:17 pm']), ('CACM-1002', ['a rapid method for digital filtering since much of the', 'computer time spent in time series analysis is used for', 'multiplications a minimum multiplication method was devised for digital filtering', 'with the expectation that it would be useful in the', 'on line real time analysis of biological data the filters', 'are constructed from a succession of readily analyzable components in', 'a manner that facilitates cascading the repertoire of frequency response', 'curves includes relatively good low pass and band pass designs', 'programs are available for implementing both the synthesis of these', 'filters and their application on computers whose assemblers allow the', 'definition of recursive macros cacm september 1964 whittlesey j r', 'b ca640909 jb march 9 1978 5:03 pm']), ('CACM-1679', ['a fast fourier transform algorithm for real valued series a', 'new procedure is presented for calculating the complex discrete fourier', 'transform of real valued time series this procedure is described', 'for an example where the number of points in the', 'series is an integral power of two this algorithm preserves', 'the order and symmetry of the cooley turkey fast fourier', 'transform algorithm while effecting the two to one reduction in', 'computation and storage which can be achieved when the series', 'is real also discussed are hardware and software implementations of', 'the algorithm which perform only n 4 log2 n 2', 'complex multiply and add operations and which require only n', 'real storage locations in analyzing each n point record cacm', 'october 1968 bergland g d fast fourier transform time series', 'analysis digital filtering spectral analysis real time spectrum analyzers fourier', 'analysis discrete fourier transform digital spectrum analysis fourier analysis algorithm', 'fourier synthesis algorithm 3.80 3.81 4.9 5.49 6.22 ca681008 jb', 'february 21 1978 3:23 pm'])]
45->[('CACM-2765', ['analysis and performance of inverted data base structures the need', 'to envision and architecture data base systems in a hierarchical', 'level by level framework is stressed the inverted data base', 'file organization is then analyzed considering implementation oriented aspects the', 'inverted directory is viewed realistically as another large data base', 'which itself is subjected to inversion formulations are derived to', 'estimate average access time read only and storage requirements formalizing', 'the interaction of data base content characteristics logical complexity of', 'queries and machine timing and blocking specifications identified as having', 'a first order effect on performance the formulations presented are', 'necessary to be used in conjunction with any index selection', 'criteria to determine the optimum set of index keys cacm', 'may 1975 cardenas a f data base architecture inverted file', 'organization data base performance and measurement secondary index organization information', 'storage and retrieval query answering 3.70 3.71 3.72 3.74 3.79', '4.0 ca750502 jb january 9 1978 3:15 pm']), ('CACM-1976', ['multi attribute retrieval with combined indexes in this paper a', 'file organization scheme designed to replace the use of the', 'popular secondary index filing scheme or inverted files on secondary', 'key fields is described through the use of redundancy and', 'storing keys or access numbers of the records that satisfy', 'different combinations of secondary index values in buckets it is', 'possible to retrieve all keys satisfying any input query derived', 'from a subset of fields by a single access to', 'an index file although each bucket may be used for', 'many combinations of values and a combination of buckets may', 'be required for a given query the method which in', 'its degenerate case becomes the conventional secondary index filing scheme', 'works similarly but has the following advantages 1 the elimination', 'of multiple accesses in many cases 2 the elimination of', 'false drops 3 the elimination of computer time to perform', 'intersection of key sets each qualified for one secondary index', 'field only and 4 the avoidance of long strings of', 'keys when an index field appearing in a query has', 'very few possible values redundancy in some cases is the', 'same as the secondary indexing method in the general case', 'trade off between the number of accesses for query and', 'redundancy exists cacm november 1970 lum v y file organization', 'secondary index files inverted files information retrieval data management access', 'method secondary keys storage with buckets rapid retrieval balanced filing', 'scheme elimination of false drops combining indexes query multi attribute', 'retrieval 3.73 3.74 3.79 ca701102 jb february 10 1978 9:00', 'am']), ('CACM-2816', ['optimal reorganization of distributed space disk files in most database', 'organizations the cost of accessing the database will increase due', 'to structural changes caused by updates and insertions by reorganizing', 'the database the access costs can be reduced a basic', 'problem is to establish the proper tradeoff between performance storage', 'costs and reorganization costs this paper considers the optimum points', 'at which to reorganize a database a disk file organization', 'which allows for distributed free space is described a cost', 'function describing the excess costs due to physical disorganization is', 'defined and this function is minimized to obtain the optimum', 'reorganization points numerical examples based on the characteristics of existing', 'disk storage devices are given cacm november 1976 maruyama k', 'smith s e disk file free space retrieval insertion deterioration', 'reorganization 3.70 3.73 ca761107 jb january 3 1978 2:59 pm']), ('CACM-2452', ['evaluation and selection of file organization a model and system', 'this work first discusses the factors that affect file data', 'base organization performance an elusive subject and then presents a', 'methodology a model and a programmed system to estimate primarily', 'total storage costs and average access time of several file', 'organizations given a specific data base query characterization and device', 'related specifications based on these estimates an appropriate file structure', 'may be selected for the specific situation the system is', 'a convenient tool to study file structures and to facilitate', 'as much as possible the process of data base structure', 'design and evaluation cacm september 1973 cardenas a f file', 'organization file structures file management file organization performance file organization', 'model file structure design secondary index organization simulation data base', 'access time storage requirement data base analysis data management 3.70', '3.71 3.72 3.74 3.79 4.0 ca730903 jb january 23 1978', '9:46 am']), ('CACM-2318', ['the role of computer system models in performance evaluation models', 'constitute a useful means of investigating computer system performance this', 'paper examines the interrelationships between models and other methods for', 'evaluating the performance of computer systems and establishes circumstances under', 'which the use of a model is appropriate cacm july,1972', 'kimbleton s r modeling evaluation performance analytic models simulation models', 'system models 2.43 2.44 6.2 8.3 ca720710 jb january 30', '1978 2:03 pm'])]
46->[('CACM-2711', ['a vector space model for automatic indexing in a document', 'retrieval or other pattern matching environment where stored entities documents', 'are compared with each other or with incoming patterns search', 'requests it appears that the best indexing property space is', 'one where each entity lies as far away from the', 'others as possible in these circumstances the value of an', 'indexing system may be expressible as a function of the', 'density of the object space in particular retrieval performance may', 'correlate inversely with space density an approach based on space', 'density computations is used to choose an optimum indexing vocabulary', 'for a collection of documents typical evaluation results are shown', 'demonstrating the usefulness of the model cacm november 1975 salton', 'g wong a yang c s automatic information retrieval automatic', 'indexing content analysis document space 3.71 3.73 3.74 3.75 ca751101', 'jb january 6 1978 10:14 am']), ('CACM-2990', ['effective information retrieval using term accuracy the performance of information', 'retrieval systems can be evaluated in a number of different', 'ways much of the published evaluation work is based on', 'measuring the retrieval performance of an average user query unfortunately', 'formal proofs are difficult to construct for the average case', 'in the present study retrieval evaluation is based on optimizing', 'the performance of a specific user query the concept of', 'query term accuracy is in troduced as the probability of', 'occurrence of a query term in the documents relevant to', 'that query by relating term accuracy to the frequency of', 'occurrence of the term in the documents of a collection', 'it is possible to give formal proofs of the effectiveness', 'with respect to a given user query of a number', 'of automatic indexing systems that have been used successfully in', 'experimental situations among these are inverse document frequency weighting thesaurus', 'construction and phrase generation cacm march 1977 yu c t', 'salton g information retrieval automatic indexing content analysis term accuracy', 'frequency weighting thesaurus and phrase transformations 3.71 3.72 3.75 ca770302', 'jb december 30 1977 1:52 am']), ('CACM-1032', ['theoretical considerations in information retrieval systems information storage and retrieval', 'systems are composed of three major components a identification of', 'information and tagging it for effective retrieval b searching strategy', 'how to enter the file to circumvent the scanning of', 'nonrelevant material and c file organization to make access to', 'information efficient for identification of information the paper suggests that', 'a metalanguage recently discussed in a paper by goffman verhoeff', 'and belzer associated with an object language be used for', 'searching strategy a linear model for an evaluation function of', 'relevancy is developed which rewards the system for retrieving relevant', 'documents and not retrieving the nonrelevant and penalizes the system', 'for the escaped relevant documents and false drops the inadequacies', 'of a linear model are indicated two approaches to file', 'organization are discussed one is self organization of the file', 'based on its history and past performance and the second', 'is a self generating subset of the file with a', 'high probability of being relevant cacm july 1964 belzer j', 'goffman w ca640715 jb march 9 1978 7:55 pm']), ('CACM-1457', ['data manipulation and programming problems in automatic information retrieval automatic', 'information retrieval programs require the manipulation of a variety of', 'different data structures including linear text sparse matrices and tree', 'or list structures the main data manipulations to be performed', 'in automatic information systems are first briefly reviewed a variety', 'of data representations which have been used to describe structured', 'information are then examined and the characteristics of various processing', 'languages are outlined in the light of the procedures requiring', 'implementation advantages of these programming languages for the retrieval application', 'are examined and suggestions are made for the design of', 'programming facilities to aid in information retrieval cacm march 1966', 'salton g ca660315 jb march 3 1978 11:35 am']), ('CACM-0329', ['automatic abstracting and indexing survey and recommendations in preparation for', 'the widespread use of automatic scanners which will read documents', 'and transmit their contents to other machines for analysis this', 'report presents a new concept in automatic analysis the relative', 'frequency approach to measuring the significance of words word groups', 'and sentences the relative frequency approach is discussed in detail', 'as is its application to problems of automatic indexing and', 'automatic abstracting included in the report is a summary of', 'automatic analysis studies published as of the date of writing', 'conclusions are that point toward more sophisticated mathematical and linguistic', 'techniques for the solution of problems of automatic analysis cacm', 'may 1961 edmundson h p wyllys r e ca610505 jb', 'march 16 1978 11:08 pm'])]
47->[('CACM-1699', ['experimental evaluation of information retrieval through a teletypewriter experiments designed', 'to evaluate the capabilities of mechanized information retrieval systems with', 'emphasis on interactive man machine language and on some of', 'the mechanical and psychological limitations in their design were conducted', 'at the moore school information systems laboratory the basic assumption', 'of the research is that an information retrieval system that', 'provides for man machine dialogue at a remote inquiry terminal', 'should provide a searcher with many of the tools which', 'would be available to him were he actually performing his', 'search at a library or repository of documents factors involved', 'in evaluation of such a system include ease of use', 'learning time and effectiveness of actual retrieval three experiments and', 'the conclusions resulting from them are detailed cacm september 1968', 'rubinoff m bergman s franks w rubinoff e information retrieval', 'testing information system evaluation experimental document retrieval document retrieval document', 'perusal man machine communication remote console communication teletypewriter communication remote', 'terminal communication retrieval command language symbolic command language interactive systems', 'user learning factors on line searching 3.72 3.74 3.79 3.81', 'ca680902 jb february 22 1978 9:30 am']), ('CACM-1032', ['theoretical considerations in information retrieval systems information storage and retrieval', 'systems are composed of three major components a identification of', 'information and tagging it for effective retrieval b searching strategy', 'how to enter the file to circumvent the scanning of', 'nonrelevant material and c file organization to make access to', 'information efficient for identification of information the paper suggests that', 'a metalanguage recently discussed in a paper by goffman verhoeff', 'and belzer associated with an object language be used for', 'searching strategy a linear model for an evaluation function of', 'relevancy is developed which rewards the system for retrieving relevant', 'documents and not retrieving the nonrelevant and penalizes the system', 'for the escaped relevant documents and false drops the inadequacies', 'of a linear model are indicated two approaches to file', 'organization are discussed one is self organization of the file', 'based on its history and past performance and the second', 'is a self generating subset of the file with a', 'high probability of being relevant cacm july 1964 belzer j', 'goffman w ca640715 jb march 9 1978 7:55 pm']), ('CACM-2990', ['effective information retrieval using term accuracy the performance of information', 'retrieval systems can be evaluated in a number of different', 'ways much of the published evaluation work is based on', 'measuring the retrieval performance of an average user query unfortunately', 'formal proofs are difficult to construct for the average case', 'in the present study retrieval evaluation is based on optimizing', 'the performance of a specific user query the concept of', 'query term accuracy is in troduced as the probability of', 'occurrence of a query term in the documents relevant to', 'that query by relating term accuracy to the frequency of', 'occurrence of the term in the documents of a collection', 'it is possible to give formal proofs of the effectiveness', 'with respect to a given user query of a number', 'of automatic indexing systems that have been used successfully in', 'experimental situations among these are inverse document frequency weighting thesaurus', 'construction and phrase generation cacm march 1977 yu c t', 'salton g information retrieval automatic indexing content analysis term accuracy', 'frequency weighting thesaurus and phrase transformations 3.71 3.72 3.75 ca770302', 'jb december 30 1977 1:52 am']), ('CACM-2288', ['file organization the consecutive retrieval property the consecutive retrieval property', 'is an important relation between a query set and record', 'set its existence enables the design of an information retrieval', 'system with a minimal search time and no redundant storage', 'some important theorems on the consecutive retrieval property are proved', 'in this paper conditions under which the consecutive retrieval property', 'exists and remain invariant have been established an outline for', 'designing an information retrieval system based on the consecutive retrieval', 'property is also discussed cacm september 1972 ghosh s p', 'file organization consecutive storage consecutive retrieval information retrieval record organization', 'query structure record structure storage on tapes storage space minimum', 'access time 3.70 3.73 3.74 ca720902 jb january 27,1978 4:52', 'pm']), ('CACM-2307', ['dynamic document processing the current role of computers in automatic', 'document processing is briefly outlined and some reasons are given', 'why the early promise of library automation and of the', 'mechanization of documentation processes has not been fulfilled a new', 'dynamic document environment is then outlined in which clustered files', 'are searched and information is retrieved following an interactive user', 'controlled search process methods are described for an automatic query', 'modification based on user needs and for a continuous reorganization', 'of the stored information as a function of earlier file', 'processing and of normal collection growth the proposed procedures provide', 'powerful tools for information retrieval and for the control of', 'dynamic library collections in which new items are continually added', 'and old ones are retired cacm july 1972 salton g', 'automatic indexing automatic search and retrieval iterative searching mechanized library', 'processing collection growth collection retirement feedback search 3.62 3.71 3.73', '3.74 ca720721 jb january 30 1978 10:59 am'])]
48->[('CACM-2325', ['numerical mathematics and computer science numerical mathematics is viewed as', 'the analysis of continuous algorithms four of the components of', 'numerical mathematics are discussed these are foundations finite precision number', 'systems computational complexity synthesis and analysis of algorithms analysis of', 'error programs and program libraries cacm july 1972 traub j', 'f numerical mathematics computer science mathematics of computation algorithms continuous', 'algorithms 1.3 5.0 5.1 5.25 ca720703 jb january 30 1978', '3:17 pm']), ('CACM-2324', ['management science a view from nonlinear programming a brief history', 'of integer and continuous nonlinear programming is presented as well', 'as the current obstacles to practical use of these mathematical', 'programming techniques it is forecast that the useful contributions to', 'nonlinear programming actually made in the next few years are', 'more likely to be consolidations than theoretical breakthroughs these contributions', 'are likely to be the documentation of standard test problems', 'construction of user oriented software and comparisons of currently known', 'algorithms to demonstrate which techniques are best for specific problems', 'cacm july 1972 shanno d f weil r l integer', 'programming linear programming mathematical programming nonlinear programming quadratic programming management', 'science operations research algorithms 5.41 8.3 ca720704 jb january 30', '1978 3:14 pm']), ('CACM-2766', ['copying cyclic list structures in linear time using bounded workspace', 'a bounded workspace copying algorithm for arbitrary list structures is', 'given this algorithm operates in linear time and does not', 'require tag bits the best previous bounded workspace copying algorithms', 'achieved n 2 time without tag bits and n log', 'n time with one tag the only restriction on the', 'algorithm given here is that the copy must be placed', 'into a contiguous section of memory the method is applicable', 'to fixed or variable size nodes cacm may 1975 fisher', 'd a list processing copying linear time space complexity 4.49', '5.25 ca750501 jb january 9 1978 3:22 pm']), ('CACM-1433', ['a note on linear programming algorithm design a combinatorial problem', 'as linear programming models grow bigger and bigger in size', 'much actual data that must be memorized is often put', 'on magnetic tape or disk and consequently there is an', 'improportionality fast rise in the consumption of computer timeo cut', 'down this expense an ever increasing effort is made to', 'design more efficient algorithms this paper is meant to support', 'the effort it is attempted to find some characteristics of', 'the way a pivot column is found the number of', 'repetitions of a certain transfer of data from tape to', 'core memory is considered after some simplification the problem is', 'restated in a general way the generating function of the', 'probability distribution and the moment generating function of the number', 'of repetitions is found asymptotic formulas are given for the', 'moments using a result from a paper of s narumi', '1 the results may be applied to write very efficient', 'routines that search for an extreme value in a table', 'formulas provide a means of calculating the computer timings in', 'this case cacm may 1966 roes p b m ca660504', 'jb march 3 1978 10:10 am']), ('CACM-3124', ['recursive data structures in apl a mathematical study of three', 'approaches for defining nested arrays in apl is presented theorems', 'exhibiting the relationships between the definitional systems are given and', 'illustrated through graph representations one of the approaches is used', 'to define an apl array to be a recursive data', 'structure equivalent to a tree structure in which all data', 'is stored at the leaves as homogeneous arrays of numbers', 'and characters an extension of apl is proposed that includes', 'new primitive functions to manipulate the nesting level of arrays', 'and new operators to assist in the construction of data', 'driven algorithms cacm february 1979 gull w jenkins m nested', 'arrays apl arrays recursive data structures trees data driven algorithms', 'theory of arrays 4.22 5.29 ca790203 dh april 10 1979', '3:41 pm'])]
49->[('CACM-3134', ['the use of normal multiplication tables for information storage and', 'retrieval this paper describes a method for the organization and', 'retrieval of attribute based information systems using the normal multiplication', 'table as a directory for the information system algorithms for', 'the organization an d retrieval of information are described this', 'method is particularly suitable for queries requesting a group of', 'information items all of which possess a particular set of', 'attributes and possibly some other attributes as well several examples', 'are given the results with respect to the number of', 'disk accesses and disk space are compared to other common', 'approaches algorithms evaluating the appropriateness of the above approach to', 'a given information system are described for a certain class', 'of information systems the normal multiplication table method yields far', 'more rapid retrieval with a more economical space requirement than', 'conventional systems moreover this method incorporates an improved modification of', 'the inverted file technique cacm march 1979 motzkin d information', 'retrieval inverted files multiattribute retrieval multilist file normal multiplication table', 'queries rapid retrieval space economy 3.70 3.73 3.79 ca790305 dh', 'may 21 1979 9:46 am']), ('CACM-3012', ['the use of an interactive information storage and retrieval system', 'in medical research this paper presents the results of a', 'study of the use of an interactive computerized storage and', 'retrieval system a monitor built into the computer system provided', 'usage data for the study additional data on user reactions', 'were gathe red from a questionnaire the results show the', 'important role played by frequently chosen laboratory reference leaders in', 'influencing the use of this system the implications of the', 'study for the design of similar systems are discussed cacm', 'march 1978 lucas hr implementation system use information storage and', 'retrieval system 2.10 3.50 3.72 ca780301 jb march 28 1978', '1:51 pm']), ('CACM-2390', ['a proposal for a computer based interactive scientific community because', 'of the problems created by the explosion of papers in', 'the mathematical sciences and the drawbacks that this places on', 'research it is suggested that a tree of all mathematical', 'results and terminology be maintained in a multiterminal computer system', 'users of the system can store in the computer an', 'updated file of their current knowledge and on selecting a', 'paper to read they can obtain from the computer the', 'minimum subtree of theorems required to bring them from what', 'they already know to the background knowledge which the paper', 'assumes under certain conditions means are also provided for the', 'contribution of useful comments by the readers of a work', 'and for interaction between commentators and with the author this', 'paper describes how the system can be organized and the', 'role required of readers writers and commentators cacm february 1972', 'pager d interactive system organization of scientific community readers writers', 'commentators computer utility information retrieval trees data structures 1.0 1.1', '1.59 2.10 3.15 3.32 3.50 3.51 3.70 3.71 3.74 3.9', 'ca720201 jb february 1 1978 8:51 am']), ('CACM-1514', ['on the expected gain from adjust ing matched term retrieval', 'systems a file adjustment procedure based on maximizing the bayes', 'expected gain proposed for matched term retrieval systems the expected', 'gain and its probability distribution are derived as a function', 'of 1 the prior proportion of omitted terms and 2', 'the coefficient of separation between two distributions corresponding to values', 'of an adjustment statistic an example evaluates the gain parameters', 'for a typical information retrieval system cacm november 1967 shumway', 'r h ca671106 jb february 26 1978 2:59 pm']), ('CACM-2990', ['effective information retrieval using term accuracy the performance of information', 'retrieval systems can be evaluated in a number of different', 'ways much of the published evaluation work is based on', 'measuring the retrieval performance of an average user query unfortunately', 'formal proofs are difficult to construct for the average case', 'in the present study retrieval evaluation is based on optimizing', 'the performance of a specific user query the concept of', 'query term accuracy is in troduced as the probability of', 'occurrence of a query term in the documents relevant to', 'that query by relating term accuracy to the frequency of', 'occurrence of the term in the documents of a collection', 'it is possible to give formal proofs of the effectiveness', 'with respect to a given user query of a number', 'of automatic indexing systems that have been used successfully in', 'experimental situations among these are inverse document frequency weighting thesaurus', 'construction and phrase generation cacm march 1977 yu c t', 'salton g information retrieval automatic indexing content analysis term accuracy', 'frequency weighting thesaurus and phrase transformations 3.71 3.72 3.75 ca770302', 'jb december 30 1977 1:52 am'])]
50->[('CACM-1811', ['a case study in programming for parallel processors an affirmative', 'partial answer is provided to the question of whether it', 'is possible to program parallel processor computing systems to efficiently', 'decrease execution time for useful problems parallel processor systems are', 'multiprocessor systems in which several of the processors can simultaneously', 'execute separate tasks of a single job thus cooperating to', 'decrease the solution time of a computational problem the processors', 'have independent instruction counters meaning that each processor executes its', 'own task program relatively independently of the other processors communication', 'between cooperating processors is by means of data in storage', 'shared by all processors a program for the determination of', 'the distribution of current in an electrical network was written', 'for a parallel processor computing system and execution of this', 'program was simulated the data gathered from simulation runs demonstrate', 'the efficient solution of this problem typical of a large', 'class of important problems it is shown that with proper', 'programming solution time when n processors are applied approaches 1', 'n times the solution time for a single processor while', 'improper programming can actually lead to an increase of solution', 'time with the number of processors stability of the method', 'of solution was also investigated cacm december 1969 rosenfeld j', 'l parallel processor parallelism parallel programming multiprocessor multiprogramming tasking storage', 'interference electrical network simulation relaxation jacobi gauss seidel convergence 3.24', '4.9 5.14 5.17 6.21 ca691201 jb february 15 1978 4:45', 'pm']), ('CACM-2714', ['merging with parallel processors consider two linearly ordered sets a', 'b a m b n m n and p p', 'm parallel processors working synchronously the paper presents an algorithm', 'for merging a and b with the p parallel processors', 'which requires at most 2 log2 2m 1 3m p', 'm p log2 n m steps if n 2 b', 'm b an integer the algorithm requires at most 2', 'log2 m 1 m p 2 b steps in the', 'case where m and n are of the same order', 'of magnitude i e n km with k being a', 'constant the algorithm requires 2 log2 m 1 m p', '3 k steps these performances compare very favorably with the', 'previous best parallel merging algorithm batcher s algorithm which requires', 'n p m n 2p log2 m steps in the', 'general case and km p k 1 2 m p', 'log2 m in the special case where n km cacm', 'october 1975 gavril f parallel processing parallel merging parallel binary', 'insertion 5.31 ca751005 jb january 6 1978 10:50 am']), ('CACM-3075', ['fast parallel sorting algorithms a parallel bucket sort algorithm is', 'presented that requires time o log n and the use', 'of n processors the algorithm makes use of a technique', 'that requires more space than the product of processors and', 'time a realistic model is used model is used in', 'which no memory contention is permitted a procedure is also', 'presented to sort n numbers in time o k log', 'n using n 1 1 k processors for k an', 'arbitrary integer the model of computation for this procedure permits', 'simultaneous fetches from the same memory location cacm august 1978', 'hirschberg d parallel processing sorting algorithms bucket sort 3.74 4.34', '5.25 5.31 ca780803 dh february 7 1979 10:25 am']), ('CACM-3156', ['computing connected components on parallel computers we present a parallel', 'algorithm which uses n2 processors to find the connected components', 'of an undirected graph with n vertices in time o', 'log2n an o log2n time bound also can be achieved', 'using only n n log2n processors the algorithm can be', 'used to find the transitive closure of a symmetric boolean', 'matrix we assume that the processors have access to a', 'common memory simultaneous access to the same location is permitted', 'for fetch instructions but not for store instructions cacm august', '1979 hirschberg d chandra a sarwate d graph theory parallel', 'processing algorithms transitive closure connected component 5.25 5.32 6.22 ca790802', 'db january 4 1980 12:18 pm']), ('CACM-3134', ['the use of normal multiplication tables for information storage and', 'retrieval this paper describes a method for the organization and', 'retrieval of attribute based information systems using the normal multiplication', 'table as a directory for the information system algorithms for', 'the organization an d retrieval of information are described this', 'method is particularly suitable for queries requesting a group of', 'information items all of which possess a particular set of', 'attributes and possibly some other attributes as well several examples', 'are given the results with respect to the number of', 'disk accesses and disk space are compared to other common', 'approaches algorithms evaluating the appropriateness of the above approach to', 'a given information system are described for a certain class', 'of information systems the normal multiplication table method yields far', 'more rapid retrieval with a more economical space requirement than', 'conventional systems moreover this method incorporates an improved modification of', 'the inverted file technique cacm march 1979 motzkin d information', 'retrieval inverted files multiattribute retrieval multilist file normal multiplication table', 'queries rapid retrieval space economy 3.70 3.73 3.79 ca790305 dh', 'may 21 1979 9:46 am'])]
51->[('CACM-3075', ['fast parallel sorting algorithms a parallel bucket sort algorithm is', 'presented that requires time o log n and the use', 'of n processors the algorithm makes use of a technique', 'that requires more space than the product of processors and', 'time a realistic model is used model is used in', 'which no memory contention is permitted a procedure is also', 'presented to sort n numbers in time o k log', 'n using n 1 1 k processors for k an', 'arbitrary integer the model of computation for this procedure permits', 'simultaneous fetches from the same memory location cacm august 1978', 'hirschberg d parallel processing sorting algorithms bucket sort 3.74 4.34', '5.25 5.31 ca780803 dh february 7 1979 10:25 am']), ('CACM-3156', ['computing connected components on parallel computers we present a parallel', 'algorithm which uses n2 processors to find the connected components', 'of an undirected graph with n vertices in time o', 'log2n an o log2n time bound also can be achieved', 'using only n n log2n processors the algorithm can be', 'used to find the transitive closure of a symmetric boolean', 'matrix we assume that the processors have access to a', 'common memory simultaneous access to the same location is permitted', 'for fetch instructions but not for store instructions cacm august', '1979 hirschberg d chandra a sarwate d graph theory parallel', 'processing algorithms transitive closure connected component 5.25 5.32 6.22 ca790802', 'db january 4 1980 12:18 pm']), ('CACM-1811', ['a case study in programming for parallel processors an affirmative', 'partial answer is provided to the question of whether it', 'is possible to program parallel processor computing systems to efficiently', 'decrease execution time for useful problems parallel processor systems are', 'multiprocessor systems in which several of the processors can simultaneously', 'execute separate tasks of a single job thus cooperating to', 'decrease the solution time of a computational problem the processors', 'have independent instruction counters meaning that each processor executes its', 'own task program relatively independently of the other processors communication', 'between cooperating processors is by means of data in storage', 'shared by all processors a program for the determination of', 'the distribution of current in an electrical network was written', 'for a parallel processor computing system and execution of this', 'program was simulated the data gathered from simulation runs demonstrate', 'the efficient solution of this problem typical of a large', 'class of important problems it is shown that with proper', 'programming solution time when n processors are applied approaches 1', 'n times the solution time for a single processor while', 'improper programming can actually lead to an increase of solution', 'time with the number of processors stability of the method', 'of solution was also investigated cacm december 1969 rosenfeld j', 'l parallel processor parallelism parallel programming multiprocessor multiprogramming tasking storage', 'interference electrical network simulation relaxation jacobi gauss seidel convergence 3.24', '4.9 5.14 5.17 6.21 ca691201 jb february 15 1978 4:45', 'pm']), ('CACM-2714', ['merging with parallel processors consider two linearly ordered sets a', 'b a m b n m n and p p', 'm parallel processors working synchronously the paper presents an algorithm', 'for merging a and b with the p parallel processors', 'which requires at most 2 log2 2m 1 3m p', 'm p log2 n m steps if n 2 b', 'm b an integer the algorithm requires at most 2', 'log2 m 1 m p 2 b steps in the', 'case where m and n are of the same order', 'of magnitude i e n km with k being a', 'constant the algorithm requires 2 log2 m 1 m p', '3 k steps these performances compare very favorably with the', 'previous best parallel merging algorithm batcher s algorithm which requires', 'n p m n 2p log2 m steps in the', 'general case and km p k 1 2 m p', 'log2 m in the special case where n km cacm', 'october 1975 gavril f parallel processing parallel merging parallel binary', 'insertion 5.31 ca751005 jb january 6 1978 10:50 am']), ('CACM-3006', ['anomalies with variable partition paging algorithms five types of anomalous', 'behavior which may occur in paged virtual memory operating systems', 'a redefined one type of anomaly for example concerns the', 'fact that with certain reference strings and paging algorithms an', 'increase in mean memory allocation may result in an increase', 'in fault rate two paging algorithms are examined in terms', 'of their anomaly potential and reference string examples of various', 'anomalies are presented two paging algorithm properties the inclusion property', 'and the generalized inclusion property are discussed and the anomaly', 'implications of these properties presented cacm march 1978 franklin m', 'graham g gupta r anomaly memory management program behavior stack', 'algorithms virtual memory working set page fault frequency paging algorithms', '4.32 4.35 4.6 8.1 ca780307 jb march 28,1978 1:01 pm'])]
52->[('CACM-2721', ['the digital simulation of river plankton population dynamics this paper', 'deals with the development of a mathematical model for and', 'the digital simulation in fortran iv of phytoplankton and zooplankton', 'population densities in a river using previously developed rate expressions', 'in order to study the relationships between the ecological mechanisms', 'involved the simulation parameters were varied illustrating the response of', 'the ecosystem to different conditions including those corresponding to certain', 'types of chemical and thermal pollution as an investigation of', 'the accuracy of the simulation methods a simulation of the', 'actual population dynamics of asterionella in the columbia river was', 'made based on approximations of conditions in that river although', 'not totally accurate the simulation was found to predict the', 'general annual pattern of plankton growth fairly well and specifically', 'revealed the importance of the annual velocity cycle in determining', 'such patterns in addition the study demonstrates the usefulness of', 'digital simulations in the examinations of certain aquatic ecosystems as', 'well as in environmental planning involving such examinations cacm september', '1975 claudson r m digital simulation mathematical modeling plankton population', 'dynamics phytoplankton zooplankton river ecosystems ecological mechanisms environmental simulation modeling', 'ecosystems pollution environmental impact environmental planning 3.12 3.19 ca750903 jb', 'january 6 1978 2:55 pm']), ('CACM-2749', ['significant event simulation this paper compares a new method of', 'simulation organization called the significant event method with an old', 'one called the clock pulse method using as examples two', 'automobile traffic models the significant event method is found to', 'be more efficient than the clock pulse method at low', 'levels of system interaction and less efficient at high levels', 'a simple mathematical model for the trade off in the', 'relative running time of the two methods is developed the', 'model aids in choosing between the two simulation methods for', 'a particular experiment it is concluded that the significant event', 'method can be of value in the simulation of some', 'systems when computational efficiency is of sufficient importance cacm june', '1975 babich a f grason j parnas d l simulation', 'organization event simulation clock pulse simulation significant event simulation 8.1', 'ca750604 jb january 9 1978 1:20 pm']), ('CACM-3070', ['hybrid simulation models of computer systems this paper describes the', 'structure and operation of a hybrid simulation model in which', 'both discrete event simulation and analytic techniques are combined to', 'produce efficient yet accurate system models in an example based', 'on a simple hypothetical computer system discrete event simulation is', 'used to model the arrival and activation of jobs and', 'a central server queueing network models the use of system', 'processors the accuracy and efficiency of the hybrid technique are', 'demonstrated by comparing the result and computational costs of the', 'hybrid model of the example with those of an equivalent', 'simulation only model cacm september 1978 schwetman h performance evaluation', 'simulation queueing network models central server model 4.32 4.35 8.1', 'ca780902 dh february 5 1979 3:32 pm']), ('CACM-1366', ['computer simulation discussion of the technique and comparison of languages', 'the purpose of this paper is to present a comparison', 'of some computer simulation languages and of some of the', 'involved in comparing software packages for digital computers are discussed', 'in part i the issue is obvious users of digital', 'computers must choose from available languages or write their own', 'substantial costs can occur particularly in training implementation and computer', 'time if an inappropriate language is chosenore and more computer', 'simulation languages are being developed comparisons and evaluations of existing', 'languages are useful for designers and implementers as well as', 'users the second part is devoted to computer simulation and', 'simulation languages the computational characteristics of simulation are discussed with', 'special attention being paid to a distinction between continuous and', 'discrete change models part iii presents a detailed comparison of', 'six simulation languages and packages simscript clp csl gasp cpss', 'and sol the characteristics of each are summarized in a', 'series of tables the implications of this analysis for designers', 'of languages for users and for implementers are developed the', 'conclusion of the paper is that the packages now available', 'for computer simulation offer features which none of the more', 'general purpose packages do and that analysis of strengths and', 'weaknesses of each suggests ways in which both current and', 'future simulation languages and packages can be improved cacm october', '1966 teichroew d lubin j f ca661001 jb march 2', '1978 4:23 pm']), ('CACM-1928', ['exclusive simulation of activity in digital networks a technique for', 'simulating the detailed logic networks of large and active digital', 'systems is described essential objectives sought are improved ease and', 'economy in model generation economy in execution time and space', 'and a facility for handling simultaneous activities the main results', 'obtained are a clear and useful separation of structural and', 'behavioral model description a reduction of manual tasks in converting', 'boolean logic into a structural model the elimination of manual', 'processes in achieving exclusive simulation of activity an event scheduling', 'technique which does not deteriorate in economy as the event', 'queue grows in length and a simulation procedure which deals', 'effectively with any mixture of serial and simultaneous activities the', 'passage of time is simulated in a precise quantitative fashion', 'and systems to be simulated may be combinations of synchronous', 'and asynchronous logic certain aspects of the techniques described may', 'be used for the simulation of network structures other than', 'digital networks cacm february 1969 ulrich e g simulation logical', 'simulation digital simulation large systems simulation network structures scheduling queuing', 'simultaneous activities parallel events 4.22 4.29 6.9 ca690210 jb february', '20 1978 9:58 am'])]
53->[('CACM-0569', ['binomial coefficients algorithm 19 cacm june 1962 steck b ca620616', 'jb march 17 1978 9:22 pm']), ('CACM-0514', ['binomial coefficients algorithm 19 cacm august 1962 george r ca620814', 'jb march 17 1978 9:40 pm']), ('CACM-0139', ['binomial coefficients algorithm 19 cacm october 1960 kenyon r r', 'ca601009 jb march 20 1978 8:14 pm']), ('CACM-2210', ['toward automatic program synthesis an elementary outline of the theorem', 'proving approach to automatic program synthesis is given without dwelling', 'on technical details the method is illustrated by the automatic', 'construction of both recursive and iterative programs operating on natural', 'numbers lists and trees in order to construct a program', 'satisfying certain specifications a theorem induced by those specifications is', 'proved and the desired program is extracted from the proof', 'the same technique is applied to transform recursively defined functions', 'into iterative programs frequently with a major gain inefficiency it', 'is emphasized that in order to construct a program with', 'loops or with recursion the principle of mathematical induction must', 'be applied the relation between the version of the induction', 'rule used and the form of the program constructed is', 'explored in some detail cacm march 1971 manna z waldinger', 'r j artificial intelligence answer extraction automatic program synthesis mathematical', 'induction principle problem solving theorem proving 3.64 5.23 5.24 ca710302', 'jb february 3 1978 4:48 pm']), ('CACM-2986', ['operations on sparse relations various computations on relations boolean matrices', 'or directed graphs such as the computation of precedence relations', 'for a context free grammar can be done by a', 'practical algorithm that is asymptotically faster than those in common', 'use for example how to compute operator precedence or wirth', 'weber precedence relations in o n 2 steps is shown', 'as well as how to compute linear precedence functions in', 'o n 2 steps is shown as well as how', 'to compute linear precedence functions in o n steps where', 'n is the size of a grammer the heart of', 'the algorithms is a general theorem giving sufficient conditions under', 'which an expression whose operands are sparse relations and whose', 'operators are composition transitive closure union and inverse can be', 'computed efficiently cacm march 1977 hunt h b iii szymanski', 't g ullman j d computational complexity sparse relation boolean', 'matrix directed graph wirth weber precedence relation linear precedence function', 'slr grammar t canonical precedence relation 4.12 5.23 5.25 ca770306', 'jb december 29 1977 8:05 am'])]
54->[('CACM-2940', ['abstraction and verification in alphard defining and specifying iteration and', 'generators the alphard form provides the programmer with a great', 'deal of control over the implementation of abstract data types', 'in this paper the abstraction techniques are extended from simple', 'data representation and function definition to the iteration statement the', 'most important poin t of interaction between data and the', 'control structure of the language itself a means of specializing', 'alphard s loops to operate on abstract entities without explicit', 'dependence on the representation of those entities is in troduced', 'specification and verification techniques that allow the properties of the', 'generators for such iterations to be expressed in the form', 'of proof rules are developed results are obtained that for', 'common special cases of these loops are essentially identical to', 'the corresponding constructs in other languages a means of showing', 'that a generator will terminate is also provided cacm august', '1977 shaw m wulf w a abstraction and representation abstract', 'data types assertions control specialization correctness generators invariants iteration statements', 'modular decomposition program specifications programming languages programming methodology proofs of', 'correctness types verification 4.20 5.24 ca770803 jb december 28 1977', '7:59 am']), ('CACM-2958', ['abstract data types and the development of data structures abstract', 'data types can play a significant role in the development', 'of software that is reliable efficient and flexible this paper', 'presents and discusses the application of an algebraic technique for', 'the specification of abstract data types among the examples presented', 'is a top down development of a symbol table for', 'a block structured language a discussion of the proof of', 'its correctness is given the paper also contains a brief', 'discussion of the problems involved in constructing algebraic specifications that', 'are both consistent and complete cacm june 1977 guttag j', 'abstract data type correctness proof data type data structure specification', 'software specification 4.34 5.24 ca770605 jb december 29 1977 1:17', 'am']), ('CACM-2732', ['guarded commands nondeterminacy and formal derivation of programs so called', 'guarded commands are introduced as a building block for alternative', 'and repetitive constructs that allow nondeterministic program components for which', 'at least the activity evoked but possible even the final', 'state is not necessarily uniquely determined by the initial state', 'for the formal derivation of programs expressed in terms of', 'these constructs a calculus will be shown cacm august 1975', 'dijkstra e w programming languages sequencing primitives program semantics programming', 'language semantics nondeterminacy case construction repetition termination correctness proof derivation', 'of programs programming methodology 4.20 4.22 ca750803 jb january 6', '1978 4:46 pm']), ('CACM-2326', ['fix point approach to the theory of computation following the', 'fix point theory of scott the semantics of computer programs', 'are defined in terms of the least fix points of', 'recursive programs this allows not only the justification of all', 'existing verification techniques but also their extension to the handling', 'in a uniform manner of various properties of computer programs', 'including correctness termination and equivalence cacm july 1972 manna z', 'vuillemin j verification techniques semantics of programming languages least fix', 'points recursive programs computational induction 5.23 5.24 ca720702 jb january', '30 1978 3:42 pm']), ('CACM-2470', ['fen an axiomatic basis for program semantics a formal system', 'is presented which abstracts the notions of data item function', 'and relation it is argued that the system is more', 'suitable than set theory or its derivatives for the concise', 'and accurate description of program semantics it is shown how', 'the system can be used to build composite data types', 'out of simper ones with the operations of rowing structuring', 'and uniting it is also demonstrated that completely new primitive', 'types can be introduced into languages through the mechanism of', 'singleton data types both deterministic and nondeterministic functions are shown', 'to be definable in the system it is described how', 'the local environment can be modeled as a data item', 'and how imperative statements can be considered functions on the', 'environment the nature of recursive functions is briefly discussed and', 'a technique is presented by which they can be introduced', 'into the system the technique is contrasted with the use', 'of the paradoxical combinator y the questions of local and', 'global environments and of various modes of function calling and', 'parameter passing are touched upon the theory is applied to', 'the proof of several elementary theorems concerning the semantics of', 'the assignment conditional and iterative statements an appendix is included', 'which presents in detail the formal system governing webs and', 'fen the abstractions used informally in the body of the', 'paper cacm august 1973 maclennan b j semantics formal systems', 'lambda calculus extensible languages data types modes axioms correctness formal', 'language definition formal description data structures description languages models of', 'computation 4.22 5.21 5.24 5.26 ca730804 jb january 23 1978', '11:01 am'])]
55->[('CACM-2650', ['order n correction for regular languages a method is presented', 'for calculating a string b belonging to a given regular', 'language l which is nearest in number of edit operations', 'to a given input string a b is viewed as', 'a reasonable correction for the possibly erroneous string a where', 'a was originally intended to be a string of l', 'the calculation of b by the method presented requires time', 'proportional to a the number of characters in a the', 'method should find applications in information retrieval artificial intelligence and', 'spelling correction systems cacm may 1974 wagner r a error', 'correction regular languages regular events finite state automata compiler error', 'recovery spelling correction string best match problem correction corrector errors', 'nondeterministic finite state automata 4.12 4.20 5.22 5.23 5.42 ca740503', 'jb january 17 1978 4:26 pm']), ('CACM-2921', ['regular right part grammars and their parsers this paper in', 'troduces an alternative to context free grammars called regular right', 'part rrp grammars which resemble pascal syntax diagrams formally rrp', 'grammars have production right parts which are nondeterministic finite state', 'machines fsms and as a special case regular expressions since', 'these can be converted to fsms rrp grammars describe the', 'syntax of programming languages more concisely and more understandably than', 'is possible with cf grammars also in troduced is a', 'class of parsers rrp lr m k parsers which includes', 'the cf lr k parsers and provides the same advantages', 'informally an rrp lr m k parser can determine the', 'right end of each handle by considering at most k', 'symbols to the right of the handle and the left', 'end after the right end has been found by considering', 'at most m symbols to the left of the handle', 'a mechanism for determining the left end is required because', 'there is no bound on the length of the handle', 'cacm october 1977 lalonde w r finite state machines automata', 'regular expressions syntax diagrams lr k grammars parser construction parsing', 'programming languages language generation formal definition compilers translators scanners 4.2', '5.21 5.23 ca771005 jb december 27 1977 11:01 am']), ('CACM-1739', ['regular expression search algorithm a method for locating specific character', 'strings embedded in character text is described and an implementation', 'of this method in the form of a compiler is', 'discussed the compiler accepts a regular expression as source language', 'and produces an ibm 7094 program as object language the', 'object program then accepts the text to be searched as', 'input and produces a signal every time an embedded string', 'in the text matches the given regular expression examples problems', 'and solution are also presented cacm june 1968 thompson k', 'search match regular expression 3.74 4.49 5.32 ca680606 jb february', '22 1978 4:18 pm']), ('CACM-1896', ['regular coulomb wave functions algorithm 292 s22 cacm may 1969', 'gautschi w coulomb wave functions wave functions regular coulomb wave', 'functions 5.12 ca690513 jb february 17 1978 3:15 pm']), ('CACM-1898', ['regular coulomb wave functions algorithm 292 s22 cacm may 1969', 'kolbig k s coulomb wave functions wave functions regular coulomb', 'wave functions 5.12 ca690511 jb february 17 1978 3:19 pm'])]
56->[('CACM-2327', ['toward an automata theory of brains a source of ideas', 'for automata theory the study of the brain has been', 'pushed aside in mathematical development of the theory this paper', 'suggests the ways in which automata theory might evolve over', 'the next 25 years if it is to contribute to', 'an understanding of how the brain processes information cacm july', '1972 arbib m a automata theory brain theory network complexity', 'resolution of redundancy of potential command frog visual system reticular', 'formation mode selection 3.36 3.65 5.22 ca720701 jb january 30', '1978 3:46 pm']), ('CACM-2650', ['order n correction for regular languages a method is presented', 'for calculating a string b belonging to a given regular', 'language l which is nearest in number of edit operations', 'to a given input string a b is viewed as', 'a reasonable correction for the possibly erroneous string a where', 'a was originally intended to be a string of l', 'the calculation of b by the method presented requires time', 'proportional to a the number of characters in a the', 'method should find applications in information retrieval artificial intelligence and', 'spelling correction systems cacm may 1974 wagner r a error', 'correction regular languages regular events finite state automata compiler error', 'recovery spelling correction string best match problem correction corrector errors', 'nondeterministic finite state automata 4.12 4.20 5.22 5.23 5.42 ca740503', 'jb january 17 1978 4:26 pm']), ('CACM-1678', ['automata formal languages abstract switching and computability in a ph', 'computer science program a number of courses are listed in', 'the area describe as automata formal languages abstract switching and', 'computability that might be available to a ph student in', 'computer science a brief catalog description of each course is', 'applied and the role of each of the courses in', 'the graduate program is discussed cacm november 1968 mcnaughton r', 'ph computer science curriculum ph computer science program automata formal', 'languages switching theory theory of computability 1.5 5.2 6.1 ca681101', 'jb february 21 1978 3:16 pm']), ('CACM-2112', ['translation equations input limited transduction expressions or translation equations are', 'used to describe the syntax and left context sensitive semantics', 'for context free languages a formal procedure is given for', 'deriving from a set of translation equations the specifications for', 'a pushdown translator the translator consists of mealy form finite', 'state automata interacting by means of a pushdown stack within', 'the framework described string recognition and parsing may be treated', 'as special cases of the translation problem cacm february 1970', 'vere s automata turing machines regular expression transduction expression context', 'free languages translation recognizers parsing meta compilers pushdown transducer syntax', 'directed compilers finite state automata 4.10 4.12 4.20 5.22 ca700203', 'jb february 14 1978 10:49 am']), ('CACM-2921', ['regular right part grammars and their parsers this paper in', 'troduces an alternative to context free grammars called regular right', 'part rrp grammars which resemble pascal syntax diagrams formally rrp', 'grammars have production right parts which are nondeterministic finite state', 'machines fsms and as a special case regular expressions since', 'these can be converted to fsms rrp grammars describe the', 'syntax of programming languages more concisely and more understandably than', 'is possible with cf grammars also in troduced is a', 'class of parsers rrp lr m k parsers which includes', 'the cf lr k parsers and provides the same advantages', 'informally an rrp lr m k parser can determine the', 'right end of each handle by considering at most k', 'symbols to the right of the handle and the left', 'end after the right end has been found by considering', 'at most m symbols to the left of the handle', 'a mechanism for determining the left end is required because', 'there is no bound on the length of the handle', 'cacm october 1977 lalonde w r finite state machines automata', 'regular expressions syntax diagrams lr k grammars parser construction parsing', 'programming languages language generation formal definition compilers translators scanners 4.2', '5.21 5.23 ca771005 jb december 27 1977 11:01 am'])]
57->[('CACM-3077', ['can programming be liberated from the von neumann style a', 'functional style and its algebra of programs conventional programming languages', 'are growing ever more enormous but not stronger inherent defects', 'at the most basic level cause them to be both', 'fat and weak their primitive word at a time style', 'of programming inherited from their common ancestor the von neumann', 'computer their close coupling off semantics to state transitions their', 'division of programming into a world of expressions and a', 'world of statements their inability to effectively use powerful combining', 'forms for building new programs from existing ones and their', 'lack of useful mathematical properties for reasoning about programs an', 'alternative functional style of programming is founded on the use', 'of combining forms for creating programs functional programs deal with', 'structured data are often nonrepetitive and nonrecursive are hierarchically constructed', 'do not name their arguments and do not require the', 'complex machinery of procedure declarations to become generally applicable combining', 'forms can use high level programs to build still higher', 'level ones in a style not possible in conventional languages', 'associated with the functional style of programming is an algebra', 'of programs whose variables range over programs and whose operations', 'are combining forms this algebra can be used to transform', 'programs and to solve equations whose unknowns are programs in', 'much the same way one transforms equations in high school', 'algebra these transformations are given by algebraic laws and are', 'carried out in the same language in which programs are', 'written combining forms are chosen not only for their programming', 'power but also for the power of their associated algebraic', 'laws general theorems of of the algebra give the detailed', 'behavior and termination conditions for large classes of programs a', 'new class of computing systems uses the functional programming style', 'both in its programming language and in its state transition', 'rules unlike von neumann languages these systems have semantics loosely', 'coupled to states only one state transition occurs per major', 'computation cacm august 1978 backus j functional programming algebra of', 'programs combining forms functional forms programming languages von neumann computers', 'von neumann languages models of computing systems applicative computing systems', 'applicative state transition systems program transformation program correctness program termination', 'metacomposition 4.20 4.29 5.20 5.24 5.26 ca780801 dh february 7', '1979 3:13 pm']), ('CACM-3140', ['social processes and proofs of theorems and programs it is', 'argued that formal verifications of programs no matter how obtained', 'will not play the same key role in the development', 'of computer science and software engineering as proofs do in', 'mathematics furthermore the absence of continuity the inevitability of change', 'and the complexity of specification of significantly many real programs', 'make the form al verification process difficult to justify and', 'manage it is felt that ease of formal verification should', 'not dominate program language design cacm may 1979 de millo', 'r lipton r perlis a formal mathematics mathematical proofs program', 'verification program specification 2.10 4.6 5.24 ca790501 dh june 5', '1979 2:23 pm']), ('CACM-1705', ['a set of basic input output procedures algorithm 335 15', 'by means of the primitives in symbol outsymbol and length', 'as requested by this journal s algorithms policy comm acm', '10 nov 67 729 a basic set of input output', 'procedures is defined aiming at quality and flexibility outreal for', 'instance is written as a derived procedure it outputs using', 'the fixed point or the floating point representation and rounds', 'properly variants can easily be written because of the explicit', 'call of the procedures decompose integer and decompose real the', 'highly recommended practice of echoing input is made easy with', 'one subset of derived procedures ioi ior iob ioa the', 'documentation of output in the form of equivalent algol statements', 'is also provided when use is made of the subset', 'oti otr otb ota the berkeley style of providing information', 'on the form of output using prior calls of procedures', 'such as real format is defined a use of the', 'parameter outchannel to provide information for simultaneous output to several', 'channels is suggested interrelationship between the declared procedures is furnished', 'in tabular form cacm august 1968 de vogelaere r input', 'output transput input output procedures input echo quality output decompose', 'integer decompose real style berkeley style procedures relationship output documentation', 'equivalent algol statements algol algol 60 integer format real format', 'out integer read real input output boolean input output array', 'fixed point representation floating point representation output channel interpretation 4.0', '4.41 ca680809 jb february 22 1978 10:32 am']), ('CACM-2705', ['programming languages natural languages and mathematics some social aspects of', 'programming are illuminated through analogies with similar aspects of mathematics', 'and natural languages the split between pure and applied mathematics', 'is found similarly in programming the development of natural languages', 'toward flexion less word order based language types speaks for', 'programming language design based on general abstract constructs by analogy', 'with incidents of the history of artificial auxiliary languages it', 'is suggested that fortran and cobol will remain dominant for', 'a long time to come the most promising avenues for', 'further work of wide influence are seen to be high', 'quality program literature i e programs of general utility and', 'studies of questions related to program style cacm december 1975', 'naur p analogies related to social aspects pure and applied', 'mathematics language quality language development artificial auxiliary languages literature style', 'descriptive and prescriptive attitudes 4.20 ca751202 jb january 6 1978', '8:30 am']), ('CACM-2922', ['two level control structure for nondeterministic programming the basic ideas', 'of nondeterministic programming are critically reconsidered to single out a', 'proper attitude and programming style for language allowing direct control', 'of nondeterministic features the proposed attitude aims at retaining the', 'purity of the nondeterministic formulation of search processes on one', 'level the attempt level deferring the coordination of problem solving', 'efforts to another the choice level the feasibility of recognizing', 'these two levels is discussed stressing that the structure to', 'be managed at the choice level is a free of', 'contexts the leaves are computational environments each holding an alternative', 'under inspection while the other nodes are associated with choice', 'poin ts according to the proposed programming style a generative', 'function is associated with each choice poin t which expresses', 'the desired choice strategy the main advantage on this approach', 'is the localization of the search strategies each nonterminal node', 'of the tree keeps track of the state of the', 'computation as it was when the choice poin t was', 'last interrogated holding at the same time the strategy to', 'coordinate the available alternatives examples are given in term of', 'nd lisp an extension of lisp designed and implemented according', 'to these guidelines cacm october 1977 montangero c pacini g', 'turini f nondeterministic programming artificial in telligence control structures backtracking', 'search strategy planning context tree 3.64 4.22 ca771004 jb december', '27 1977 11:30 am'])]
58->[('CACM-2634', ['an evaluation of statistical software in the social sciences several', 'hundred college and university computer installations now offer various types', 'of statistical packages for general use among those most widely', 'available are osiris spss bmd data text and tsar in', 'order to provide users with a basis for selection and', 'use tests were made for each of these systems and', 'the results are summarized as to cost and performance cacm', 'june 1974 slysz w d statistical computation statistical software descriptive', 'statistics bivariate tables pearson correlation regression factor analysis one way', 'analysis of variance 1.3 3.30 4.19 4.22 4.49 5.5 ca740612', 'jb january 17 1978 2:54 pm']), ('CACM-1344', ['statistical computations based upon algebraically specified models based upon a', 'machine readable statistical model and related symbolic specifications an efficient', 'method of performing calculations for statistical models of a balanced', 'complete nature is presented fixes mixed and random analysis of', 'variance models are considered a procedure for obtaining variance components', 'and calculated f statistics for the model terms is included', 'cacm december 1966 schlater j e hemerle w j ca661206', 'jb march 2 1978 2:33 pm']), ('CACM-1709', ['a modification of efroymson s technique for stepwise regression analysis', 'the computational technique conventionally used for stepwise multiple linear regression', 'requires the storage of an n x n matrix of', 'data when the number of variables n is large this', 'requirement taxes the storage capacity of presently used machinery the', 'near symmetry of the matrices involved permits a modification requiring', 'only half the storage and computations of the conventional algorithm', 'and this additional storage allows the analysis of problems containing', 'more variables alternatively it permits the analysis of problems containing', 'the same number of variables but with all computations performed', 'in double precision cacm august 1968 breaux h j multiple', 'linear regression statistical recurrence formulas correlation linear statistical models statistical', 'computer programs curve fitting 4.0 4.40 5.0 5.5 5.10 5.13', 'ca680805 jb february 22 1978 10:52 am']), ('CACM-1474', ['tests of probabilistic models for propagation of roundoff errors in', 'any prolonged computation it is generally assumed that the accumulated', 'effect of roundoff errors is in some sense statistical the', 'purpose of this paper is to give precise descriptions of', 'certain probabilistic models for roundoff error and then to describe', 'a series of experiments for testing the validity of these', 'models it is concluded that the models are in general', 'very good discrepancies are both rare and mild the test', 'techniques can also be used to experiment with various types', 'of special arithmetic cacm february 1966 hull t e swenson', 'j r ca660210 jb march 3 1978 2:37 pm']), ('CACM-1171', ['a comparison of the primal simplex and primal dual algorithms', 'for linear programming a statistical comparison of the primal dual', 'and the more commonly used primal simplex algorithm for solving', 'linear programming problems has been made under the assumption of', 'starting with a full artificial basis under these conditions the', 'primal dual method shows a statistically significant superiority on randomly', 'generated problems it has also been found via a regression', 'analysis that the relevant parameters in determining the difference in', 'the number of iterations between the algorithms is not only', 'the number of constraints and the number of variables but', 'also the ratio of the latter to the former cacm', 'november 1965 mueller r k cooper l ca651110 jb march', '6 1978 4:50 pm'])]
59->[('CACM-1456', ['storage and retrieval of aspects of meaning in directed graph', 'structures an experimental system that uses lisp to make a', 'conceptual dictionary is described the dictionary associates with each english', 'word the syntactic information definitional material and references to the', 'contexts in which it has been used to define other', 'words such relations as class inclusion possession and active or', 'passive actions are used as definitional material the resulting structure', 'serves as a powerful vehicle for research on the logic', 'of question answering examples of methods of inputting information and', 'answering simple english questions are given an important conclusion is', 'that although lisp and other list processing languages are ideally', 'suited for producing complex associative structures they are inadequate vehicles', 'for language processing on any large scale at east until', 'they can use auxiliary memory as a continuous extension of', 'core memory cacm march 1966 simmons r f ca660316 jb', 'march 3 1978 11:25 am']), ('CACM-2437', ['general performance analysis of key to address transformation methods using', 'an abstract file concept this paper presents a new approach', 'to the analysis of performance of the various key to', 'address transformation methods in this approach the keys in a', 'file are assumed to have been selected from the key', 'space according to a certain probabilistic selection algorithm all files', 'with the same number of keys selected from this key', 'space will be suitably weighted in accordance with the algorithm', 'and the average performance of the transformation methods on these', 'files will be used as the potential of these methods', 'using this analysis methods with the same overall performance can', 'be classified and key distributions partial to certain transformations can', 'be identified all this can be done analytically the approach', 'is applied to a group of transformation methods using files', 'whose keys are selected randomly cacm october 1973 lum v', 'y hashing hashing techniques hashing methods hash coding key transformation', 'key to address transformation direct addressing randomizing random access scatter', 'storage information retrieval hashing analysis randomization performance analysis 3.7 3.72', '3.73 3.74 3.79 4.9 5.9 ca731003 jb january 20 1978', '11:51 am']), ('CACM-1681', ['easy english a language for information retrieval through a remote', 'typewriter console easy english is a natural command language designed', 'to simplify communication between man and machine through remote typewriter', 'console it has been developed for retrieval of documents from', 'a computerized data base the moore school information systems laboratory', 'files requests are formulated in a standardized syntactical form examples', 'of which are presented and this form is then transformed', 'into an equivalent query expressed in the retrieval system s', 'original symbolic command language which is briefly described operation of', 'easy english is detailed by illustration of the transformations performed', 'upon a sample request up to the point at which', 'the request string is sent to the system a macro', 'flowchart of easy english is included and an appendix provides', 'the printout of a retrieval demonstration cacm october 1968 rubinoff', 'm bergman s cautin h rapp f natural language communication', 'on line searching remote console communication information retrieval man machine', 'communication remote terminal communication translator document retrieval conversational mode information', 'retrieval language symbolic command language 3.74 3.81 4.19 ca681006 jb', 'february 21 1978 3:59 pm']), ('CACM-1855', ['a program for the syntactic analysis of english sentences a', 'program is described which produces syntactic analyses of english sentences', 'with respect to a transformational grammar the main features of', 'the analyzer are that it uses only a limited dictionary', 'of english words and that it pursues all analysis paths', 'simultaneously while processing the sentence from left to right the', 'form of representation used for the dictionary and the grammar', 'is indicated and an outline account is given of the', 'analysis procedure techniques for keeping the size of the analysis', 'record within reasonable limits and for avoiding the need for', 'dynamic application of certain transformational rules are described a number', 'of examples of output produced by the program are given', 'the output includes timing information cacm august 1969 dewar h', 'bratley p syntactic analysis language processing language analysis parsing analysis', 'procedure recognition procedure english sentences linguistics psycholinguistics transformational grammar limited', 'dictionary predictive analysis 3.42 3.36 ca690808 jb february 15 1978', '5:24 pm']), ('CACM-0144', ['do it by the numbers digital shorthand present communications systems', 'transmit single characters in groups of coded pulses between simple', 'terminal equipments since english words form only a sparse set', 'of all possible alphabetic combinations present methods are inefficient when', 'computer systems are substituted for these terminals using numeric representations', 'of entire words or common phrases rather than character by', 'character representations requires approximately one third of present transmission time', 'this saving is reflected in overall costs other benefits accrue', 'in code and language translation schemes provision is made for', 'transmission of purely numeric and or binary streams and for', 'single character transmission of non dictionary words such as the', 'names of people or places cacm october 1960 bemer r', 'w ca601004 jb march 20 1978 8:27 pm'])]
60->[('CACM-2967', ['a comparison of hardware and software associative memories in the', 'context of computer graphics the associative processing of line drawings', 'apld system utilizes a hardware associative memory and creates modifies', 'deletes stores and retrieves two dimensional line drawings consisting of', 'poin ts lines rectangles and triangles the apld functions were', 'duplicated on the tx-2 computer at m s lincoln laboratory', 'under the leap language and data structure a comparison of', 'the hardware approach with the software simulation illustrates the advantages', 'of the hardware associative memory in three areas 1 processing', 'speed 2 storage requirements and 3 flexibility the major problem', 'areas of hardware associative memory technology namely input output and', 'cost effectiveness are also addressed cacm may 1977 stillman n', 'j berra p b associative memory associative processor content addressable', 'memory graphics information retrieval data structures software evaluation hardware evaluation', 'parallel processing database management 3.71 3.72 3.73 3.74 4.34 4.6', '6.22 8.2 ca770505 jb december 29 1977 2:07 am']), ('CACM-3087', ['an english language question answering system for a large relational', 'database by typing requests in english casual users will be', 'able to obtain explicit answers from a large relational database', 'of aircraft flight and maintenance data using a system called', 'planes the design and implementation of this system is described', 'and illustrated with detailed examples of the operation of system', 'components and examples of overall system operation the language processing', 'portion of the system uses a number of augmented transition', 'networks each of which matches phrases with a specific meaning', 'along with context registers his tory keepers and concept case', 'frames these are used for judging meaningfulness of questions generating', 'dialogue for clarifying partially understood questions and resolving ellipsis and', 'pronoun reference problems other system components construct a formal query', 'for the relational database and optimize the order of searching', 'relations methods are discussed for handling vague or complex questions', 'and for providing browsing ability also included are discussions of', 'important issues in programming natural language systems for limited domains', 'and the relationship of this system to others cacm july', '1978 waltz d question answering relational database natural language database', 'front end artificial intelligence dialogue query generation information retrieval natural', 'language programming 3.42 3.60 3.69 3.74 3.79 ca780701 dh february', '8 1979 4:26 pm']), ('CACM-2593', ['a back end computer for data base management it is', 'proposed that the data base management function be placed on', 'a dedicated back end computer which accepts commands in a', 'relatively high level language such as the codasyl data base', 'task group april 1971 report from a host computer accesses', 'the data base on secondary storage and returns results the', 'advantages of such a configuration are discussed an experimental implementation', 'called the experimental data management system xdms is described and', 'certain conclusions about the back end approach are drawn from', 'this implementation cacm october 1974 canaday r h harrison r', 'd ivie e l ryder j l wehr l a', 'data base management information retrieval computer configurations computer networks data', 'base task group language data base protection data base portability', 'back end computer 3.79 4.22 4.33 4.35 ca741005 jb january', '16,1978 12:35 pm']), ('CACM-2311', ['a generational perspective of information system development system development is', 'categorized from a generational point of view that parallels the', 'commonly described computing system generations for each generation the scope', 'of development projects and the technological world view of the', 'system developer are examined cacm july 1972 benjamin r i', 'computing milieu management data processing hardware systems software systems systems', 'development process functional systems management systems 2.0 3.50 4.0 6.20', 'ca720717 jb january 30 1978 11:22 am']), ('CACM-2738', ['use of the concept of transparency in the design of', 'hierarchically structured systems this paper deals with the design of', 'hierarchically structured programming systems it develops a method for evaluating', 'the cost of requiring programmers to work with an abstraction', 'of a real machine a number of examples from hardware', 'and software are given as illustrations of the method cacm', 'july 1975 parnas d l siewiorek d p hierarchical systems', 'bottom up design levels of abstraction synchronization primitives 4.20 4.30', '6.1 6.20 ca750704 dmm january 31 1978 3:46 pm'])]
61->[('CACM-2711', ['a vector space model for automatic indexing in a document', 'retrieval or other pattern matching environment where stored entities documents', 'are compared with each other or with incoming patterns search', 'requests it appears that the best indexing property space is', 'one where each entity lies as far away from the', 'others as possible in these circumstances the value of an', 'indexing system may be expressible as a function of the', 'density of the object space in particular retrieval performance may', 'correlate inversely with space density an approach based on space', 'density computations is used to choose an optimum indexing vocabulary', 'for a collection of documents typical evaluation results are shown', 'demonstrating the usefulness of the model cacm november 1975 salton', 'g wong a yang c s automatic information retrieval automatic', 'indexing content analysis document space 3.71 3.73 3.74 3.75 ca751101', 'jb january 6 1978 10:14 am']), ('CACM-2307', ['dynamic document processing the current role of computers in automatic', 'document processing is briefly outlined and some reasons are given', 'why the early promise of library automation and of the', 'mechanization of documentation processes has not been fulfilled a new', 'dynamic document environment is then outlined in which clustered files', 'are searched and information is retrieved following an interactive user', 'controlled search process methods are described for an automatic query', 'modification based on user needs and for a continuous reorganization', 'of the stored information as a function of earlier file', 'processing and of normal collection growth the proposed procedures provide', 'powerful tools for information retrieval and for the control of', 'dynamic library collections in which new items are continually added', 'and old ones are retired cacm july 1972 salton g', 'automatic indexing automatic search and retrieval iterative searching mechanized library', 'processing collection growth collection retirement feedback search 3.62 3.71 3.73', '3.74 ca720721 jb january 30 1978 10:59 am']), ('CACM-0634', ['manipulation of trees in information retrieval cacm february 1962 salton', 'g ca620209 jb march 20 1978 3:44 pm']), ('CACM-1236', ['the smart automatic document retrieval system an illustration a fully', 'automatic document retrieval system operating on the ibm 7094 is', 'described the system is characterized by the fact that several', 'hundred different methods are available to analyze documents and search', 'requests this feature is used in the retrieval process by', 'leaving the exact sequence of operations initially unspecified and adapting', 'the search strategy to the needs of individual users the', 'system is used not only to simulate an actual operating', 'environment but also to test the effectiveness of the various', 'available processing methods results obtained so far seem to indicate', 'that some combination of analysis procedures can in general be', 'relied upon to retrieve the wanted information a typical search', 'request is used as an example in the present report', 'to illustrate systems operations and evaluation procedures cacm june 1965', 'salton g lesk m e ca650619 jb march 6 1978', '9:41 pm']), ('CACM-2451', ['design of tree structures for efficient querying a standard information', 'retrieval operation is to determine which records in a data', 'collection satisfy a given query expressed in terms of data', 'values the process of locating the desired responses can be', 'represented by a tree search model this paper poses an', 'optimization problem in the design of such trees to serve', 'a well specified application the problem is academic in the', 'sense that ordinarily the optimal tree cannot be implemented by', 'means of practical techniques on the other hand it is', 'potentially useful for the comparison it affords between observed performance', 'and that of an intuitively attractive ideal search procedure as', 'a practical application of such a model this paper considers', 'the design of a novel tree search scheme based on', 'a bit vector representation of data and shows that essentially', 'the same algorithm can be used to design either an', 'ideal search tree or a bit vector tree an experimental', 'study of a small formatted file illustrates the concepts cacm', 'september 1973 casey r g tree file information storage and', 'retrieval clustering search data structure data management query answering 3.62', '3.74 ca730904 jb january 23 1978 9:38 am'])]
62->[('CACM-1961', ['an efficient search algorithm to find the elementary circuits of', 'a graph a theoretically most efficient search algorithm is presented', 'which uses an exhaustive search to find all of the', 'elementary circuits of a graph the algorithm can be easily', 'modified to find all of the elementary circuits with a', 'particular attribute such as length a rigorous proof of the', 'algorithm is given as well as an example of its', 'application empirical bounds are presented relating the speed of the', 'algorithm to the number of vertices and the number of', 'arcs the speed is also related to the number of', 'circuits in the graph to give a relation between speed', 'and complexity extensions to undirected and s graphs are discussed', 'cacm december 1970 tiernan j c algorithm graph theory circuit', 'search algorithm path search algorithm searching 3.74 5.32 ca701202 jb', 'february 9 1978 4:12 pm']), ('CACM-2430', ['the elementary circuits of a graph h algorithm a459 cacm', 'october 1973 syslo m m algorithm graph theory circuit search', 'algorithm path search algorithm searching 3.74 4.22 5.32 ca731010 jb', 'january 20 1978 11:11 am']), ('CACM-2932', ['complexity of computations the framework for research in the theory', 'of complexity of computations is described emphasizing the in terrelation', 'between seemingly diverse problems and methods illustrative examples of practical', 'and theoretical significance are given directions for new research are', 'discussed cacm september 1977 rabin m o complexity of computations', 'algebraic complexity in tractable problems probabilistic algorithms 5.25 ca770901 jb', 'december 28 1977 6:54 am']), ('CACM-2327', ['toward an automata theory of brains a source of ideas', 'for automata theory the study of the brain has been', 'pushed aside in mathematical development of the theory this paper', 'suggests the ways in which automata theory might evolve over', 'the next 25 years if it is to contribute to', 'an understanding of how the brain processes information cacm july', '1972 arbib m a automata theory brain theory network complexity', 'resolution of redundancy of potential command frog visual system reticular', 'formation mode selection 3.36 3.65 5.22 ca720701 jb january 30', '1978 3:46 pm']), ('CACM-2216', ['on the probability distribution of the values of binary trees', 'an integral equation is derived for the generating function for', 'binary tree values the values reflecting sorting effort the analysis', 'does not assume uniformly distributed branching ratios and therefore is', 'applicable to a family of sorting algorithms discussed by hoare', 'singleton and van emden the solution to the integral equation', 'indicates that using more advanced algorithms in the family makes', 'only minor reductions in the expected sorting effort but substantially', 'reduces the variance in sorting effort statistical tests of the', 'values of several thousand trees containing up to 10,000 points', 'have given first second and third moments of the value', 'distribution function in satisfactory agreement with the moments computed from', 'the generating function the empirical tests as well as the', 'analytical results are in agreement with previously published results for', 'the first moment in the cases of uniform and nonuniform', 'distribution of branching ratio and for the second moment in', 'the case of uniform distribution of branching ratio cacm february', '1971 hurwitz jr h binary trees sorting statistical analysis 4.40', '5.18 5.5 ca710205 jb february 8 1978 9:09 am'])]
63->[('CACM-2289', ['cellular arrays for the solution of graph problems a cellular', 'array is a two dimensional checkerboard type interconnection of identical', 'modules or cells where each cell contains a few bits', 'of memory and a small amount of combinational logic and', 'communicates mainly with its immediate neighbors in the array the', 'chief computational advantage offered by cellular arrays is the improvement', 'in speed achieved by virtue of the possibilities for parallel', 'processing in this paper it is shown that cellular arrays', 'are inherently well suited for the solution of many graph', 'problems for example the adjacency matrix of a graph is', 'easily mapped onto an array each matrix element is stored', 'in one cell of the array and typical row and', 'column operations are readily implemented by simple cell logic a', 'major challenge in the effective use of cellular arrays for', 'the solution of graph problems is the determination of algorithms', 'that exploit the possibilities for parallelism especially for problems whose', 'solutions appear to be inherently serial in particular several parallelized', 'algorithms are presented for the solution of certain spanning tree', 'distance and path problems with direct applications to wire routing', 'pert chart analysis and the analysis of many types of', 'networks these algorithms exhibit a computation time that in many', 'cases grows at a rate not exceeding log2 n where', 'n is the number of nodes in the graph straightforward', 'cellular implementations of the well known serial algorithms for these', 'problems require about n steps and noncellular implementations require from', 'n 2 to n 3 steps cacm september 1972 levitt', 'k n kautz w h graph theory cellular logic in', 'memory arrays parallel processing special purpose computers algorithms for distance', 'and spanning tree problems 5.32 6.22 6.5 ca720901 jb january', '30 1978 9:16 am']), ('CACM-3075', ['fast parallel sorting algorithms a parallel bucket sort algorithm is', 'presented that requires time o log n and the use', 'of n processors the algorithm makes use of a technique', 'that requires more space than the product of processors and', 'time a realistic model is used model is used in', 'which no memory contention is permitted a procedure is also', 'presented to sort n numbers in time o k log', 'n using n 1 1 k processors for k an', 'arbitrary integer the model of computation for this procedure permits', 'simultaneous fetches from the same memory location cacm august 1978', 'hirschberg d parallel processing sorting algorithms bucket sort 3.74 4.34', '5.25 5.31 ca780803 dh february 7 1979 10:25 am']), ('CACM-2266', ['a highly parallel algorithm for approximating all zeros of a', 'polynomial with only real zeros an algorithm is described based', 'on newton s method which simultaneously approximates all zeros of', 'a polynomial with only real zeros the algorithm which is', 'conceptually suitable for parallel computation determines its own starting values', 'so that convergence to the zeros is guaranteed multiple zeros', 'and their multiplicity are readily determined at no point in', 'the method is polynomial deflation used cacm november 1972 patrick', 'm l parallel numerical algorithms real polynomials real zeros newton', 's method starting values guaranteed convergence 5.15 ca721103 jb january', '27 1978 2:35 pm']), ('CACM-2973', ['sorting on a mesh connected parallel computer two algorithms are', 'presented for sorting n 2 elements on an n x', 'n mesh connected processor array that require o n routing', 'and comparison steps the best previous algorithm takes time o', 'n log n the algorithms of this paper are shown', 'to be optimal in time within small constant factors extensions', 'to higher dimensional arrays are also given cacm april 1977', 'thompson c d kung h t parallel computer parallel sorting', 'parallel merge routing and comparison steps perfect shuffle processor in', 'terconnection pattern 4.32 5.25 5.31 ca770409 jb december 29 1977', '4:58 am']), ('CACM-0950', ['parallel methods for integrating ordinary differential equations this paper is', 'dedicated to the proposition that in order to take full', 'advantage for real time computations of highly parallel computers as', 'can be expected to be available in the near future', 'much of numerical analysis will have to be recast in', 'a more parallel form by this is meant that serial', 'algorithms ought to be replaced by algorithm which consist of', 'several subtasks which can be computed without knowledge of the', 'results of the other subtasks as an example a method', 'is proposed for parallelizing the numerical integration of an ordinary', 'differential equation which process by all standard methods is entirely', 'serial cacm december 1964 nievergelt j ca641221 jb march 9', '1978 3:09 pm'])]
64->[('CACM-2651', ['the treatment of data types in el1 in constructing a', 'general purpose programming language a key issue is providing a', 'sufficient set of data types and associated operations in a', 'manner that permits both natural problem oriented notation and efficient', 'implementation the el1 language contains a number of features specifically', 'designed to simultaneously satisfy both requirements the resulting treatment of', 'data types includes provision for programmer defined data types data', 'types and generic routines programmer control over type conversion and', 'very flexible data type behavior in a context that allows', 'efficient compiled code and compact data representation cacm may 1974', 'wegbreit b data types modes mode unions type conversion coercion', 'generic functions extensible languages data type definition data description language', 'compilation 4.12 4.13 4.22 ca740502 jb january 17 1978 4:32', 'pm']), ('CACM-1035', ['characteristics of the fortran cep language the fortran cep languages', 'differs from fortran ii mainly because 1 it extends the', 'variety of the modes for real quantities 2 it allows', 'suitable mixtures in an input output list or in an', 'expression of quantities that occur under different modes 3 it', 'makes it possible to address a greater number of input', 'output equipment and 4 it removes the restrictions on the', 'complexity of the list of quantities to be transmitted between', 'the magnetic core memory and the drum or the magnetic', 'tape units cacm july 1964 mancino o g ca640712 jb', 'march 9 1978 8:11 pm']), ('CACM-0944', ['storage and search properties of a tree organized memory system', 'a memory with list properties 1 may be used to', 'construct numeric alphabetic or alphanumeric trees such trees have information', 'storage and retrieval properties applicable to problems involving large quantities', 'of data or to problems where the quantity word length', 'and distribution of stored information is not known a priori', 'or changes rapidly during the processing the purpose of this', 'paper is to examine the storage and search properties of', 'a tree organized storage system assuming that a memory possessing', 'certain list properties is available of prime interest is the', 'application where a symbol table dictionary or similar file is', 'to be stored and searched cacm january 1963 scidmore a', 'k weinberg b l ca630104 jb march 14 1978 3:02', 'pm']), ('CACM-1307', ['a lightpen controlled program for on line data analysis this', 'paper describes a technique designed to ease the use of', 'a data processing system by a person in particular a', 'scientist who is intimately and primarily concerned with interpreting the', 'significance of data handled by the system since such a', 'person is often unable to spend the time necessary to', 'master a programming language it is essential that he be', 'aided in composing commands to the computer in the system', 'described the user is not required to learn or remember', 'the vocabulary of the language because the vocabulary is displayed', 'before him on menus by means of a computer drive', 'scope he selects the various vocabulary elements required by pointing', 'with the light pen by use of a small unordered', 'set of rewriting rules applied as a result of light', 'pen selections the user generates only syntactically correct commands to', 'the system he does not have to learn or remember', 'the grammar the program restricts the user severely in the', 'particular language he can use but the method for communicating', 'with the program makes these restrictions seem quite natural and', 'unconstraining the program has been used successfully for over ten', 'months cacm february 1965 goodenough j b ca650217 jb march', '7 1978 10:40 pm']), ('CACM-1590', ['pitch period determination of speech sounds a computer procedure which', 'determines pitch periods by the recognition of the peak structure', 'of the speech waveform is described speech sounds were sampled', 'by a microphone and an analog to digital converter attached', 'to an interconnected ibm 7090 pdp-1 system these utterances were', 'recorded at the normal noise level of the computer room', 'but were not band compressed or phase distorted in any', 'manner a sequence of operations defined on the speech wave', 'selects a list of points along the waveform as candidates', 'for pitch markers these markers are validated by an error', 'detection and correction procedurebout 95 percent of the pitch periods', 'were recognized correctly within 1 to 2 times real time', 'on the ibm 7090 cacm june,1967 reddy d r ca670602', 'jb february 28 1978 9:42 am'])]
