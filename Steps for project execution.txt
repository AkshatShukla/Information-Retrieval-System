Steps for project execution:

PHASE 1:
TASK 1 Steps:

1. Execute Phase 1/Task 1/Step 1/tokenizer.py
I/P: Raw HTML dir
O/P: Phase 1/Task 1/Step 1/Tokenizer Output/

2. Execute Phase 1/Task 1/Step 2/create_inverted_list.py
I/P: Phase 1/Task 1/Step 1/Tokenizer Output/
O/P: Phase 1/Task 1/Setp 2/Inverted_List.txt
	 Phase 1/Task 1/Step 2/DocumentID_DocLen.txt
	 Phase 1/Task 1/Encoded Data Structures/Encoded-Inverted_List.txt
	 Phase 1/Task 1/Encoded Data Structures/Encoded-DocumentID_DocLen.txt

3. Execute Phase 1/Task 1/Step 3/query_cleaning.py
I/P: Phase 1/Task 1/Step 3/cacm.query.txt
O/P: Phase 1/Task 1/Step 3/Cleaned_Queries.txt
	 Phase 1/Task 1/Encoded Data Structures/Encoded-Cleaned_Queries.txt

4. Execute the 4 algorithms of ranking (BM25, Lucene, TFIDF, Query Likelihood Model)

A.

a. Execute Phase 1/Task 1/Step 4/BM25/bm25_no_relevance.py
	- I/P: Phase 1/Task 1/Encoded Data Structures/Encoded-Inverted_List.txt
	- I/P: Phase 1/Task 1/Encoded Data Structures/Encoded-DocumentID_DocLen.txt
	- I/P: Phase 1/Task 1/Encoded Data Structures/Encoded-Cleaned_Queries.txt
	- O/P: BM25_NonRelevance_Top5_Docs.txt
	- O/P: BM25_NonRelevance_Top5_Query_Pages.txt
	- O/P: BM25_NonRelevance_Top100_Pages.txt
b. Execute Phase 1/Task 1/Step 4/BM25/rel_doc.py
	- I/P: cacm.rel.txt
	- O/P: Phase 1/Task 1/Encoded Data Structures/Encoded-QueryID_RelevantDocs.txt
b. Execute Phase 1/Task 1/Step 4/BM25/bm25_relevance.py
	- I/P: Phase 1/Task 1/Encoded Data Structures/Encoded-Inverted_List.txt
	- I/P: Phase 1/Task 1/Encoded Data Structures/Encoded-DocumentID_DocLen.txt
	- I/P: Phase 1/Task 1/Encoded Data Structures/Encoded-Cleaned_Queries.txt
	- I/P: Phase 1/Task 1/Encoded Data Structures/Encoded-QueryID_RelevantDocs.txt
	- O/P: BM25_Relevance_Top5_Docs.txt
	- O/P: BM25_Relevance_Top5_Query_Pages.txt
	- O/P: BM25_Relevance_Top100_Pages.txt

B. Executee Phase 1/Task 1/Step 4/TF-IDF/tf-idf.py
	- I/P: Phase 1/Task 1/Encoded Data Structures/Encoded-Inverted_List.txt
	- I/P: Phase 1/Task 1/Encoded Data Structures/Encoded-DocumentID_DocLen.txt
	- I/P: Phase 1/Task 1/Encoded Data Structures/Encoded-Cleaned_Queries.txt
	- O/P: TF_IDF_Top5_Pages.txt
	- O/P: TF_IDF_Top100_Pages.txt

C. Executee Phase 1/Task 1/Step 4/QLM/QLM.py
	- I/P: Phase 1/Task 1/Encoded Data Structures/Encoded-Inverted_List.txt
	- I/P: Phase 1/Task 1/Encoded Data Structures/Encoded-DocumentID_DocLen.txt
	- I/P: Phase 1/Task 1/Encoded Data Structures/Encoded-Cleaned_Queries.txt
	- O/P: QLM_Top5_Pages.txt
	- O/P: QLM_Top100_Pages.txt

D. Executee Phase 1/Task 1/Step 4/Lucene/HW4.py
	- I/P: Phase 1/Task 1/Encoded Data Structures/Encoded-Inverted_List.txt
	- I/P: Phase 1/Task 1/Encoded Data Structures/Encoded-DocumentID_DocLen.txt
	- I/P: Phase 1/Task 1/Encoded Data Structures/Encoded-Cleaned_Queries.txt
	- O/P: Lucene_Top5_Pages.txt
	- O/P: Lucene_Top100_Pages.txt


Task 2 Steps:

1. Execute 

TASK 3 Steps:

1. Exectute Phase 1/Task 2/Step 1/tokenizer_with_stopping.py
I/P: Raw HTML dir
I/P: Phase 1/Task 2/common_words.txt
O/P: Phase 1/Task 2/Step 1/Stopped Tokenized Output/

2. Execute Phase 1/Task 2/Step 2/
